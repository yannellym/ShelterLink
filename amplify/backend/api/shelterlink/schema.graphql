input AMPLIFY { globalAuthRule: AuthRule = { allow: private, operations: [create, read, update, delete] } }

type User @model {
  id: ID!
  username: String!
  email: String!
  favoritePets: [UserPetFavorite] @connection(keyName: "byUser", fields: ["id"])
}

type Address {
  city: String
  state: String
}

type Pet @model {
  id: ID!
  name: String!
  age: Int
  gender: String
  size: String
  breeds: Breeds
  description: String
  imageUrl: String
  contact: Contact
  favoriteUsers: [UserPetFavorite] @connection(keyName: "byPet", fields: ["id"])
}

type Contact {
  address: Address
}

type Breeds {
  primary: String
  secondary: String
}

type UserPetFavorite @model
  @key(name: "byUser", fields: ["userId", "petId"])
  @key(name: "byPet", fields: ["petId", "userId"]) {
  id: ID!
  userId: ID!
  petId: ID!
  createdAt: AWSDateTime!
  user: User @belongsTo(fields: ["userId"])
  pet: Pet @belongsTo(fields: ["petId"])
}
input CreateUserPetFavoriteInput {
  userId: ID!
  petId: ID!
  createdAt: AWSDateTime!
}