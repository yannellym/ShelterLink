{"ast":null,"code":"import { __assign } from \"tslib\";\nexport var AssociateKmsKeyRequest;\n(function (AssociateKmsKeyRequest) {\n  AssociateKmsKeyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AssociateKmsKeyRequest || (AssociateKmsKeyRequest = {}));\nexport var InvalidParameterException;\n(function (InvalidParameterException) {\n  InvalidParameterException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidParameterException || (InvalidParameterException = {}));\nexport var OperationAbortedException;\n(function (OperationAbortedException) {\n  OperationAbortedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OperationAbortedException || (OperationAbortedException = {}));\nexport var ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n  ResourceNotFoundException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResourceNotFoundException || (ResourceNotFoundException = {}));\nexport var ServiceUnavailableException;\n(function (ServiceUnavailableException) {\n  ServiceUnavailableException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ServiceUnavailableException || (ServiceUnavailableException = {}));\nexport var CancelExportTaskRequest;\n(function (CancelExportTaskRequest) {\n  CancelExportTaskRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CancelExportTaskRequest || (CancelExportTaskRequest = {}));\nexport var InvalidOperationException;\n(function (InvalidOperationException) {\n  InvalidOperationException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidOperationException || (InvalidOperationException = {}));\nexport var CreateExportTaskRequest;\n(function (CreateExportTaskRequest) {\n  CreateExportTaskRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateExportTaskRequest || (CreateExportTaskRequest = {}));\nexport var CreateExportTaskResponse;\n(function (CreateExportTaskResponse) {\n  CreateExportTaskResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateExportTaskResponse || (CreateExportTaskResponse = {}));\nexport var LimitExceededException;\n(function (LimitExceededException) {\n  LimitExceededException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LimitExceededException || (LimitExceededException = {}));\nexport var ResourceAlreadyExistsException;\n(function (ResourceAlreadyExistsException) {\n  ResourceAlreadyExistsException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResourceAlreadyExistsException || (ResourceAlreadyExistsException = {}));\nexport var CreateLogGroupRequest;\n(function (CreateLogGroupRequest) {\n  CreateLogGroupRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateLogGroupRequest || (CreateLogGroupRequest = {}));\nexport var CreateLogStreamRequest;\n(function (CreateLogStreamRequest) {\n  CreateLogStreamRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateLogStreamRequest || (CreateLogStreamRequest = {}));\nexport var DataAlreadyAcceptedException;\n(function (DataAlreadyAcceptedException) {\n  DataAlreadyAcceptedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DataAlreadyAcceptedException || (DataAlreadyAcceptedException = {}));\nexport var DeleteDestinationRequest;\n(function (DeleteDestinationRequest) {\n  DeleteDestinationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteDestinationRequest || (DeleteDestinationRequest = {}));\nexport var DeleteLogGroupRequest;\n(function (DeleteLogGroupRequest) {\n  DeleteLogGroupRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteLogGroupRequest || (DeleteLogGroupRequest = {}));\nexport var DeleteLogStreamRequest;\n(function (DeleteLogStreamRequest) {\n  DeleteLogStreamRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteLogStreamRequest || (DeleteLogStreamRequest = {}));\nexport var DeleteMetricFilterRequest;\n(function (DeleteMetricFilterRequest) {\n  DeleteMetricFilterRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteMetricFilterRequest || (DeleteMetricFilterRequest = {}));\nexport var DeleteQueryDefinitionRequest;\n(function (DeleteQueryDefinitionRequest) {\n  DeleteQueryDefinitionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteQueryDefinitionRequest || (DeleteQueryDefinitionRequest = {}));\nexport var DeleteQueryDefinitionResponse;\n(function (DeleteQueryDefinitionResponse) {\n  DeleteQueryDefinitionResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteQueryDefinitionResponse || (DeleteQueryDefinitionResponse = {}));\nexport var DeleteResourcePolicyRequest;\n(function (DeleteResourcePolicyRequest) {\n  DeleteResourcePolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteResourcePolicyRequest || (DeleteResourcePolicyRequest = {}));\nexport var DeleteRetentionPolicyRequest;\n(function (DeleteRetentionPolicyRequest) {\n  DeleteRetentionPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteRetentionPolicyRequest || (DeleteRetentionPolicyRequest = {}));\nexport var DeleteSubscriptionFilterRequest;\n(function (DeleteSubscriptionFilterRequest) {\n  DeleteSubscriptionFilterRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteSubscriptionFilterRequest || (DeleteSubscriptionFilterRequest = {}));\nexport var DescribeDestinationsRequest;\n(function (DescribeDestinationsRequest) {\n  DescribeDestinationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeDestinationsRequest || (DescribeDestinationsRequest = {}));\nexport var Destination;\n(function (Destination) {\n  Destination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Destination || (Destination = {}));\nexport var DescribeDestinationsResponse;\n(function (DescribeDestinationsResponse) {\n  DescribeDestinationsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeDestinationsResponse || (DescribeDestinationsResponse = {}));\nexport var ExportTaskStatusCode;\n(function (ExportTaskStatusCode) {\n  ExportTaskStatusCode[\"CANCELLED\"] = \"CANCELLED\";\n  ExportTaskStatusCode[\"COMPLETED\"] = \"COMPLETED\";\n  ExportTaskStatusCode[\"FAILED\"] = \"FAILED\";\n  ExportTaskStatusCode[\"PENDING\"] = \"PENDING\";\n  ExportTaskStatusCode[\"PENDING_CANCEL\"] = \"PENDING_CANCEL\";\n  ExportTaskStatusCode[\"RUNNING\"] = \"RUNNING\";\n})(ExportTaskStatusCode || (ExportTaskStatusCode = {}));\nexport var DescribeExportTasksRequest;\n(function (DescribeExportTasksRequest) {\n  DescribeExportTasksRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeExportTasksRequest || (DescribeExportTasksRequest = {}));\nexport var ExportTaskExecutionInfo;\n(function (ExportTaskExecutionInfo) {\n  ExportTaskExecutionInfo.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ExportTaskExecutionInfo || (ExportTaskExecutionInfo = {}));\nexport var ExportTaskStatus;\n(function (ExportTaskStatus) {\n  ExportTaskStatus.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ExportTaskStatus || (ExportTaskStatus = {}));\nexport var ExportTask;\n(function (ExportTask) {\n  ExportTask.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ExportTask || (ExportTask = {}));\nexport var DescribeExportTasksResponse;\n(function (DescribeExportTasksResponse) {\n  DescribeExportTasksResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeExportTasksResponse || (DescribeExportTasksResponse = {}));\nexport var DescribeLogGroupsRequest;\n(function (DescribeLogGroupsRequest) {\n  DescribeLogGroupsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeLogGroupsRequest || (DescribeLogGroupsRequest = {}));\nexport var LogGroup;\n(function (LogGroup) {\n  LogGroup.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LogGroup || (LogGroup = {}));\nexport var DescribeLogGroupsResponse;\n(function (DescribeLogGroupsResponse) {\n  DescribeLogGroupsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeLogGroupsResponse || (DescribeLogGroupsResponse = {}));\nexport var OrderBy;\n(function (OrderBy) {\n  OrderBy[\"LastEventTime\"] = \"LastEventTime\";\n  OrderBy[\"LogStreamName\"] = \"LogStreamName\";\n})(OrderBy || (OrderBy = {}));\nexport var DescribeLogStreamsRequest;\n(function (DescribeLogStreamsRequest) {\n  DescribeLogStreamsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeLogStreamsRequest || (DescribeLogStreamsRequest = {}));\nexport var LogStream;\n(function (LogStream) {\n  LogStream.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LogStream || (LogStream = {}));\nexport var DescribeLogStreamsResponse;\n(function (DescribeLogStreamsResponse) {\n  DescribeLogStreamsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeLogStreamsResponse || (DescribeLogStreamsResponse = {}));\nexport var DescribeMetricFiltersRequest;\n(function (DescribeMetricFiltersRequest) {\n  DescribeMetricFiltersRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeMetricFiltersRequest || (DescribeMetricFiltersRequest = {}));\nexport var MetricTransformation;\n(function (MetricTransformation) {\n  MetricTransformation.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MetricTransformation || (MetricTransformation = {}));\nexport var MetricFilter;\n(function (MetricFilter) {\n  MetricFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MetricFilter || (MetricFilter = {}));\nexport var DescribeMetricFiltersResponse;\n(function (DescribeMetricFiltersResponse) {\n  DescribeMetricFiltersResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeMetricFiltersResponse || (DescribeMetricFiltersResponse = {}));\nexport var QueryStatus;\n(function (QueryStatus) {\n  QueryStatus[\"Cancelled\"] = \"Cancelled\";\n  QueryStatus[\"Complete\"] = \"Complete\";\n  QueryStatus[\"Failed\"] = \"Failed\";\n  QueryStatus[\"Running\"] = \"Running\";\n  QueryStatus[\"Scheduled\"] = \"Scheduled\";\n})(QueryStatus || (QueryStatus = {}));\nexport var DescribeQueriesRequest;\n(function (DescribeQueriesRequest) {\n  DescribeQueriesRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeQueriesRequest || (DescribeQueriesRequest = {}));\nexport var QueryInfo;\n(function (QueryInfo) {\n  QueryInfo.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueryInfo || (QueryInfo = {}));\nexport var DescribeQueriesResponse;\n(function (DescribeQueriesResponse) {\n  DescribeQueriesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeQueriesResponse || (DescribeQueriesResponse = {}));\nexport var DescribeQueryDefinitionsRequest;\n(function (DescribeQueryDefinitionsRequest) {\n  DescribeQueryDefinitionsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeQueryDefinitionsRequest || (DescribeQueryDefinitionsRequest = {}));\nexport var QueryDefinition;\n(function (QueryDefinition) {\n  QueryDefinition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueryDefinition || (QueryDefinition = {}));\nexport var DescribeQueryDefinitionsResponse;\n(function (DescribeQueryDefinitionsResponse) {\n  DescribeQueryDefinitionsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeQueryDefinitionsResponse || (DescribeQueryDefinitionsResponse = {}));\nexport var DescribeResourcePoliciesRequest;\n(function (DescribeResourcePoliciesRequest) {\n  DescribeResourcePoliciesRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeResourcePoliciesRequest || (DescribeResourcePoliciesRequest = {}));\nexport var ResourcePolicy;\n(function (ResourcePolicy) {\n  ResourcePolicy.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResourcePolicy || (ResourcePolicy = {}));\nexport var DescribeResourcePoliciesResponse;\n(function (DescribeResourcePoliciesResponse) {\n  DescribeResourcePoliciesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeResourcePoliciesResponse || (DescribeResourcePoliciesResponse = {}));\nexport var DescribeSubscriptionFiltersRequest;\n(function (DescribeSubscriptionFiltersRequest) {\n  DescribeSubscriptionFiltersRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeSubscriptionFiltersRequest || (DescribeSubscriptionFiltersRequest = {}));\nexport var Distribution;\n(function (Distribution) {\n  Distribution[\"ByLogStream\"] = \"ByLogStream\";\n  Distribution[\"Random\"] = \"Random\";\n})(Distribution || (Distribution = {}));\nexport var SubscriptionFilter;\n(function (SubscriptionFilter) {\n  SubscriptionFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SubscriptionFilter || (SubscriptionFilter = {}));\nexport var DescribeSubscriptionFiltersResponse;\n(function (DescribeSubscriptionFiltersResponse) {\n  DescribeSubscriptionFiltersResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeSubscriptionFiltersResponse || (DescribeSubscriptionFiltersResponse = {}));\nexport var DisassociateKmsKeyRequest;\n(function (DisassociateKmsKeyRequest) {\n  DisassociateKmsKeyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DisassociateKmsKeyRequest || (DisassociateKmsKeyRequest = {}));\nexport var FilteredLogEvent;\n(function (FilteredLogEvent) {\n  FilteredLogEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(FilteredLogEvent || (FilteredLogEvent = {}));\nexport var FilterLogEventsRequest;\n(function (FilterLogEventsRequest) {\n  FilterLogEventsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(FilterLogEventsRequest || (FilterLogEventsRequest = {}));\nexport var SearchedLogStream;\n(function (SearchedLogStream) {\n  SearchedLogStream.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SearchedLogStream || (SearchedLogStream = {}));\nexport var FilterLogEventsResponse;\n(function (FilterLogEventsResponse) {\n  FilterLogEventsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(FilterLogEventsResponse || (FilterLogEventsResponse = {}));\nexport var GetLogEventsRequest;\n(function (GetLogEventsRequest) {\n  GetLogEventsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetLogEventsRequest || (GetLogEventsRequest = {}));\nexport var OutputLogEvent;\n(function (OutputLogEvent) {\n  OutputLogEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OutputLogEvent || (OutputLogEvent = {}));\nexport var GetLogEventsResponse;\n(function (GetLogEventsResponse) {\n  GetLogEventsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetLogEventsResponse || (GetLogEventsResponse = {}));\nexport var GetLogGroupFieldsRequest;\n(function (GetLogGroupFieldsRequest) {\n  GetLogGroupFieldsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetLogGroupFieldsRequest || (GetLogGroupFieldsRequest = {}));\nexport var LogGroupField;\n(function (LogGroupField) {\n  LogGroupField.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LogGroupField || (LogGroupField = {}));\nexport var GetLogGroupFieldsResponse;\n(function (GetLogGroupFieldsResponse) {\n  GetLogGroupFieldsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetLogGroupFieldsResponse || (GetLogGroupFieldsResponse = {}));\nexport var GetLogRecordRequest;\n(function (GetLogRecordRequest) {\n  GetLogRecordRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetLogRecordRequest || (GetLogRecordRequest = {}));\nexport var GetLogRecordResponse;\n(function (GetLogRecordResponse) {\n  GetLogRecordResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetLogRecordResponse || (GetLogRecordResponse = {}));\nexport var GetQueryResultsRequest;\n(function (GetQueryResultsRequest) {\n  GetQueryResultsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetQueryResultsRequest || (GetQueryResultsRequest = {}));\nexport var ResultField;\n(function (ResultField) {\n  ResultField.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResultField || (ResultField = {}));\nexport var QueryStatistics;\n(function (QueryStatistics) {\n  QueryStatistics.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueryStatistics || (QueryStatistics = {}));\nexport var GetQueryResultsResponse;\n(function (GetQueryResultsResponse) {\n  GetQueryResultsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetQueryResultsResponse || (GetQueryResultsResponse = {}));\nexport var InputLogEvent;\n(function (InputLogEvent) {\n  InputLogEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InputLogEvent || (InputLogEvent = {}));\nexport var InvalidSequenceTokenException;\n(function (InvalidSequenceTokenException) {\n  InvalidSequenceTokenException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidSequenceTokenException || (InvalidSequenceTokenException = {}));\nexport var ListTagsLogGroupRequest;\n(function (ListTagsLogGroupRequest) {\n  ListTagsLogGroupRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListTagsLogGroupRequest || (ListTagsLogGroupRequest = {}));\nexport var ListTagsLogGroupResponse;\n(function (ListTagsLogGroupResponse) {\n  ListTagsLogGroupResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListTagsLogGroupResponse || (ListTagsLogGroupResponse = {}));\nexport var PutDestinationRequest;\n(function (PutDestinationRequest) {\n  PutDestinationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutDestinationRequest || (PutDestinationRequest = {}));\nexport var PutDestinationResponse;\n(function (PutDestinationResponse) {\n  PutDestinationResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutDestinationResponse || (PutDestinationResponse = {}));\nexport var PutDestinationPolicyRequest;\n(function (PutDestinationPolicyRequest) {\n  PutDestinationPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutDestinationPolicyRequest || (PutDestinationPolicyRequest = {}));\nexport var PutLogEventsRequest;\n(function (PutLogEventsRequest) {\n  PutLogEventsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutLogEventsRequest || (PutLogEventsRequest = {}));\nexport var RejectedLogEventsInfo;\n(function (RejectedLogEventsInfo) {\n  RejectedLogEventsInfo.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RejectedLogEventsInfo || (RejectedLogEventsInfo = {}));\nexport var PutLogEventsResponse;\n(function (PutLogEventsResponse) {\n  PutLogEventsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutLogEventsResponse || (PutLogEventsResponse = {}));\nexport var UnrecognizedClientException;\n(function (UnrecognizedClientException) {\n  UnrecognizedClientException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UnrecognizedClientException || (UnrecognizedClientException = {}));\nexport var PutMetricFilterRequest;\n(function (PutMetricFilterRequest) {\n  PutMetricFilterRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutMetricFilterRequest || (PutMetricFilterRequest = {}));\nexport var PutQueryDefinitionRequest;\n(function (PutQueryDefinitionRequest) {\n  PutQueryDefinitionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutQueryDefinitionRequest || (PutQueryDefinitionRequest = {}));\nexport var PutQueryDefinitionResponse;\n(function (PutQueryDefinitionResponse) {\n  PutQueryDefinitionResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutQueryDefinitionResponse || (PutQueryDefinitionResponse = {}));\nexport var PutResourcePolicyRequest;\n(function (PutResourcePolicyRequest) {\n  PutResourcePolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutResourcePolicyRequest || (PutResourcePolicyRequest = {}));\nexport var PutResourcePolicyResponse;\n(function (PutResourcePolicyResponse) {\n  PutResourcePolicyResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutResourcePolicyResponse || (PutResourcePolicyResponse = {}));\nexport var PutRetentionPolicyRequest;\n(function (PutRetentionPolicyRequest) {\n  PutRetentionPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutRetentionPolicyRequest || (PutRetentionPolicyRequest = {}));\nexport var PutSubscriptionFilterRequest;\n(function (PutSubscriptionFilterRequest) {\n  PutSubscriptionFilterRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutSubscriptionFilterRequest || (PutSubscriptionFilterRequest = {}));\nexport var QueryCompileErrorLocation;\n(function (QueryCompileErrorLocation) {\n  QueryCompileErrorLocation.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueryCompileErrorLocation || (QueryCompileErrorLocation = {}));\nexport var QueryCompileError;\n(function (QueryCompileError) {\n  QueryCompileError.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueryCompileError || (QueryCompileError = {}));\nexport var MalformedQueryException;\n(function (MalformedQueryException) {\n  MalformedQueryException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MalformedQueryException || (MalformedQueryException = {}));\nexport var StartQueryRequest;\n(function (StartQueryRequest) {\n  StartQueryRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StartQueryRequest || (StartQueryRequest = {}));\nexport var StartQueryResponse;\n(function (StartQueryResponse) {\n  StartQueryResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StartQueryResponse || (StartQueryResponse = {}));\nexport var StopQueryRequest;\n(function (StopQueryRequest) {\n  StopQueryRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StopQueryRequest || (StopQueryRequest = {}));\nexport var StopQueryResponse;\n(function (StopQueryResponse) {\n  StopQueryResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StopQueryResponse || (StopQueryResponse = {}));\nexport var TagLogGroupRequest;\n(function (TagLogGroupRequest) {\n  TagLogGroupRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TagLogGroupRequest || (TagLogGroupRequest = {}));\nexport var TestMetricFilterRequest;\n(function (TestMetricFilterRequest) {\n  TestMetricFilterRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TestMetricFilterRequest || (TestMetricFilterRequest = {}));\nexport var MetricFilterMatchRecord;\n(function (MetricFilterMatchRecord) {\n  MetricFilterMatchRecord.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MetricFilterMatchRecord || (MetricFilterMatchRecord = {}));\nexport var TestMetricFilterResponse;\n(function (TestMetricFilterResponse) {\n  TestMetricFilterResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TestMetricFilterResponse || (TestMetricFilterResponse = {}));\nexport var UntagLogGroupRequest;\n(function (UntagLogGroupRequest) {\n  UntagLogGroupRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UntagLogGroupRequest || (UntagLogGroupRequest = {}));","map":{"version":3,"names":["AssociateKmsKeyRequest","filterSensitiveLog","obj","__assign","InvalidParameterException","OperationAbortedException","ResourceNotFoundException","ServiceUnavailableException","CancelExportTaskRequest","InvalidOperationException","CreateExportTaskRequest","CreateExportTaskResponse","LimitExceededException","ResourceAlreadyExistsException","CreateLogGroupRequest","CreateLogStreamRequest","DataAlreadyAcceptedException","DeleteDestinationRequest","DeleteLogGroupRequest","DeleteLogStreamRequest","DeleteMetricFilterRequest","DeleteQueryDefinitionRequest","DeleteQueryDefinitionResponse","DeleteResourcePolicyRequest","DeleteRetentionPolicyRequest","DeleteSubscriptionFilterRequest","DescribeDestinationsRequest","Destination","DescribeDestinationsResponse","ExportTaskStatusCode","DescribeExportTasksRequest","ExportTaskExecutionInfo","ExportTaskStatus","ExportTask","DescribeExportTasksResponse","DescribeLogGroupsRequest","LogGroup","DescribeLogGroupsResponse","OrderBy","DescribeLogStreamsRequest","LogStream","DescribeLogStreamsResponse","DescribeMetricFiltersRequest","MetricTransformation","MetricFilter","DescribeMetricFiltersResponse","QueryStatus","DescribeQueriesRequest","QueryInfo","DescribeQueriesResponse","DescribeQueryDefinitionsRequest","QueryDefinition","DescribeQueryDefinitionsResponse","DescribeResourcePoliciesRequest","ResourcePolicy","DescribeResourcePoliciesResponse","DescribeSubscriptionFiltersRequest","Distribution","SubscriptionFilter","DescribeSubscriptionFiltersResponse","DisassociateKmsKeyRequest","FilteredLogEvent","FilterLogEventsRequest","SearchedLogStream","FilterLogEventsResponse","GetLogEventsRequest","OutputLogEvent","GetLogEventsResponse","GetLogGroupFieldsRequest","LogGroupField","GetLogGroupFieldsResponse","GetLogRecordRequest","GetLogRecordResponse","GetQueryResultsRequest","ResultField","QueryStatistics","GetQueryResultsResponse","InputLogEvent","InvalidSequenceTokenException","ListTagsLogGroupRequest","ListTagsLogGroupResponse","PutDestinationRequest","PutDestinationResponse","PutDestinationPolicyRequest","PutLogEventsRequest","RejectedLogEventsInfo","PutLogEventsResponse","UnrecognizedClientException","PutMetricFilterRequest","PutQueryDefinitionRequest","PutQueryDefinitionResponse","PutResourcePolicyRequest","PutResourcePolicyResponse","PutRetentionPolicyRequest","PutSubscriptionFilterRequest","QueryCompileErrorLocation","QueryCompileError","MalformedQueryException","StartQueryRequest","StartQueryResponse","StopQueryRequest","StopQueryResponse","TagLogGroupRequest","TestMetricFilterRequest","MetricFilterMatchRecord","TestMetricFilterResponse","UntagLogGroupRequest"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/client-cloudwatch-logs/models/models_0.ts"],"sourcesContent":["import { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\nexport interface AssociateKmsKeyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the CMK to use when encrypting log data. This must be a symmetric CMK.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms\">Amazon Resource Names - AWS Key Management Service (AWS KMS)</a> and <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and Asymmetric Keys</a>.</p>\n   */\n  kmsKeyId: string | undefined;\n}\n\nexport namespace AssociateKmsKeyRequest {\n  export const filterSensitiveLog = (obj: AssociateKmsKeyRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A parameter is specified incorrectly.</p>\n */\nexport interface InvalidParameterException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidParameterException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace InvalidParameterException {\n  export const filterSensitiveLog = (obj: InvalidParameterException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Multiple requests to update the same resource were in conflict.</p>\n */\nexport interface OperationAbortedException extends __SmithyException, $MetadataBearer {\n  name: \"OperationAbortedException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace OperationAbortedException {\n  export const filterSensitiveLog = (obj: OperationAbortedException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified resource does not exist.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The service cannot complete the request.</p>\n */\nexport interface ServiceUnavailableException extends __SmithyException, $MetadataBearer {\n  name: \"ServiceUnavailableException\";\n  $fault: \"server\";\n  message?: string;\n}\n\nexport namespace ServiceUnavailableException {\n  export const filterSensitiveLog = (obj: ServiceUnavailableException): any => ({\n    ...obj,\n  });\n}\n\nexport interface CancelExportTaskRequest {\n  /**\n   * <p>The ID of the export task.</p>\n   */\n  taskId: string | undefined;\n}\n\nexport namespace CancelExportTaskRequest {\n  export const filterSensitiveLog = (obj: CancelExportTaskRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The operation is not valid on the specified resource.</p>\n */\nexport interface InvalidOperationException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidOperationException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace InvalidOperationException {\n  export const filterSensitiveLog = (obj: InvalidOperationException): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateExportTaskRequest {\n  /**\n   * <p>The name of the export task.</p>\n   */\n  taskName?: string;\n\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>Export only log streams that match the provided prefix. If you don't\n   *       specify a value, no prefix filter is applied.</p>\n   */\n  logStreamNamePrefix?: string;\n\n  /**\n   * <p>The start time of the range for the request, expressed as the number of milliseconds\n   *       after Jan 1, 1970 00:00:00 UTC. Events with a timestamp earlier than this time are not\n   *       exported.</p>\n   */\n  from: number | undefined;\n\n  /**\n   * <p>The end time of the range for the request, expressed as the number of milliseconds\n   *       after Jan 1, 1970 00:00:00 UTC. Events with a timestamp later than this time are not\n   *       exported.</p>\n   */\n  to: number | undefined;\n\n  /**\n   * <p>The name of S3 bucket for the exported log data. The bucket must be in the same AWS region.</p>\n   */\n  destination: string | undefined;\n\n  /**\n   * <p>The prefix used as the start of the key for every object exported. If you don't\n   *       specify a value, the default is <code>exportedlogs</code>.</p>\n   */\n  destinationPrefix?: string;\n}\n\nexport namespace CreateExportTaskRequest {\n  export const filterSensitiveLog = (obj: CreateExportTaskRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateExportTaskResponse {\n  /**\n   * <p>The ID of the export task.</p>\n   */\n  taskId?: string;\n}\n\nexport namespace CreateExportTaskResponse {\n  export const filterSensitiveLog = (obj: CreateExportTaskResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>You have reached the maximum number of resources that can be created.</p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified resource already exists.</p>\n */\nexport interface ResourceAlreadyExistsException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceAlreadyExistsException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace ResourceAlreadyExistsException {\n  export const filterSensitiveLog = (obj: ResourceAlreadyExistsException): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms\">Amazon Resource Names - AWS Key Management Service (AWS KMS)</a>.</p>\n   */\n  kmsKeyId?: string;\n\n  /**\n   * <p>The key-value pairs to use for the tags.</p>\n   */\n  tags?: { [key: string]: string };\n}\n\nexport namespace CreateLogGroupRequest {\n  export const filterSensitiveLog = (obj: CreateLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateLogStreamRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n}\n\nexport namespace CreateLogStreamRequest {\n  export const filterSensitiveLog = (obj: CreateLogStreamRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The event was already logged.</p>\n */\nexport interface DataAlreadyAcceptedException extends __SmithyException, $MetadataBearer {\n  name: \"DataAlreadyAcceptedException\";\n  $fault: \"client\";\n  expectedSequenceToken?: string;\n  message?: string;\n}\n\nexport namespace DataAlreadyAcceptedException {\n  export const filterSensitiveLog = (obj: DataAlreadyAcceptedException): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteDestinationRequest {\n  /**\n   * <p>The name of the destination.</p>\n   */\n  destinationName: string | undefined;\n}\n\nexport namespace DeleteDestinationRequest {\n  export const filterSensitiveLog = (obj: DeleteDestinationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace DeleteLogGroupRequest {\n  export const filterSensitiveLog = (obj: DeleteLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteLogStreamRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n}\n\nexport namespace DeleteLogStreamRequest {\n  export const filterSensitiveLog = (obj: DeleteLogStreamRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteMetricFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the metric filter.</p>\n   */\n  filterName: string | undefined;\n}\n\nexport namespace DeleteMetricFilterRequest {\n  export const filterSensitiveLog = (obj: DeleteMetricFilterRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteQueryDefinitionRequest {\n  /**\n   * <p>The ID of the query definition that you want to delete. You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a> to retrieve the\n   *       IDs of your saved query definitions.</p>\n   */\n  queryDefinitionId: string | undefined;\n}\n\nexport namespace DeleteQueryDefinitionRequest {\n  export const filterSensitiveLog = (obj: DeleteQueryDefinitionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteQueryDefinitionResponse {\n  /**\n   * <p>A value of TRUE indicates that the operation succeeded. FALSE indicates that the operation\n   *       failed.</p>\n   */\n  success?: boolean;\n}\n\nexport namespace DeleteQueryDefinitionResponse {\n  export const filterSensitiveLog = (obj: DeleteQueryDefinitionResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteResourcePolicyRequest {\n  /**\n   * <p>The name of the policy to be revoked. This parameter is required.</p>\n   */\n  policyName?: string;\n}\n\nexport namespace DeleteResourcePolicyRequest {\n  export const filterSensitiveLog = (obj: DeleteResourcePolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteRetentionPolicyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace DeleteRetentionPolicyRequest {\n  export const filterSensitiveLog = (obj: DeleteRetentionPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteSubscriptionFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the subscription filter.</p>\n   */\n  filterName: string | undefined;\n}\n\nexport namespace DeleteSubscriptionFilterRequest {\n  export const filterSensitiveLog = (obj: DeleteSubscriptionFilterRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeDestinationsRequest {\n  /**\n   * <p>The prefix to match. If you don't specify a value, no prefix filter is applied.</p>\n   */\n  DestinationNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeDestinationsRequest {\n  export const filterSensitiveLog = (obj: DescribeDestinationsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a cross-account destination that receives subscription log events.</p>\n */\nexport interface Destination {\n  /**\n   * <p>The name of the destination.</p>\n   */\n  destinationName?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the physical target where the log events are\n   *       delivered (for example, a Kinesis stream).</p>\n   */\n  targetArn?: string;\n\n  /**\n   * <p>A role for impersonation, used when delivering log events to the target.</p>\n   */\n  roleArn?: string;\n\n  /**\n   * <p>An IAM policy document that governs which AWS accounts can create subscription filters\n   *       against this destination.</p>\n   */\n  accessPolicy?: string;\n\n  /**\n   * <p>The ARN of this destination.</p>\n   */\n  arn?: string;\n\n  /**\n   * <p>The creation time of the destination, expressed as the number of milliseconds after Jan\n   *       1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n}\n\nexport namespace Destination {\n  export const filterSensitiveLog = (obj: Destination): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeDestinationsResponse {\n  /**\n   * <p>The destinations.</p>\n   */\n  destinations?: Destination[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeDestinationsResponse {\n  export const filterSensitiveLog = (obj: DescribeDestinationsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport enum ExportTaskStatusCode {\n  CANCELLED = \"CANCELLED\",\n  COMPLETED = \"COMPLETED\",\n  FAILED = \"FAILED\",\n  PENDING = \"PENDING\",\n  PENDING_CANCEL = \"PENDING_CANCEL\",\n  RUNNING = \"RUNNING\",\n}\n\nexport interface DescribeExportTasksRequest {\n  /**\n   * <p>The ID of the export task. Specifying a task ID filters the results to zero or one export tasks.</p>\n   */\n  taskId?: string;\n\n  /**\n   * <p>The status code of the export task. Specifying a status code filters the results to zero or more export tasks.</p>\n   */\n  statusCode?: ExportTaskStatusCode | string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeExportTasksRequest {\n  export const filterSensitiveLog = (obj: DescribeExportTasksRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the status of an export task.</p>\n */\nexport interface ExportTaskExecutionInfo {\n  /**\n   * <p>The creation time of the export task, expressed as the number of milliseconds after Jan\n   *       1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The completion time of the export task, expressed as the number of milliseconds after\n   *       Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  completionTime?: number;\n}\n\nexport namespace ExportTaskExecutionInfo {\n  export const filterSensitiveLog = (obj: ExportTaskExecutionInfo): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the status of an export task.</p>\n */\nexport interface ExportTaskStatus {\n  /**\n   * <p>The status code of the export task.</p>\n   */\n  code?: ExportTaskStatusCode | string;\n\n  /**\n   * <p>The status message related to the status code.</p>\n   */\n  message?: string;\n}\n\nexport namespace ExportTaskStatus {\n  export const filterSensitiveLog = (obj: ExportTaskStatus): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents an export task.</p>\n */\nexport interface ExportTask {\n  /**\n   * <p>The ID of the export task.</p>\n   */\n  taskId?: string;\n\n  /**\n   * <p>The name of the export task.</p>\n   */\n  taskName?: string;\n\n  /**\n   * <p>The name of the log group from which logs data was exported.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The start time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.\n   *       Events with a timestamp before this time are not exported.</p>\n   */\n  from?: number;\n\n  /**\n   * <p>The end time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.\n   *       Events with a timestamp later than this time are not exported.</p>\n   */\n  to?: number;\n\n  /**\n   * <p>The name of the S3 bucket to which the log data was exported.</p>\n   */\n  destination?: string;\n\n  /**\n   * <p>The prefix that was used as the start of Amazon S3 key for every object exported.</p>\n   */\n  destinationPrefix?: string;\n\n  /**\n   * <p>The status of the export task.</p>\n   */\n  status?: ExportTaskStatus;\n\n  /**\n   * <p>Execution information about the export task.</p>\n   */\n  executionInfo?: ExportTaskExecutionInfo;\n}\n\nexport namespace ExportTask {\n  export const filterSensitiveLog = (obj: ExportTask): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeExportTasksResponse {\n  /**\n   * <p>The export tasks.</p>\n   */\n  exportTasks?: ExportTask[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeExportTasksResponse {\n  export const filterSensitiveLog = (obj: DescribeExportTasksResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeLogGroupsRequest {\n  /**\n   * <p>The prefix to match.</p>\n   */\n  logGroupNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeLogGroupsRequest {\n  export const filterSensitiveLog = (obj: DescribeLogGroupsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log group.</p>\n */\nexport interface LogGroup {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The creation time of the log group, expressed as the number of milliseconds after Jan\n   *       1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The number of days to retain the log events in the specified log group.\n   *       Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.</p>\n   *          <p>If you omit <code>retentionInDays</code> in a <code>PutRetentionPolicy</code> operation,\n   *   the events in the log group are always retained and never expire.</p>\n   */\n  retentionInDays?: number;\n\n  /**\n   * <p>The number of metric filters.</p>\n   */\n  metricFilterCount?: number;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the log group.</p>\n   */\n  arn?: string;\n\n  /**\n   * <p>The number of bytes stored.</p>\n   */\n  storedBytes?: number;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.</p>\n   */\n  kmsKeyId?: string;\n}\n\nexport namespace LogGroup {\n  export const filterSensitiveLog = (obj: LogGroup): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeLogGroupsResponse {\n  /**\n   * <p>The log groups.</p>\n   *          <p>If the <code>retentionInDays</code> value if not included for a log group, then that log group\n   *     is set to have its events never expire.</p>\n   */\n  logGroups?: LogGroup[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeLogGroupsResponse {\n  export const filterSensitiveLog = (obj: DescribeLogGroupsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport enum OrderBy {\n  LastEventTime = \"LastEventTime\",\n  LogStreamName = \"LogStreamName\",\n}\n\nexport interface DescribeLogStreamsRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The prefix to match.</p>\n   *          <p>If <code>orderBy</code> is <code>LastEventTime</code>, you cannot specify this\n   *       parameter.</p>\n   */\n  logStreamNamePrefix?: string;\n\n  /**\n   * <p>If the value is <code>LogStreamName</code>, the results are ordered by log stream name.\n   *       If the value is <code>LastEventTime</code>, the results are ordered by the event time.\n   *       The default value is <code>LogStreamName</code>.</p>\n   *          <p>If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code> parameter.</p>\n   *          <p>\n   *             <code>lastEventTimeStamp</code> represents the time of the most recent log event in the\n   *       log stream in CloudWatch Logs. This number is expressed as the number of milliseconds after\n   *       Jan 1, 1970 00:00:00 UTC. <code>lastEventTimeStamp</code> updates on an eventual consistency\n   *       basis. It typically updates in less than an hour from ingestion, but in rare situations might\n   *       take longer.</p>\n   */\n  orderBy?: OrderBy | string;\n\n  /**\n   * <p>If the value is true, results are returned in descending order.\n   *       If the value is to false, results are returned in ascending order.\n   *       The default value is false.</p>\n   */\n  descending?: boolean;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeLogStreamsRequest {\n  export const filterSensitiveLog = (obj: DescribeLogStreamsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log stream, which is a sequence of log events from\n *       a single emitter of logs.</p>\n */\nexport interface LogStream {\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName?: string;\n\n  /**\n   * <p>The creation time of the stream, expressed as the number of milliseconds after Jan 1,\n   *       1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The time of the first event, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  firstEventTimestamp?: number;\n\n  /**\n   * <p>The time of the most recent log event in the log stream in CloudWatch Logs. This number\n   *       is expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. The\n   *         <code>lastEventTime</code> value updates on an eventual consistency basis. It typically\n   *       updates in less than an hour from ingestion, but in rare situations might take\n   *       longer.</p>\n   */\n  lastEventTimestamp?: number;\n\n  /**\n   * <p>The ingestion time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00\n   *       UTC.</p>\n   */\n  lastIngestionTime?: number;\n\n  /**\n   * <p>The sequence token.</p>\n   */\n  uploadSequenceToken?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the log stream.</p>\n   */\n  arn?: string;\n\n  /**\n   * @deprecated\n   *\n   * <p>The number of bytes stored.</p>\n   *          <p>\n   *             <b>Important:</b> On June 17, 2019, this parameter was\n   *       deprecated for log streams, and is always reported as zero. This change applies only to log\n   *       streams. The <code>storedBytes</code> parameter for log groups is not affected.</p>\n   */\n  storedBytes?: number;\n}\n\nexport namespace LogStream {\n  export const filterSensitiveLog = (obj: LogStream): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeLogStreamsResponse {\n  /**\n   * <p>The log streams.</p>\n   */\n  logStreams?: LogStream[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeLogStreamsResponse {\n  export const filterSensitiveLog = (obj: DescribeLogStreamsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeMetricFiltersRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The prefix to match. CloudWatch Logs uses the value you set here\n   *     only if you also include the <code>logGroupName</code> parameter in your request.</p>\n   */\n  filterNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n\n  /**\n   * <p>Filters results to include only those with the specified metric name. If you include this parameter in your request, you\n   *     must also include the <code>metricNamespace</code> parameter.</p>\n   */\n  metricName?: string;\n\n  /**\n   * <p>Filters results to include only those in the specified namespace. If you include this parameter in your request, you\n   *     must also include the <code>metricName</code> parameter.</p>\n   */\n  metricNamespace?: string;\n}\n\nexport namespace DescribeMetricFiltersRequest {\n  export const filterSensitiveLog = (obj: DescribeMetricFiltersRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Indicates how to transform ingested log events to metric data in a CloudWatch\n *       metric.</p>\n */\nexport interface MetricTransformation {\n  /**\n   * <p>The name of the CloudWatch metric.</p>\n   */\n  metricName: string | undefined;\n\n  /**\n   * <p>A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics\n   *       that are similar. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace\">Namespaces</a>.</p>\n   */\n  metricNamespace: string | undefined;\n\n  /**\n   * <p>The value to publish to the CloudWatch metric when a filter pattern matches a log event.</p>\n   */\n  metricValue: string | undefined;\n\n  /**\n   * <p>(Optional) The value to emit when a filter pattern does not match a log event.\n   *       This value can be null.</p>\n   */\n  defaultValue?: number;\n}\n\nexport namespace MetricTransformation {\n  export const filterSensitiveLog = (obj: MetricTransformation): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Metric filters express how CloudWatch Logs would extract metric observations\n *       from ingested log events and transform them into metric data in a CloudWatch metric.</p>\n */\nexport interface MetricFilter {\n  /**\n   * <p>The name of the metric filter.</p>\n   */\n  filterName?: string;\n\n  /**\n   * <p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n   *       event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n   *       use the filter pattern to specify what to look for in the log event message.</p>\n   */\n  filterPattern?: string;\n\n  /**\n   * <p>The metric transformations.</p>\n   */\n  metricTransformations?: MetricTransformation[];\n\n  /**\n   * <p>The creation time of the metric filter, expressed as the number of milliseconds after\n   *       Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n}\n\nexport namespace MetricFilter {\n  export const filterSensitiveLog = (obj: MetricFilter): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeMetricFiltersResponse {\n  /**\n   * <p>The metric filters.</p>\n   */\n  metricFilters?: MetricFilter[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeMetricFiltersResponse {\n  export const filterSensitiveLog = (obj: DescribeMetricFiltersResponse): any => ({\n    ...obj,\n  });\n}\n\nexport enum QueryStatus {\n  Cancelled = \"Cancelled\",\n  Complete = \"Complete\",\n  Failed = \"Failed\",\n  Running = \"Running\",\n  Scheduled = \"Scheduled\",\n}\n\nexport interface DescribeQueriesRequest {\n  /**\n   * <p>Limits the returned queries to only those for the specified log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>Limits the returned queries to only those that have the specified status. Valid values are <code>Cancelled</code>,\n   *       <code>Complete</code>, <code>Failed</code>, <code>Running</code>, and <code>Scheduled</code>.</p>\n   */\n  status?: QueryStatus | string;\n\n  /**\n   * <p>Limits the number of returned queries to the specified number.</p>\n   */\n  maxResults?: number;\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueriesRequest {\n  export const filterSensitiveLog = (obj: DescribeQueriesRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Information about one CloudWatch Logs Insights query that matches the request in a <code>DescribeQueries</code> operation. </p>\n */\nexport interface QueryInfo {\n  /**\n   * <p>The unique ID number of this query.</p>\n   */\n  queryId?: string;\n\n  /**\n   * <p>The query string used in this query.</p>\n   */\n  queryString?: string;\n\n  /**\n   * <p>The status of this query. Possible values are <code>Cancelled</code>,\n   *       <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>, and <code>Unknown</code>.</p>\n   */\n  status?: QueryStatus | string;\n\n  /**\n   * <p>The date and time that this query was created.</p>\n   */\n  createTime?: number;\n\n  /**\n   * <p>The name of the log group scanned by this query.</p>\n   */\n  logGroupName?: string;\n}\n\nexport namespace QueryInfo {\n  export const filterSensitiveLog = (obj: QueryInfo): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeQueriesResponse {\n  /**\n   * <p>The list of queries that match the request.</p>\n   */\n  queries?: QueryInfo[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueriesResponse {\n  export const filterSensitiveLog = (obj: DescribeQueriesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeQueryDefinitionsRequest {\n  /**\n   * <p>Use this parameter to filter your results to only the query definitions that have names that start with the prefix you specify.</p>\n   */\n  queryDefinitionNamePrefix?: string;\n\n  /**\n   * <p>Limits the number of returned query definitions to the specified number.</p>\n   */\n  maxResults?: number;\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueryDefinitionsRequest {\n  export const filterSensitiveLog = (obj: DescribeQueryDefinitionsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>This structure contains details about a saved CloudWatch Logs Insights query definition.</p>\n */\nexport interface QueryDefinition {\n  /**\n   * <p>The unique ID of the query definition.</p>\n   */\n  queryDefinitionId?: string;\n\n  /**\n   * <p>The name of the query definition.</p>\n   */\n  name?: string;\n\n  /**\n   * <p>The query string to use for this definition.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   */\n  queryString?: string;\n\n  /**\n   * <p>The date that the query definition was most recently modified.</p>\n   */\n  lastModified?: number;\n\n  /**\n   * <p>If this query definition contains a list of log groups that it is limited to, that list appears here.</p>\n   */\n  logGroupNames?: string[];\n}\n\nexport namespace QueryDefinition {\n  export const filterSensitiveLog = (obj: QueryDefinition): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeQueryDefinitionsResponse {\n  /**\n   * <p>The list of query definitions that match your request.</p>\n   */\n  queryDefinitions?: QueryDefinition[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeQueryDefinitionsResponse {\n  export const filterSensitiveLog = (obj: DescribeQueryDefinitionsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeResourcePoliciesRequest {\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of resource policies to be displayed with one call of this API.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeResourcePoliciesRequest {\n  export const filterSensitiveLog = (obj: DescribeResourcePoliciesRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A policy enabling one or more entities to put logs to a log group in this account.</p>\n */\nexport interface ResourcePolicy {\n  /**\n   * <p>The name of the resource policy.</p>\n   */\n  policyName?: string;\n\n  /**\n   * <p>The details of the policy.</p>\n   */\n  policyDocument?: string;\n\n  /**\n   * <p>Timestamp showing when this policy was last updated, expressed as the number of\n   *       milliseconds after Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  lastUpdatedTime?: number;\n}\n\nexport namespace ResourcePolicy {\n  export const filterSensitiveLog = (obj: ResourcePolicy): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeResourcePoliciesResponse {\n  /**\n   * <p>The resource policies that exist in this account.</p>\n   */\n  resourcePolicies?: ResourcePolicy[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeResourcePoliciesResponse {\n  export const filterSensitiveLog = (obj: DescribeResourcePoliciesResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeSubscriptionFiltersRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The prefix to match. If you don't specify a value, no prefix filter is applied.</p>\n   */\n  filterNamePrefix?: string;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>\n   */\n  limit?: number;\n}\n\nexport namespace DescribeSubscriptionFiltersRequest {\n  export const filterSensitiveLog = (obj: DescribeSubscriptionFiltersRequest): any => ({\n    ...obj,\n  });\n}\n\nexport enum Distribution {\n  ByLogStream = \"ByLogStream\",\n  Random = \"Random\",\n}\n\n/**\n * <p>Represents a subscription filter.</p>\n */\nexport interface SubscriptionFilter {\n  /**\n   * <p>The name of the subscription filter.</p>\n   */\n  filterName?: string;\n\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n   *       event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n   *       use the filter pattern to specify what to look for in the log event message.</p>\n   */\n  filterPattern?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the destination.</p>\n   */\n  destinationArn?: string;\n\n  /**\n   * <p></p>\n   */\n  roleArn?: string;\n\n  /**\n   * <p>The method used to distribute log data to the destination, which can be either\n   *       random or grouped by log stream.</p>\n   */\n  distribution?: Distribution | string;\n\n  /**\n   * <p>The creation time of the subscription filter, expressed as the number of milliseconds\n   *       after Jan 1, 1970 00:00:00 UTC.</p>\n   */\n  creationTime?: number;\n}\n\nexport namespace SubscriptionFilter {\n  export const filterSensitiveLog = (obj: SubscriptionFilter): any => ({\n    ...obj,\n  });\n}\n\nexport interface DescribeSubscriptionFiltersResponse {\n  /**\n   * <p>The subscription filters.</p>\n   */\n  subscriptionFilters?: SubscriptionFilter[];\n\n  /**\n   * <p>The token for the next set of items to return. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace DescribeSubscriptionFiltersResponse {\n  export const filterSensitiveLog = (obj: DescribeSubscriptionFiltersResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface DisassociateKmsKeyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace DisassociateKmsKeyRequest {\n  export const filterSensitiveLog = (obj: DisassociateKmsKeyRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a matched event.</p>\n */\nexport interface FilteredLogEvent {\n  /**\n   * <p>The name of the log stream to which this event belongs.</p>\n   */\n  logStreamName?: string;\n\n  /**\n   * <p>The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  timestamp?: number;\n\n  /**\n   * <p>The data contained in the log event.</p>\n   */\n  message?: string;\n\n  /**\n   * <p>The time the event was ingested, expressed as the number of milliseconds after Jan 1,\n   *       1970 00:00:00 UTC.</p>\n   */\n  ingestionTime?: number;\n\n  /**\n   * <p>The ID of the event.</p>\n   */\n  eventId?: string;\n}\n\nexport namespace FilteredLogEvent {\n  export const filterSensitiveLog = (obj: FilteredLogEvent): any => ({\n    ...obj,\n  });\n}\n\nexport interface FilterLogEventsRequest {\n  /**\n   * <p>The name of the log group to search.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>Filters the results to only logs from the log streams in this list.</p>\n   *          <p>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>, the action\n   *       returns an <code>InvalidParameterException</code> error.</p>\n   */\n  logStreamNames?: string[];\n\n  /**\n   * <p>Filters the results to include only events from log streams that have names starting with this prefix.</p>\n   *          <p>If you specify a value for both <code>logStreamNamePrefix</code> and <code>logStreamNames</code>, but the value for\n   *       <code>logStreamNamePrefix</code> does not match any log stream names specified in <code>logStreamNames</code>, the action\n   *     returns an <code>InvalidParameterException</code> error.</p>\n   */\n  logStreamNamePrefix?: string;\n\n  /**\n   * <p>The start of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp before this time are not returned.</p>\n   *          <p>If you omit <code>startTime</code> and <code>endTime</code> the most recent log events\n   *     are retrieved, to up 1 MB or 10,000 log events.</p>\n   */\n  startTime?: number;\n\n  /**\n   * <p>The end of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp later than this time are not returned.</p>\n   */\n  endTime?: number;\n\n  /**\n   * <p>The filter pattern to use. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html\">Filter and Pattern Syntax</a>.</p>\n   *          <p>If not provided, all the events are matched.</p>\n   */\n  filterPattern?: string;\n\n  /**\n   * <p>The token for the next set of events to return. (You received this token from a previous call.)</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of events to return. The default is 10,000 events.</p>\n   */\n  limit?: number;\n\n  /**\n   * @deprecated\n   *\n   * <p>If the value is true, the operation makes a best effort to provide responses that\n   *       contain events from multiple log streams within the log group, interleaved in a single\n   *       response. If the value is false, all the matched log events in the first log stream are\n   *       searched first, then those in the next log stream, and so on. The default is false.</p>\n   *          <p>\n   *             <b>Important:</b> Starting on June 17, 2019, this parameter\n   *       is ignored and the value is assumed to be true. The response from this operation always\n   *       interleaves events from multiple log streams within a log group.</p>\n   */\n  interleaved?: boolean;\n}\n\nexport namespace FilterLogEventsRequest {\n  export const filterSensitiveLog = (obj: FilterLogEventsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the search status of a log stream.</p>\n */\nexport interface SearchedLogStream {\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName?: string;\n\n  /**\n   * <p>Indicates whether all the events in this log stream were searched.</p>\n   */\n  searchedCompletely?: boolean;\n}\n\nexport namespace SearchedLogStream {\n  export const filterSensitiveLog = (obj: SearchedLogStream): any => ({\n    ...obj,\n  });\n}\n\nexport interface FilterLogEventsResponse {\n  /**\n   * <p>The matched events.</p>\n   */\n  events?: FilteredLogEvent[];\n\n  /**\n   * <p>\n   *             <b>IMPORTANT</b> Starting on May 15, 2020,\n   *     this parameter will be deprecated. This parameter will be an empty list\n   *     after the deprecation occurs.</p>\n   *          <p>Indicates which log streams have been searched and whether each has been searched completely.</p>\n   */\n  searchedLogStreams?: SearchedLogStream[];\n\n  /**\n   * <p>The token to use when requesting the next set of items. The token expires after 24 hours.</p>\n   */\n  nextToken?: string;\n}\n\nexport namespace FilterLogEventsResponse {\n  export const filterSensitiveLog = (obj: FilterLogEventsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogEventsRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n\n  /**\n   * <p>The start of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp equal to this time or later than this time are included.\n   *       Events with a timestamp earlier than this time are not included.</p>\n   */\n  startTime?: number;\n\n  /**\n   * <p>The end of the time range, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC. Events with a timestamp equal to or later than this time are not\n   *       included.</p>\n   */\n  endTime?: number;\n\n  /**\n   * <p>The token for the next set of items to return. (You received this token from a previous call.)</p>\n   *          <p>Using this token works only when you specify <code>true</code> for <code>startFromHead</code>.</p>\n   */\n  nextToken?: string;\n\n  /**\n   * <p>The maximum number of log events returned. If you don't specify a value, the maximum is\n   *       as many log events as can fit in a response size of 1 MB, up to 10,000 log events.</p>\n   */\n  limit?: number;\n\n  /**\n   * <p>If the value is true, the earliest log events are returned first.\n   *       If the value is false, the latest log events are returned first.\n   *       The default value is false.</p>\n   *          <p>If you are using <code>nextToken</code> in this operation, you must specify <code>true</code> for <code>startFromHead</code>.</p>\n   */\n  startFromHead?: boolean;\n}\n\nexport namespace GetLogEventsRequest {\n  export const filterSensitiveLog = (obj: GetLogEventsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log event.</p>\n */\nexport interface OutputLogEvent {\n  /**\n   * <p>The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  timestamp?: number;\n\n  /**\n   * <p>The data contained in the log event.</p>\n   */\n  message?: string;\n\n  /**\n   * <p>The time the event was ingested, expressed as the number of milliseconds after Jan 1,\n   *       1970 00:00:00 UTC.</p>\n   */\n  ingestionTime?: number;\n}\n\nexport namespace OutputLogEvent {\n  export const filterSensitiveLog = (obj: OutputLogEvent): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogEventsResponse {\n  /**\n   * <p>The events.</p>\n   */\n  events?: OutputLogEvent[];\n\n  /**\n   * <p>The token for the next set of items in the forward direction. The token expires after\n   *       24 hours. If you have reached the end of the stream, it returns the same token you passed\n   *       in.</p>\n   */\n  nextForwardToken?: string;\n\n  /**\n   * <p>The token for the next set of items in the backward direction. The token expires after\n   *       24 hours. This token is never null. If you have reached the end of the stream, it returns the\n   *       same token you passed in.</p>\n   */\n  nextBackwardToken?: string;\n}\n\nexport namespace GetLogEventsResponse {\n  export const filterSensitiveLog = (obj: GetLogEventsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogGroupFieldsRequest {\n  /**\n   * <p>The name of the log group to search.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The time to set as the center of the query. If you specify <code>time</code>, the 8\n   *       minutes before and 8 minutes after this time are searched. If you omit <code>time</code>, the\n   *       past 15 minutes are queried.</p>\n   *          <p>The <code>time</code> value is specified as epoch time, the number of seconds since\n   *       January 1, 1970, 00:00:00 UTC.</p>\n   */\n  time?: number;\n}\n\nexport namespace GetLogGroupFieldsRequest {\n  export const filterSensitiveLog = (obj: GetLogGroupFieldsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The fields contained in log events found by a <code>GetLogGroupFields</code> operation,\n *       along with the percentage of queried log events in which each field appears.</p>\n */\nexport interface LogGroupField {\n  /**\n   * <p>The name of a log field.</p>\n   */\n  name?: string;\n\n  /**\n   * <p>The percentage of log events queried that contained the field.</p>\n   */\n  percent?: number;\n}\n\nexport namespace LogGroupField {\n  export const filterSensitiveLog = (obj: LogGroupField): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogGroupFieldsResponse {\n  /**\n   * <p>The array of fields found in the query. Each object in the array contains the name of the field, along with the\n   *     percentage of time it appeared in the log events that were queried.</p>\n   */\n  logGroupFields?: LogGroupField[];\n}\n\nexport namespace GetLogGroupFieldsResponse {\n  export const filterSensitiveLog = (obj: GetLogGroupFieldsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogRecordRequest {\n  /**\n   * <p>The pointer corresponding to the log event record you want to retrieve. You get this from\n   *       the response of a <code>GetQueryResults</code> operation. In that response, the value of the\n   *         <code>@ptr</code> field for a log event is the value to use as <code>logRecordPointer</code>\n   *       to retrieve that complete log event record.</p>\n   */\n  logRecordPointer: string | undefined;\n}\n\nexport namespace GetLogRecordRequest {\n  export const filterSensitiveLog = (obj: GetLogRecordRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetLogRecordResponse {\n  /**\n   * <p>The requested log event, as a JSON string.</p>\n   */\n  logRecord?: { [key: string]: string };\n}\n\nexport namespace GetLogRecordResponse {\n  export const filterSensitiveLog = (obj: GetLogRecordResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetQueryResultsRequest {\n  /**\n   * <p>The ID number of the query.</p>\n   */\n  queryId: string | undefined;\n}\n\nexport namespace GetQueryResultsRequest {\n  export const filterSensitiveLog = (obj: GetQueryResultsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains one field from one log event returned by a CloudWatch Logs Insights query, along with the value of that field.</p>\n *          <p>For more information about the fields that are\n *       generated by CloudWatch logs, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html\">Supported Logs and Discovered Fields</a>.</p>\n */\nexport interface ResultField {\n  /**\n   * <p>The log event field.</p>\n   */\n  field?: string;\n\n  /**\n   * <p>The value of this field.</p>\n   */\n  value?: string;\n}\n\nexport namespace ResultField {\n  export const filterSensitiveLog = (obj: ResultField): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains the number of log events scanned by the query, the number of log events that matched the\n *       query criteria, and the total number of bytes in the log events that were scanned.</p>\n */\nexport interface QueryStatistics {\n  /**\n   * <p>The number of log events that matched the query string.</p>\n   */\n  recordsMatched?: number;\n\n  /**\n   * <p>The total number of log events scanned during the query.</p>\n   */\n  recordsScanned?: number;\n\n  /**\n   * <p>The total number of bytes in the log events scanned during the query.</p>\n   */\n  bytesScanned?: number;\n}\n\nexport namespace QueryStatistics {\n  export const filterSensitiveLog = (obj: QueryStatistics): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetQueryResultsResponse {\n  /**\n   * <p>The log events that matched the query criteria during the most recent time it ran.</p>\n   *          <p>The <code>results</code> value is an array of arrays. Each log event is one object in the\n   *       top-level array. Each of these log event objects is an array of\n   *         <code>field</code>/<code>value</code> pairs.</p>\n   */\n  results?: ResultField[][];\n\n  /**\n   * <p>Includes the number of log events scanned by the query, the number of log events that matched the\n   *     query criteria, and the total number of bytes in the log events that were scanned. These values\n   *     reflect the full raw results of the query.</p>\n   */\n  statistics?: QueryStatistics;\n\n  /**\n   * <p>The status of the most recent running of the query. Possible values are <code>Cancelled</code>,\n   *       <code>Complete</code>, <code>Failed</code>, <code>Running</code>, <code>Scheduled</code>,\n   *       <code>Timeout</code>, and <code>Unknown</code>.</p>\n   *          <p>Queries time out after 15 minutes of execution. To avoid having your queries time out,\n   *       reduce the time range being searched or partition your query into a number of queries.</p>\n   */\n  status?: QueryStatus | string;\n}\n\nexport namespace GetQueryResultsResponse {\n  export const filterSensitiveLog = (obj: GetQueryResultsResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a log event, which is a record of activity that was recorded\n *       by the application or resource being monitored.</p>\n */\nexport interface InputLogEvent {\n  /**\n   * <p>The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970\n   *       00:00:00 UTC.</p>\n   */\n  timestamp: number | undefined;\n\n  /**\n   * <p>The raw event message.</p>\n   */\n  message: string | undefined;\n}\n\nexport namespace InputLogEvent {\n  export const filterSensitiveLog = (obj: InputLogEvent): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The sequence token is not valid. You can get the correct sequence token in\n *       the <code>expectedSequenceToken</code> field in the <code>InvalidSequenceTokenException</code>\n *     message. </p>\n */\nexport interface InvalidSequenceTokenException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidSequenceTokenException\";\n  $fault: \"client\";\n  expectedSequenceToken?: string;\n  message?: string;\n}\n\nexport namespace InvalidSequenceTokenException {\n  export const filterSensitiveLog = (obj: InvalidSequenceTokenException): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n}\n\nexport namespace ListTagsLogGroupRequest {\n  export const filterSensitiveLog = (obj: ListTagsLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsLogGroupResponse {\n  /**\n   * <p>The tags for the log group.</p>\n   */\n  tags?: { [key: string]: string };\n}\n\nexport namespace ListTagsLogGroupResponse {\n  export const filterSensitiveLog = (obj: ListTagsLogGroupResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutDestinationRequest {\n  /**\n   * <p>A name for the destination.</p>\n   */\n  destinationName: string | undefined;\n\n  /**\n   * <p>The ARN of an Amazon Kinesis stream to which to deliver matching log events.</p>\n   */\n  targetArn: string | undefined;\n\n  /**\n   * <p>The ARN of an IAM role that grants CloudWatch Logs permissions to call the Amazon\n   *       Kinesis <code>PutRecord</code> operation on the destination stream.</p>\n   */\n  roleArn: string | undefined;\n}\n\nexport namespace PutDestinationRequest {\n  export const filterSensitiveLog = (obj: PutDestinationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutDestinationResponse {\n  /**\n   * <p>The destination.</p>\n   */\n  destination?: Destination;\n}\n\nexport namespace PutDestinationResponse {\n  export const filterSensitiveLog = (obj: PutDestinationResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutDestinationPolicyRequest {\n  /**\n   * <p>A name for an existing destination.</p>\n   */\n  destinationName: string | undefined;\n\n  /**\n   * <p>An IAM policy document that authorizes cross-account users to deliver their log events\n   *       to the associated destination. This can be up to 5120 bytes.</p>\n   */\n  accessPolicy: string | undefined;\n}\n\nexport namespace PutDestinationPolicyRequest {\n  export const filterSensitiveLog = (obj: PutDestinationPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutLogEventsRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The name of the log stream.</p>\n   */\n  logStreamName: string | undefined;\n\n  /**\n   * <p>The log events.</p>\n   */\n  logEvents: InputLogEvent[] | undefined;\n\n  /**\n   * <p>The sequence token obtained from the response of the previous <code>PutLogEvents</code>\n   *       call. An upload in a newly created log stream does not require a sequence token. You can also\n   *       get the sequence token using <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogStreams.html\">DescribeLogStreams</a>. If you call <code>PutLogEvents</code> twice within a narrow\n   *       time period using the same value for <code>sequenceToken</code>, both calls might be\n   *       successful or one might be rejected.</p>\n   */\n  sequenceToken?: string;\n}\n\nexport namespace PutLogEventsRequest {\n  export const filterSensitiveLog = (obj: PutLogEventsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents the rejected events.</p>\n */\nexport interface RejectedLogEventsInfo {\n  /**\n   * <p>The log events that are too new.</p>\n   */\n  tooNewLogEventStartIndex?: number;\n\n  /**\n   * <p>The log events that are too old.</p>\n   */\n  tooOldLogEventEndIndex?: number;\n\n  /**\n   * <p>The expired log events.</p>\n   */\n  expiredLogEventEndIndex?: number;\n}\n\nexport namespace RejectedLogEventsInfo {\n  export const filterSensitiveLog = (obj: RejectedLogEventsInfo): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutLogEventsResponse {\n  /**\n   * <p>The next sequence token.</p>\n   */\n  nextSequenceToken?: string;\n\n  /**\n   * <p>The rejected events.</p>\n   */\n  rejectedLogEventsInfo?: RejectedLogEventsInfo;\n}\n\nexport namespace PutLogEventsResponse {\n  export const filterSensitiveLog = (obj: PutLogEventsResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The most likely cause is an invalid AWS access key ID or secret key.</p>\n */\nexport interface UnrecognizedClientException extends __SmithyException, $MetadataBearer {\n  name: \"UnrecognizedClientException\";\n  $fault: \"client\";\n  message?: string;\n}\n\nexport namespace UnrecognizedClientException {\n  export const filterSensitiveLog = (obj: UnrecognizedClientException): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutMetricFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>A name for the metric filter.</p>\n   */\n  filterName: string | undefined;\n\n  /**\n   * <p>A filter pattern for extracting metric data out of ingested log events.</p>\n   */\n  filterPattern: string | undefined;\n\n  /**\n   * <p>A collection of information that defines how metric data gets emitted.</p>\n   */\n  metricTransformations: MetricTransformation[] | undefined;\n}\n\nexport namespace PutMetricFilterRequest {\n  export const filterSensitiveLog = (obj: PutMetricFilterRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutQueryDefinitionRequest {\n  /**\n   * <p>A name for the query definition. If you are saving a lot of query definitions, we\n   *       recommend that you name them so that you can easily find the ones you want by using the first\n   *       part of the name as a filter in the <code>queryDefinitionNamePrefix</code> parameter of <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a>.</p>\n   */\n  name: string | undefined;\n\n  /**\n   * <p>If you are updating a query definition, use this parameter to specify the ID of the query\n   *       definition that you want to update. You can use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeQueryDefinitions.html\">DescribeQueryDefinitions</a> to retrieve the IDs of your saved query\n   *       definitions.</p>\n   *          <p>If you are creating a query definition, do not specify this parameter. CloudWatch\n   *       generates a unique ID for the new query definition and include it in the response to this\n   *       operation.</p>\n   */\n  queryDefinitionId?: string;\n\n  /**\n   * <p>Use this parameter to include specific log groups as part of your query definition.</p>\n   *          <p>If you are updating a query definition and you omit this parameter, then the updated\n   *       definition will contain no log groups.</p>\n   */\n  logGroupNames?: string[];\n\n  /**\n   * <p>The query string to use for this definition.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   */\n  queryString: string | undefined;\n}\n\nexport namespace PutQueryDefinitionRequest {\n  export const filterSensitiveLog = (obj: PutQueryDefinitionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutQueryDefinitionResponse {\n  /**\n   * <p>The ID of the query definition.</p>\n   */\n  queryDefinitionId?: string;\n}\n\nexport namespace PutQueryDefinitionResponse {\n  export const filterSensitiveLog = (obj: PutQueryDefinitionResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutResourcePolicyRequest {\n  /**\n   * <p>Name of the new policy. This parameter is required.</p>\n   */\n  policyName?: string;\n\n  /**\n   * <p>Details of the new policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string.\n   *     This parameter is required.</p>\n   *          <p>The following example creates a resource policy enabling the Route 53 service to put\n   *       DNS query logs in to the specified log group. Replace <code>\"logArn\"</code> with the ARN of your CloudWatch Logs resource, such as a log group or log stream.</p>\n   *          <p>\n   *             <code>{\n   *    \"Version\": \"2012-10-17\",\n   *    \"Statement\": [\n   *      {\n   *        \"Sid\": \"Route53LogsToCloudWatchLogs\",\n   *        \"Effect\": \"Allow\",\n   *        \"Principal\": {\n   *         \"Service\": [\n   *                 \"route53.amazonaws.com\"\n   *                ]\n   *             },\n   *          \"Action\":\"logs:PutLogEvents\",\n   *          \"Resource\": \"logArn\"\n   *       }\n   *     ]\n   * } </code>\n   *\n   *          </p>\n   */\n  policyDocument?: string;\n}\n\nexport namespace PutResourcePolicyRequest {\n  export const filterSensitiveLog = (obj: PutResourcePolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutResourcePolicyResponse {\n  /**\n   * <p>The new policy.</p>\n   */\n  resourcePolicy?: ResourcePolicy;\n}\n\nexport namespace PutResourcePolicyResponse {\n  export const filterSensitiveLog = (obj: PutResourcePolicyResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutRetentionPolicyRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The number of days to retain the log events in the specified log group.\n   *       Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.</p>\n   *          <p>If you omit <code>retentionInDays</code> in a <code>PutRetentionPolicy</code> operation,\n   *   the events in the log group are always retained and never expire.</p>\n   */\n  retentionInDays: number | undefined;\n}\n\nexport namespace PutRetentionPolicyRequest {\n  export const filterSensitiveLog = (obj: PutRetentionPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutSubscriptionFilterRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>A name for the subscription filter. If you are updating an existing filter, you must\n   *       specify the correct name in <code>filterName</code>. Otherwise, the call fails because you\n   *       cannot associate a second filter with a log group. To find the name of the filter currently\n   *       associated with a log group, use <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeSubscriptionFilters.html\">DescribeSubscriptionFilters</a>.</p>\n   */\n  filterName: string | undefined;\n\n  /**\n   * <p>A filter pattern for subscribing to a filtered stream of log events.</p>\n   */\n  filterPattern: string | undefined;\n\n  /**\n   * <p>The ARN of the destination to deliver matching log events to. Currently, the supported\n   *       destinations are:</p>\n   *          <ul>\n   *             <li>\n   *                <p>An Amazon Kinesis stream belonging to the same account as the subscription filter,\n   *           for same-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>A logical destination (specified using an ARN) belonging to a different account,\n   *           for cross-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>An Amazon Kinesis Firehose delivery stream belonging to the same account as the\n   *           subscription filter, for same-account delivery.</p>\n   *             </li>\n   *             <li>\n   *                <p>An AWS Lambda function belonging to the same account as the subscription filter,\n   *           for same-account delivery.</p>\n   *             </li>\n   *          </ul>\n   */\n  destinationArn: string | undefined;\n\n  /**\n   * <p>The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log\n   *       events to the destination stream. You don't need to provide the ARN when you are working with\n   *       a logical destination for cross-account delivery.</p>\n   */\n  roleArn?: string;\n\n  /**\n   * <p>The method used to distribute log data to the destination. By default, log data is\n   *       grouped by log stream, but the grouping can be set to random for a more even distribution.\n   *       This property is only applicable when the destination is an Amazon Kinesis stream. </p>\n   */\n  distribution?: Distribution | string;\n}\n\nexport namespace PutSubscriptionFilterRequest {\n  export const filterSensitiveLog = (obj: PutSubscriptionFilterRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Reserved.</p>\n */\nexport interface QueryCompileErrorLocation {\n  /**\n   * <p>Reserved.</p>\n   */\n  startCharOffset?: number;\n\n  /**\n   * <p>Reserved.</p>\n   */\n  endCharOffset?: number;\n}\n\nexport namespace QueryCompileErrorLocation {\n  export const filterSensitiveLog = (obj: QueryCompileErrorLocation): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Reserved.</p>\n */\nexport interface QueryCompileError {\n  /**\n   * <p>Reserved.</p>\n   */\n  location?: QueryCompileErrorLocation;\n\n  /**\n   * <p>Reserved.</p>\n   */\n  message?: string;\n}\n\nexport namespace QueryCompileError {\n  export const filterSensitiveLog = (obj: QueryCompileError): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The query string is not valid. Details about this error are displayed in a\n *       <code>QueryCompileError</code> object. For more information, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_QueryCompileError.html\">QueryCompileError</a>.</p>\n *          <p>For more information about valid query syntax, see\n *       <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n */\nexport interface MalformedQueryException extends __SmithyException, $MetadataBearer {\n  name: \"MalformedQueryException\";\n  $fault: \"client\";\n  /**\n   * <p>Reserved.</p>\n   */\n  queryCompileError?: QueryCompileError;\n\n  message?: string;\n}\n\nexport namespace MalformedQueryException {\n  export const filterSensitiveLog = (obj: MalformedQueryException): any => ({\n    ...obj,\n  });\n}\n\nexport interface StartQueryRequest {\n  /**\n   * <p>The log group on which to perform the query.</p>\n   *          <p>A <code>StartQuery</code> operation must include a <code>logGroupNames</code> or a <code>logGroupName</code> parameter, but\n   *       not both.</p>\n   */\n  logGroupName?: string;\n\n  /**\n   * <p>The list of log groups to be queried. You can include up to 20 log groups.</p>\n   *          <p>A <code>StartQuery</code> operation must include a <code>logGroupNames</code> or a <code>logGroupName</code> parameter, but\n   *     not both.</p>\n   */\n  logGroupNames?: string[];\n\n  /**\n   * <p>The beginning of the time range to query. The range is inclusive, so the specified\n   *       start time is included in the query. Specified as epoch time, the\n   *       number of seconds since January 1, 1970, 00:00:00 UTC.</p>\n   */\n  startTime: number | undefined;\n\n  /**\n   * <p>The end of the time range to query. The range is inclusive, so the specified\n   *       end time is included in the query. Specified as epoch\n   *       time, the number of seconds since January 1, 1970, 00:00:00 UTC.</p>\n   */\n  endTime: number | undefined;\n\n  /**\n   * <p>The query string to use.\n   *       For more information, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html\">CloudWatch Logs Insights Query Syntax</a>.</p>\n   */\n  queryString: string | undefined;\n\n  /**\n   * <p>The maximum number of log events to return in the query. If the query string uses the <code>fields</code> command,\n   *     only the specified fields and their values are returned. The default is 1000.</p>\n   */\n  limit?: number;\n}\n\nexport namespace StartQueryRequest {\n  export const filterSensitiveLog = (obj: StartQueryRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface StartQueryResponse {\n  /**\n   * <p>The unique ID of the query. </p>\n   */\n  queryId?: string;\n}\n\nexport namespace StartQueryResponse {\n  export const filterSensitiveLog = (obj: StartQueryResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface StopQueryRequest {\n  /**\n   * <p>The ID number of the query to stop. To find this ID number, use\n   *         <code>DescribeQueries</code>.</p>\n   */\n  queryId: string | undefined;\n}\n\nexport namespace StopQueryRequest {\n  export const filterSensitiveLog = (obj: StopQueryRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface StopQueryResponse {\n  /**\n   * <p>This is true if the query was stopped by the <code>StopQuery</code> operation.</p>\n   */\n  success?: boolean;\n}\n\nexport namespace StopQueryResponse {\n  export const filterSensitiveLog = (obj: StopQueryResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The key-value pairs to use for the tags.</p>\n   */\n  tags: { [key: string]: string } | undefined;\n}\n\nexport namespace TagLogGroupRequest {\n  export const filterSensitiveLog = (obj: TagLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface TestMetricFilterRequest {\n  /**\n   * <p>A symbolic description of how CloudWatch Logs should interpret the data in each log\n   *       event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You\n   *       use the filter pattern to specify what to look for in the log event message.</p>\n   */\n  filterPattern: string | undefined;\n\n  /**\n   * <p>The log event messages to test.</p>\n   */\n  logEventMessages: string[] | undefined;\n}\n\nexport namespace TestMetricFilterRequest {\n  export const filterSensitiveLog = (obj: TestMetricFilterRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Represents a matched event.</p>\n */\nexport interface MetricFilterMatchRecord {\n  /**\n   * <p>The event number.</p>\n   */\n  eventNumber?: number;\n\n  /**\n   * <p>The raw event data.</p>\n   */\n  eventMessage?: string;\n\n  /**\n   * <p>The values extracted from the event data by the filter.</p>\n   */\n  extractedValues?: { [key: string]: string };\n}\n\nexport namespace MetricFilterMatchRecord {\n  export const filterSensitiveLog = (obj: MetricFilterMatchRecord): any => ({\n    ...obj,\n  });\n}\n\nexport interface TestMetricFilterResponse {\n  /**\n   * <p>The matched events.</p>\n   */\n  matches?: MetricFilterMatchRecord[];\n}\n\nexport namespace TestMetricFilterResponse {\n  export const filterSensitiveLog = (obj: TestMetricFilterResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagLogGroupRequest {\n  /**\n   * <p>The name of the log group.</p>\n   */\n  logGroupName: string | undefined;\n\n  /**\n   * <p>The tag keys. The corresponding tags are removed from the log group.</p>\n   */\n  tags: string[] | undefined;\n}\n\nexport namespace UntagLogGroupRequest {\n  export const filterSensitiveLog = (obj: UntagLogGroupRequest): any => ({\n    ...obj,\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}