{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [petType, setPetType] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n  const handleSearch = () => {\n    let apiEndpoint = 'http://localhost:3002/api/petfinder?perPage=100';\n    if (isZipCode(searchText)) {\n      // If the input is a ZIP code, set the 'zipcode' variable\n      const zipcode = searchText;\n\n      // Construct the API query with 'location' parameter\n      apiEndpoint += `&location=${zipcode}`;\n    } else {\n      // If the input is not a ZIP code, set the 'type' variable\n      const type = petType;\n      // Construct the API query with 'type' parameter\n      apiEndpoint += `&type=${type}`;\n    }\n    console.log(apiEndpoint);\n    // Make the API request using 'apiEndpoint'\n    // You can use fetch or any other method you prefer\n    fetch(apiEndpoint).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('API request failed');\n    }).then(data => {\n      console.log(data);\n      onSearch(data);\n    }).catch(error => {\n      console.error('API request error:', error);\n    });\n  };\n  function isZipCode(text) {\n    // Add your ZIP code validation logic here\n    // For example, you can check if the input is a 5-digit number\n    return /^\\d{5}$/.test(text);\n  }\n  const handleShareLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        try {\n          const {\n            coords\n          } = position;\n          const {\n            latitude,\n            longitude\n          } = coords;\n          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`);\n          const data = await response.json();\n          const zipCode = data.address.postcode;\n          if (zipCode) {\n            setSearchText(zipCode);\n          }\n        } catch (error) {\n          console.error(\"Error getting zip code:\", error);\n        }\n      }, error => {\n        // Handle any errors\n        alert(`Error getting location: ${error.message}`);\n      });\n    } else {\n      alert(\"Geolocation is not supported in your browser\");\n    }\n  };\n  const handleInputClick = () => {\n    setShowLocationOptions(!showLocationOptions); // Toggle the display of the location options\n  };\n\n  const handleLocationOptionClick = () => {\n    handleShareLocation();\n    setShowLocationOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter zipcode, city, or state\",\n          value: searchText,\n          onChange: e => setSearchText(e.target.value),\n          onClick: handleInputClick,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), showLocationOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-option\",\n          onClick: handleLocationOptionClick,\n          children: \"Share Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: petType,\n        onChange: e => setPetType(e.target.value),\n        className: \"search-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select pet type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dog\",\n          children: \"Dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat\",\n          children: \"Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"horse\",\n          children: \"Horse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bird\",\n          children: \"Bird\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"furry\",\n          children: \"Furry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"barnyard\",\n          children: \"Barnyard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"gwT4waPSBJ0oz/BFf3zSJan7E8Q=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","searchText","setSearchText","petType","setPetType","showLocationOptions","setShowLocationOptions","handleSearch","apiEndpoint","isZipCode","zipcode","type","console","log","fetch","then","response","ok","json","Error","data","catch","error","text","test","handleShareLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","zipCode","address","postcode","alert","message","handleInputClick","handleLocationOptionClick","className","children","placeholder","value","onChange","e","target","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/SearchBar.css';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchText, setSearchText] = useState('');\n  const [petType, setPetType] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n\n  const handleSearch = () => {\n    let apiEndpoint = 'http://localhost:3002/api/petfinder?perPage=100';\n  \n    if (isZipCode(searchText)) {\n      // If the input is a ZIP code, set the 'zipcode' variable\n      const zipcode = searchText;\n      \n      // Construct the API query with 'location' parameter\n      apiEndpoint += `&location=${zipcode}`;\n    } else {\n      // If the input is not a ZIP code, set the 'type' variable\n      const type = petType;\n      // Construct the API query with 'type' parameter\n      apiEndpoint += `&type=${type}`;\n    }\n    console.log(apiEndpoint);\n    // Make the API request using 'apiEndpoint'\n    // You can use fetch or any other method you prefer\n    fetch(apiEndpoint)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('API request failed');\n      })\n      .then(data => {\n        console.log(data);\n        onSearch(data);\n      })\n      .catch(error => {\n        console.error('API request error:', error);\n      });\n  };\n  \n  function isZipCode(text) {\n    // Add your ZIP code validation logic here\n    // For example, you can check if the input is a 5-digit number\n    return /^\\d{5}$/.test(text);\n  }\n  \n\n  const handleShareLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        try {\n          const { coords } = position;\n          const { latitude, longitude } = coords;\n\n          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`);\n          const data = await response.json();\n          const zipCode = data.address.postcode;\n\n          if (zipCode) {\n            setSearchText(zipCode);\n          }\n        } catch (error) {\n          console.error(\"Error getting zip code:\", error);\n        }\n      }, (error) => {\n        // Handle any errors\n        alert(`Error getting location: ${error.message}`);\n      });\n    } else {\n      alert(\"Geolocation is not supported in your browser\");\n    }\n  };\n\n  const handleInputClick = () => {\n    setShowLocationOptions(!showLocationOptions); // Toggle the display of the location options\n  };\n\n  const handleLocationOptionClick = () => {\n    handleShareLocation();\n    setShowLocationOptions(false);\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <div className=\"search-container\">\n        <div className=\"search-input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter zipcode, city, or state\"\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)}\n            onClick={handleInputClick}\n            className=\"search-input\"\n          />\n          {showLocationOptions && (\n            <div className=\"location-option\" onClick={handleLocationOptionClick}>\n              Share Location\n            </div>\n          )}\n        </div>\n        <select\n          value={petType}\n          onChange={(e) => setPetType(e.target.value)}\n          className=\"search-select\"\n        >\n          <option value=\"\">Select pet type</option>\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"horse\">Horse</option>\n          <option value=\"bird\">Bird</option>\n          <option value=\"furry\">Furry</option>\n          <option value=\"barnyard\">Barnyard</option>\n        </select>\n        <button onClick={handleSearch} className=\"search-button\">Search</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}