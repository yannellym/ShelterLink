{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport SearchBar from './SearchBar';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport SampleData from './SampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  // Separate state variables for each filter category\n  const [petType, setPetType] = useState('any');\n  const [breed, setBreed] = useState('any');\n  const [age, setAge] = useState('any');\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    setSearchResults(SampleData);\n  }, []);\n  const filterPets = () => {\n    let filteredData = [...SampleData];\n\n    // Filter by pet type\n    if (petType !== 'any') {\n      filteredData = filteredData.filter(pet => pet.type.toLowerCase() === petType.toLowerCase());\n    }\n    // Filter by age\n    if (age !== 'any') {\n      filteredData = filteredData.filter(pet => pet.age.toLowerCase() === age);\n    }\n    // Add more filter conditions for other filter categories\n\n    setSearchResults(filteredData);\n  };\n  const handleFilterChange = (filterName, value) => {\n    // Update the corresponding state variable based on the filterName\n    switch (filterName) {\n      case 'type':\n        setPetType(value);\n        break;\n      case 'breed':\n        setBreed(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      // Add more cases for other filter categories\n\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          filters: filters,\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"h8nIjwQxbCuYKoS00nYvPbXXqTI=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","PetCard","Filter","SampleData","jsxDEV","_jsxDEV","MainPage","_s","petType","setPetType","breed","setBreed","age","setAge","searchResults","setSearchResults","filterPets","filteredData","filter","pet","type","toLowerCase","handleFilterChange","filterName","value","className","children","filters","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport SearchBar from './SearchBar';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport SampleData from './SampleData';\n\nfunction MainPage() {\n  // Separate state variables for each filter category\n  const [petType, setPetType] = useState('any');\n  const [breed, setBreed] = useState('any');\n  const [age, setAge] = useState('any');\n\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n\n    setSearchResults(SampleData);\n  }, []);\n\n  const filterPets = () => {\n    let filteredData = [...SampleData];\n\n    // Filter by pet type\n    if (petType !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.type.toLowerCase() === petType.toLowerCase());\n    }\n    // Filter by age\n    if (age !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.age.toLowerCase() === age);\n    }\n    // Add more filter conditions for other filter categories\n\n    setSearchResults(filteredData);\n  };\n\n  const handleFilterChange = (filterName, value) => {\n    // Update the corresponding state variable based on the filterName\n    switch (filterName) {\n      case 'type':\n        setPetType(value);\n        break;\n      case 'breed':\n        setBreed(value);\n        break;\n      case 'age':\n        setAge(value);\n        break;\n      // Add more cases for other filter categories\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"main-page\">\n      {/* <div className=\"search-bar\">\n        <SearchBar />\n      </div> */}\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter filters={filters} onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">\n          {searchResults.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}