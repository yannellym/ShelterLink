{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport SampleData from './SampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  onFilterChange,\n  favoritePets,\n  setFavoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const initialFilters = {\n    type: '',\n    breed: '',\n    age: '',\n    gender: '',\n    size: '',\n    // Use an empty string for size\n    coat: '',\n    // Use an empty string for coat\n    tags: '',\n    // Use an empty string for tags\n    name: '',\n    // Use an empty string for name\n    description: '',\n    // Use an empty string for description\n    photos: '',\n    // Use an empty string for photos\n    status: '',\n    // Use an empty string for status\n    contact: '' // Use an empty string for contact\"\n  };\n\n  const [filters, setFilters] = useState(initialFilters);\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // When the component mounts or filters change, filter the data\n    fetchPetData(filters);\n  }, [filters]);\n  const fetchPetData = filters => {\n    const endpoint = 'http://localhost:3001/api/petfinder';\n\n    // Build the query parameters based on the selected filters\n    const queryParams = new URLSearchParams(filters);\n    fetch(`${endpoint}?${queryParams.toString()}`).then(response => response.json()).then(data => {\n      console.log('API Response:', data);\n      setLoading(false);\n\n      // Apply client-side filtering based on filters\n      let filteredData = data.animals || [];\n\n      // Filter by pet type\n      if (filters.type !== 'any') {\n        filteredData = filteredData.filter(pet => pet.type.toLowerCase() === filters.type.toLowerCase());\n      }\n      // Filter by breed\n      if (filters.breed !== 'any') {\n        filteredData = filteredData.filter(pet => pet.breed.toLowerCase() === filters.breed.toLowerCase());\n      }\n      // Filter by age\n      if (filters.age !== 'any') {\n        filteredData = filteredData.filter(pet => pet.age.toLowerCase() === filters.age);\n      }\n      // Filter by gender\n      if (filters.gender !== 'any') {\n        filteredData = filteredData.filter(pet => pet.gender.toLowerCase() === filters.gender);\n      }\n      // Filter by size\n      if (filters.size !== 'any') {\n        filteredData = filteredData.filter(pet => pet.size.toLowerCase() === filters.size);\n      }\n      // Filter by coat\n      if (filters.coat !== 'any') {\n        filteredData = filteredData.filter(pet => pet.coat.toLowerCase() === filters.coat);\n      }\n      setSearchResults(filteredData);\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    });\n  };\n  const handleFilterChange = (filterName, value) => {\n    const updatedFilters = {\n      ...filters,\n      [filterName]: value\n    };\n    setFilters(updatedFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          filters: filters,\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"qXmZm/U0EAED6e0geMsBTB90r5M=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","PetCard","Filter","SampleData","jsxDEV","_jsxDEV","MainPage","onFilterChange","favoritePets","setFavoritePets","addToFavorites","removeFromFavorites","_s","initialFilters","type","breed","age","gender","size","coat","tags","name","description","photos","status","contact","filters","setFilters","searchResults","setSearchResults","loading","setLoading","fetchPetData","endpoint","queryParams","URLSearchParams","fetch","toString","then","response","json","data","console","log","filteredData","animals","filter","pet","toLowerCase","catch","error","message","handleFilterChange","filterName","value","updatedFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isFavorite","some","favoritePet","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport SampleData from './SampleData';\n\nfunction MainPage({ onFilterChange, favoritePets, setFavoritePets, addToFavorites, removeFromFavorites }) {\n  const initialFilters = {\n    type: '', \n    breed: '', \n    age: '', \n    gender: '', \n    size: '', // Use an empty string for size\n    coat: '', // Use an empty string for coat\n    tags: '', // Use an empty string for tags\n    name: '', // Use an empty string for name\n    description: '', // Use an empty string for description\n    photos: '', // Use an empty string for photos\n    status: '', // Use an empty string for status\n    contact: '', // Use an empty string for contact\"\n  };\n\n  const [filters, setFilters] = useState(initialFilters);\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    // When the component mounts or filters change, filter the data\n    fetchPetData(filters);\n  }, [filters]);\n\n\n  const fetchPetData = (filters) => {\n    const endpoint = 'http://localhost:3001/api/petfinder';\n\n    // Build the query parameters based on the selected filters\n    const queryParams = new URLSearchParams(filters);\n\n    fetch(`${endpoint}?${queryParams.toString()}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('API Response:', data);\n        setLoading(false);\n\n        // Apply client-side filtering based on filters\n        let filteredData = data.animals || [];\n\n        // Filter by pet type\n        if (filters.type !== 'any') {\n          filteredData = filteredData.filter((pet) => pet.type.toLowerCase() === filters.type.toLowerCase());\n        }\n        // Filter by breed\n        if (filters.breed !== 'any') {\n          filteredData = filteredData.filter((pet) => pet.breed.toLowerCase() === filters.breed.toLowerCase());\n        }\n        // Filter by age\n        if (filters.age !== 'any') {\n          filteredData = filteredData.filter((pet) => pet.age.toLowerCase() === filters.age);\n        }\n        // Filter by gender\n        if (filters.gender !== 'any') {\n          filteredData = filteredData.filter((pet) => pet.gender.toLowerCase() === filters.gender);\n        }\n        // Filter by size\n        if (filters.size !== 'any') {\n          filteredData = filteredData.filter((pet) => pet.size.toLowerCase() === filters.size);\n        }\n        // Filter by coat\n        if (filters.coat !== 'any') {\n          filteredData = filteredData.filter((pet) => pet.coat.toLowerCase() === filters.coat);\n        }\n\n        setSearchResults(filteredData);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      });\n  };\n\n  const handleFilterChange = (filterName, value) => {\n    const updatedFilters = { ...filters, [filterName]: value };\n    setFilters(updatedFilters);\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter filters={filters} onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className=\"pet-card-list\">\n            {searchResults.map((pet) => (\n              <PetCard\n                key={pet.id}\n                pet={pet}\n                addToFavorites={addToFavorites}\n                removeFromFavorites={removeFromFavorites}\n                isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}