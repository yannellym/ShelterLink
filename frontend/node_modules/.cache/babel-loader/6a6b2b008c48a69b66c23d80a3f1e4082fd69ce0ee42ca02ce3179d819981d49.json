{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10; // Display 10 pets per page\n  const [cachedData, setCachedData] = useState([]); // Initialize with an empty array\n  const [totalPages, setTotalPages] = useState(0); // Initialize with 0 pages\n  const [apiCalls, setApiCalls] = useState(0); // Counter for API calls\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n\n  // Function to fetch pets and store them in memory\n  const fetchPets = async () => {\n    try {\n      const endpoint = `http://localhost:3002/api/petfinder?perPage=20&page=${apiCalls + 1}`; // Fetch 20 pets per API call\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      console.log('API Response:', data); // Print the API response\n\n      if (data && data.animals) {\n        const updatedCachedData = [...cachedData, ...data.animals]; // Merge new pets with cached data\n        setCachedData(updatedCachedData); // Update cachedData with new pets\n        console.log(updatedCachedData, \"cachedData\");\n        setTotalPages(Math.ceil(updatedCachedData.length / itemsPerPage)); // Calculate total pages\n        setSearchResults(updatedCachedData); // Set searchResults with merged data\n        setLoading(false);\n        setApiCalls(apiCalls + 1); // Increment API call counter\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (apiCalls < 3) {\n      fetchPets(); // Fetch pets up to 3 times when the component mounts\n    }\n  }, [apiCalls]);\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n    setCurrentPage(1); // Reset to the first page\n  };\n\n  const applyFilters = (data, filters) => {\n    return data.filter(pet => {\n      // Flag to check if the pet matches all filters\n      let matchesAllFilters = true;\n      for (const filterKey in filters) {\n        var _filters$filterKey, _pet$filterKey;\n        const filterValue = (_filters$filterKey = filters[filterKey]) === null || _filters$filterKey === void 0 ? void 0 : _filters$filterKey.toLowerCase();\n        const petValue = (_pet$filterKey = pet[filterKey]) === null || _pet$filterKey === void 0 ? void 0 : _pet$filterKey.toLowerCase();\n\n        // If the filter value is \"any,\" skip this filter\n        if (filterValue === 'any') {\n          continue;\n        }\n\n        // Special handling for the \"type\" filter to handle both \"Cat\" and \"Dog\"\n        if (filterKey === 'type') {\n          if (filterValue === 'cat' && petValue !== 'cat') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n\n          if (filterValue === 'dog' && petValue !== 'dog') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else if (filterKey === 'breed') {\n          var _pet$breeds, _pet$breeds$primary;\n          // Handle the \"breed\" filter\n          const primaryBreed = (_pet$breeds = pet.breeds) === null || _pet$breeds === void 0 ? void 0 : (_pet$breeds$primary = _pet$breeds.primary) === null || _pet$breeds$primary === void 0 ? void 0 : _pet$breeds$primary.toLowerCase();\n          if (primaryBreed !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else {\n          // For other filters, compare values directly\n          if (petValue !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        }\n      }\n\n      // If the pet matches all filters, include it in the results\n      return matchesAllFilters;\n    });\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      // Apply filters to the cached data\n      const filteredResults = applyFilters(cachedData, selectedFilters);\n      if (filteredResults.length > 0) {\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const petsToDisplay = filteredResults.slice(startIndex, endIndex);\n        return petsToDisplay.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderPaginationButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-horizontal\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? 'active' : '',\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), totalPages > 1 && renderPaginationButtons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"KR5GzOU7pevZWKhDhvBM8U+JHhI=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","currentPage","setCurrentPage","itemsPerPage","cachedData","setCachedData","totalPages","setTotalPages","apiCalls","setApiCalls","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchPets","endpoint","response","fetch","data","json","console","log","animals","updatedCachedData","Math","ceil","length","error","message","handlePageChange","page","handleFilterChange","newFilters","applyFilters","filters","filter","pet","matchesAllFilters","filterKey","_filters$filterKey","_pet$filterKey","filterValue","toLowerCase","petValue","_pet$breeds","_pet$breeds$primary","primaryBreed","breeds","primary","renderPetCards","filteredResults","startIndex","endIndex","petsToDisplay","slice","map","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","children","renderPaginationButtons","className","Array","from","_","index","onClick","onFilterChange","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10; // Display 10 pets per page\n  const [cachedData, setCachedData] = useState([]); // Initialize with an empty array\n  const [totalPages, setTotalPages] = useState(0); // Initialize with 0 pages\n  const [apiCalls, setApiCalls] = useState(0); // Counter for API calls\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch pets and store them in memory\n  const fetchPets = async () => {\n    try {\n      const endpoint = `http://localhost:3002/api/petfinder?perPage=20&page=${apiCalls + 1}`; // Fetch 20 pets per API call\n      const response = await fetch(endpoint);\n      const data = await response.json();\n\n      console.log('API Response:', data); // Print the API response\n\n      if (data && data.animals) {\n        const updatedCachedData = [...cachedData, ...data.animals]; // Merge new pets with cached data\n        setCachedData(updatedCachedData); // Update cachedData with new pets\n        console.log(updatedCachedData, \"cachedData\");\n        setTotalPages(Math.ceil(updatedCachedData.length / itemsPerPage)); // Calculate total pages\n        setSearchResults(updatedCachedData); // Set searchResults with merged data\n        setLoading(false);\n        setApiCalls(apiCalls + 1); // Increment API call counter\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (apiCalls < 3) {\n      fetchPets(); // Fetch pets up to 3 times when the component mounts\n    }\n  }, [apiCalls]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n    setCurrentPage(1); // Reset to the first page\n  };\n\n  const applyFilters = (data, filters) => {\n    return data.filter((pet) => {\n      // Flag to check if the pet matches all filters\n      let matchesAllFilters = true;\n\n      for (const filterKey in filters) {\n        const filterValue = filters[filterKey]?.toLowerCase();\n        const petValue = pet[filterKey]?.toLowerCase();\n\n        // If the filter value is \"any,\" skip this filter\n        if (filterValue === 'any') {\n          continue;\n        }\n\n        // Special handling for the \"type\" filter to handle both \"Cat\" and \"Dog\"\n        if (filterKey === 'type') {\n          if (filterValue === 'cat' && petValue !== 'cat') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n          if (filterValue === 'dog' && petValue !== 'dog') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else if (filterKey === 'breed') {\n          // Handle the \"breed\" filter\n          const primaryBreed = pet.breeds?.primary?.toLowerCase();\n          if (primaryBreed !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else {\n          // For other filters, compare values directly\n          if (petValue !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        }\n      }\n\n      // If the pet matches all filters, include it in the results\n      return matchesAllFilters;\n    });\n  };\n\n  const renderPetCards = () => {\n    if (!loading) {\n      // Apply filters to the cached data\n      const filteredResults = applyFilters(cachedData, selectedFilters);\n\n      if (filteredResults.length > 0) {\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const petsToDisplay = filteredResults.slice(startIndex, endIndex);\n        return petsToDisplay.map((pet) => (\n          <PetCard\n            key={pet.id}\n            pet={pet}\n            addToFavorites={addToFavorites}\n            removeFromFavorites={removeFromFavorites}\n            isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n          />\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  const renderPaginationButtons = () => {\n    return (\n      <div className=\"pagination-horizontal\">\n        {Array.from({ length: totalPages }, (_, index) => (\n          <button\n            key={index}\n            onClick={() => handlePageChange(index + 1)}\n            className={currentPage === index + 1 ? 'active' : ''}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          {/* Pass the handleFilterChange function to the Filter component */}\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {/* Render pet cards based on filtered search results */}\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        {totalPages > 1 && renderPaginationButtons()}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}