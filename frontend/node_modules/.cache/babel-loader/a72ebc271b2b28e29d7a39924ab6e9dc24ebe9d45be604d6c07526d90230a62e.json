{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0); // Start at 0\n  const petsPerPage = 20; // Number of pets to display per page (20 per your request)\n\n  const fetchAnimalsByType = async (type, offset) => {\n    try {\n      const response = await fetch(`http://localhost:3002/api/petfinder?type=${type}&offset=${offset}`);\n      const data = await response.json();\n      console.log('API Response:', data);\n      if (data && data.animals) {\n        setPets(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const offset = currentPage * petsPerPage;\n    fetchAnimalsByType(category, offset);\n  }, [category, currentPage]);\n  const indexOfLastPet = 20;\n  const indexOfFirstPet = 0;\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber - 1); // Adjust to start from 0\n  };\n\n  console.log('Number of pets:', pets.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-list\",\n        children: pets.slice(indexOfFirstPet, indexOfLastPet).map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: Array.from({\n          length: Math.ceil(pets.length / petsPerPage)\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => paginate(index + 1),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"62lkGrUjhhQzS9yXM8hnHT5Rcrc=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPetsPage","_s","category","pets","setPets","loading","setLoading","currentPage","setCurrentPage","petsPerPage","fetchAnimalsByType","type","offset","response","fetch","data","json","console","log","animals","error","message","indexOfLastPet","indexOfFirstPet","paginate","pageNumber","length","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","id","Array","from","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0); // Start at 0\n  const petsPerPage = 20; // Number of pets to display per page (20 per your request)\n\n  const fetchAnimalsByType = async (type, offset) => {\n    try {\n      const response = await fetch(`http://localhost:3002/api/petfinder?type=${type}&offset=${offset}`);\n      const data = await response.json();\n\n      console.log('API Response:', data);\n\n      if (data && data.animals) {\n        setPets(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const offset = currentPage * petsPerPage;\n    fetchAnimalsByType(category, offset);\n  }, [category, currentPage]);\n\n  const indexOfLastPet = 20\n  const indexOfFirstPet = 0\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber - 1); // Adjust to start from 0\n  };\n\n  console.log('Number of pets:', pets.length);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <div className=\"pet-list\">\n            {pets.slice(indexOfFirstPet, indexOfLastPet).map((pet) => (\n              <PetCard key={pet.id} pet={pet} />\n            ))}\n          </div>\n          <div className=\"pagination\">\n            {Array.from({ length: Math.ceil(pets.length / petsPerPage) }, (_, index) => (\n              <button key={index} onClick={() => paginate(index + 1)}>\n                {index + 1}\n              </button>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}