{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchResults } from './SearchResultContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationSpecificPets = () => {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const searchText = searchParams.get('searchText');\n  const petType = searchParams.get('petType');\n  const {\n    searchResults\n  } = useSearchResults();\n\n  // Check if searchResults is an array before mapping\n  if (!Array.isArray(searchResults)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Search Results for: \", searchText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Pet Type: \", petType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No search results available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }\n\n  // Use searchText and petType to fetch and display search results\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Search Results for: \", searchText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Pet Type: \", petType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), searchResults.map(result =>\n    // Render each search result here\n    pass)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(LocationSpecificPets, \"mSb3MqidIBpssBRk932lVsSQqe0=\", false, function () {\n  return [useLocation, useSearchResults];\n});\n_c = LocationSpecificPets;\nexport default LocationSpecificPets;\nvar _c;\n$RefreshReg$(_c, \"LocationSpecificPets\");","map":{"version":3,"names":["React","useLocation","useSearchResults","jsxDEV","_jsxDEV","LocationSpecificPets","_s","location","searchParams","URLSearchParams","search","searchText","get","petType","searchResults","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","result","pass","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchResults } from './SearchResultContext';\n\nconst LocationSpecificPets = () => {\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const searchText = searchParams.get('searchText');\n    const petType = searchParams.get('petType');\n    const { searchResults } = useSearchResults();\n  \n    // Check if searchResults is an array before mapping\n    if (!Array.isArray(searchResults)) {\n      return (\n        <div>\n          <h2>Search Results for: {searchText}</h2>\n          <h3>Pet Type: {petType}</h3>\n          <p>No search results available.</p>\n        </div>\n      );\n    }\n  \n    // Use searchText and petType to fetch and display search results\n    return (\n      <div>\n        <h2>Search Results for: {searchText}</h2>\n        <h3>Pet Type: {petType}</h3>\n        {searchResults.map((result) => (\n          // Render each search result here\n          pass\n        ))}\n      </div>\n    );\n  };\n  \n\nexport default LocationSpecificPets;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,YAAY,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACzD,MAAMC,UAAU,GAAGH,YAAY,CAACI,GAAG,CAAC,YAAY,CAAC;EACjD,MAAMC,OAAO,GAAGL,YAAY,CAACI,GAAG,CAAC,SAAS,CAAC;EAC3C,MAAM;IAAEE;EAAc,CAAC,GAAGZ,gBAAgB,CAAC,CAAC;;EAE5C;EACA,IAAI,CAACa,KAAK,CAACC,OAAO,CAACF,aAAa,CAAC,EAAE;IACjC,oBACEV,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAI,sBAAoB,EAACN,UAAU;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzCjB,OAAA;QAAAa,QAAA,GAAI,YAAU,EAACJ,OAAO;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BjB,OAAA;QAAAa,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEV;;EAEA;EACA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,sBAAoB,EAACN,UAAU;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzCjB,OAAA;MAAAa,QAAA,GAAI,YAAU,EAACJ,OAAO;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC3BP,aAAa,CAACQ,GAAG,CAAEC,MAAM;IACxB;IACAC,IACD,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA7BED,oBAAoB;EAAA,QACLJ,WAAW,EAIFC,gBAAgB;AAAA;AAAAuB,EAAA,GALxCpB,oBAAoB;AAgC1B,eAAeA,oBAAoB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}