{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const petsPerPage = 20;\n  const cache = [];\n  const fetchAnimalsByType = async (type, page) => {\n    const offset = (page - 1) * petsPerPage;\n    try {\n      const response = await fetch(`http://localhost:3002/api/petfinder?type=${type}&offset=${offset}&limit=${petsPerPage}`);\n      const data = await response.json();\n      console.log('API Response:', data);\n      if (data && data.animals) {\n        const pets = data.animals;\n\n        // Update the cache with the fetched data\n        cache.splice(offset, petsPerPage, ...pets);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAnimalsByType(category, currentPage);\n  }, [category, currentPage]);\n  const totalPets = cache.length; // Total pets in cache\n  const totalPages = Math.ceil(totalPets / petsPerPage);\n\n  // Calculate the start and end indices for the pets to display on the current page.\n  const startIndex = (currentPage - 1) * petsPerPage;\n  const endIndex = Math.min(startIndex + petsPerPage, totalPets);\n\n  // Get the pets to display on the current page.\n  const displayedPets = cache.slice(startIndex, endIndex);\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-list\",\n        children: displayedPets.map((pet, index) => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(index + 1),\n          children: index + 1\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"PQ7R8gAeaGh5X8pNyuJ0JzeeG2c=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPetsPage","_s","category","loading","setLoading","currentPage","setCurrentPage","petsPerPage","cache","fetchAnimalsByType","type","page","offset","response","fetch","data","json","console","log","animals","pets","splice","error","message","totalPets","length","totalPages","Math","ceil","startIndex","endIndex","min","displayedPets","slice","handlePageChange","newPage","className","children","charAt","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","index","onClick","Array","from","_","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const petsPerPage = 20;\n  const cache = [];\n\n  const fetchAnimalsByType = async (type, page) => {\n    const offset = (page - 1) * petsPerPage;\n\n    try {\n      const response = await fetch(\n        `http://localhost:3002/api/petfinder?type=${type}&offset=${offset}&limit=${petsPerPage}`\n      );\n      const data = await response.json();\n\n      console.log('API Response:', data);\n\n      if (data && data.animals) {\n        const pets = data.animals;\n\n        // Update the cache with the fetched data\n        cache.splice(offset, petsPerPage, ...pets);\n\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAnimalsByType(category, currentPage);\n  }, [category, currentPage]);\n\n  const totalPets = cache.length; // Total pets in cache\n  const totalPages = Math.ceil(totalPets / petsPerPage);\n\n  // Calculate the start and end indices for the pets to display on the current page.\n  const startIndex = (currentPage - 1) * petsPerPage;\n  const endIndex = Math.min(startIndex + petsPerPage, totalPets);\n\n  // Get the pets to display on the current page.\n  const displayedPets = cache.slice(startIndex, endIndex);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <div className=\"pet-list\">\n            {displayedPets.map((pet, index) => (\n              <PetCard key={index} pet={pet} />\n            ))}\n          </div>\n          <div className=\"pagination\">\n            <button onClick={() => handlePageChange(currentPage - 1)}>Previous</button>\n            {Array.from({ length: totalPages }, (_, index) => (\n              <button key={index + 1} onClick={() => handlePageChange(index + 1)}>\n                {index + 1}\n              </button>\n            ))}\n            <button onClick={() => handlePageChange(currentPage + 1)}>Next</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}