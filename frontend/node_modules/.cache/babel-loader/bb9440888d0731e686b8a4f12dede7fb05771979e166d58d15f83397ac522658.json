{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\nimport usePetfinderAPI from '../hooks/usePetFinderAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagesToDisplay = 9;\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  _s();\n  const location = useLocation();\n  const state = location.state;\n  const petType = (state === null || state === void 0 ? void 0 : state.petType) || '';\n  const searchText = (state === null || state === void 0 ? void 0 : state.searchText) || '';\n  const [currentPage, setCurrentPage] = useState(1);\n  const [petsToDisplay, setPetsToDisplay] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [maxPage, setMaxPage] = useState(pagesToDisplay);\n  const dependencies = [petType, currentPage, searchText];\n  const {\n    data,\n    loading: apiLoading,\n    error\n  } = usePetfinderAPI(`http://localhost:3002/api/petfinder?type=${petType}&location=${searchText}&limit=20&page=${currentPage}`, dependencies);\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= maxPage) {\n      setCurrentPage(newPage);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // This useEffect watches for changes in the currentPage and triggers the API request\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch data for the new page\n      const response = await fetch(`http://localhost:3002/api/petfinder?type=${petType}&location=${searchText}&limit=20&page=${currentPage}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPetsToDisplay(data.animals || []);\n        setLoading(false);\n      } else {\n        console.error('API request failed:', response.statusText);\n      }\n    };\n    fetchData();\n  }, [currentPage, petType, searchText]);\n  const renderPageNumbers = () => {\n    var _data$pagination;\n    const totalPageCount = (data === null || data === void 0 ? void 0 : (_data$pagination = data.pagination) === null || _data$pagination === void 0 ? void 0 : _data$pagination.total_pages) || 1;\n    const middlePage = Math.floor(pagesToDisplay / 2);\n    let startPage = Math.max(1, currentPage - middlePage);\n    let endPage = Math.min(totalPageCount, startPage + pagesToDisplay - 1);\n    if (endPage - startPage + 1 < pagesToDisplay) {\n      endPage = Math.min(totalPageCount, startPage + pagesToDisplay - 1);\n      startPage = Math.max(1, endPage - pagesToDisplay + 1);\n    }\n    const pageNumbers = Array.from({\n      length: endPage - startPage + 1\n    }, (_, i) => startPage + i);\n    return pageNumbers.map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(pageNumber),\n      className: currentPage === pageNumber ? 'active' : '',\n      children: pageNumber\n    }, pageNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-specific-pets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"search-results-title\",\n      children: \"Search Results for:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pet-type-title\",\n      children: [\"All \", petType, \"s in the \", searchText, \" area\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-card-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : petsToDisplay.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet,\n        addToFavorites: addToFavorites,\n        removeFromFavorites: removeFromFavorites,\n        isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: renderPageNumbers()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: petsToDisplay.length < 20,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSpecificPets, \"/HpErcvsbBj2aWw8IEiTgPrcCZY=\", false, function () {\n  return [useLocation, usePetfinderAPI];\n});\n_c = LocationSpecificPets;\nexport default LocationSpecificPets;\nvar _c;\n$RefreshReg$(_c, \"LocationSpecificPets\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","PetCard","usePetfinderAPI","jsxDEV","_jsxDEV","pagesToDisplay","LocationSpecificPets","favoritePets","addToFavorites","removeFromFavorites","_s","location","state","petType","searchText","currentPage","setCurrentPage","petsToDisplay","setPetsToDisplay","loading","setLoading","maxPage","setMaxPage","dependencies","data","apiLoading","error","handlePageChange","newPage","window","scrollTo","top","behavior","fetchData","response","fetch","ok","json","animals","console","statusText","renderPageNumbers","_data$pagination","totalPageCount","pagination","total_pages","middlePage","Math","floor","startPage","max","endPage","min","pageNumbers","Array","from","length","_","i","map","pageNumber","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pet","isFavorite","some","favoritePet","id","disabled","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\n\nimport usePetfinderAPI from '../hooks/usePetFinderAPI';\n\nconst pagesToDisplay = 9;\n\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  const location = useLocation();\n  const state = location.state;\n  const petType = state?.petType || '';\n  const searchText = state?.searchText || '';\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [petsToDisplay, setPetsToDisplay] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const [maxPage, setMaxPage] = useState(pagesToDisplay);\n\n  const dependencies = [petType, currentPage, searchText];\n\n  const { data, loading: apiLoading, error } = usePetfinderAPI(\n    `http://localhost:3002/api/petfinder?type=${petType}&location=${searchText}&limit=20&page=${currentPage}`,\n    dependencies\n  );\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= maxPage) {\n      setCurrentPage(newPage);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  };\n\n  // This useEffect watches for changes in the currentPage and triggers the API request\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch data for the new page\n      const response = await fetch(\n        `http://localhost:3002/api/petfinder?type=${petType}&location=${searchText}&limit=20&page=${currentPage}`\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        setPetsToDisplay(data.animals || []);\n        setLoading(false);\n      } else {\n        console.error('API request failed:', response.statusText);\n      }\n    };\n\n    fetchData();\n  }, [currentPage, petType, searchText]);\n\n  const renderPageNumbers = () => {\n    const totalPageCount = data?.pagination?.total_pages || 1;\n    const middlePage = Math.floor(pagesToDisplay / 2);\n    let startPage = Math.max(1, currentPage - middlePage);\n    let endPage = Math.min(totalPageCount, startPage + pagesToDisplay - 1);\n\n    if (endPage - startPage + 1 < pagesToDisplay) {\n      endPage = Math.min(totalPageCount, startPage + pagesToDisplay - 1);\n      startPage = Math.max(1, endPage - pagesToDisplay + 1);\n    }\n\n    const pageNumbers = Array.from(\n      { length: endPage - startPage + 1 },\n      (_, i) => startPage + i\n    );\n\n    return pageNumbers.map((pageNumber) => (\n      <button\n        key={pageNumber}\n        onClick={() => handlePageChange(pageNumber)}\n        className={currentPage === pageNumber ? 'active' : ''}\n      >\n        {pageNumber}\n      </button>\n    ));\n  };\n  \n\n  return (\n    <div className=\"location-specific-pets\">\n      <h2 className=\"search-results-title\">Search Results for:</h2>\n      <h3 className=\"pet-type-title\">All {petType}s in the {searchText} area</h3>\n      <div className=\"pet-card-container\">\n        {loading ? (\n          <p className=\"loading\">Loading...</p>\n        ) : (\n          petsToDisplay.map((pet) => (\n            <PetCard\n              key={pet.id}\n              pet={pet}\n              addToFavorites={addToFavorites}\n              removeFromFavorites={removeFromFavorites}\n              isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n            />\n          ))\n        )}\n      </div>\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous Page\n        </button>\n        <div className=\"page-numbers\">\n          {renderPageNumbers()}\n        </div>\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n          disabled={petsToDisplay.length < 20}\n        >\n          Next Page\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default LocationSpecificPets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}