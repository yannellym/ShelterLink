{"ast":null,"code":"import { __assign, __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\n/**\n * @internal\n */\nexport function moveHeadersToQuery(request, options) {\n  var e_1, _a;\n  var _b;\n  if (options === void 0) {\n    options = {};\n  }\n  var _c = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request),\n    headers = _c.headers,\n    _d = _c.query,\n    query = _d === void 0 ? {} : _d;\n  try {\n    for (var _e = __values(Object.keys(headers)), _f = _e.next(); !_f.done; _f = _e.next()) {\n      var name = _f.value;\n      var lname = name.toLowerCase();\n      if (lname.substr(0, 6) === \"x-amz-\" && !((_b = options.unhoistableHeaders) === null || _b === void 0 ? void 0 : _b.has(lname))) {\n        query[name] = headers[name];\n        delete headers[name];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return __assign(__assign({}, request), {\n    headers: headers,\n    query: query\n  });\n}","map":{"version":3,"names":["cloneRequest","moveHeadersToQuery","request","options","_c","clone","headers","_d","query","_e","__values","Object","keys","_f","next","done","name","value","lname","toLowerCase","substr","_b","unhoistableHeaders","has","__assign"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/signature-v4/src/moveHeadersToQuery.ts"],"sourcesContent":["import { HttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\n\n/**\n * @internal\n */\nexport function moveHeadersToQuery(\n  request: HttpRequest,\n  options: { unhoistableHeaders?: Set<string> } = {}\n): HttpRequest & { query: QueryParameterBag } {\n  const { headers, query = {} as QueryParameterBag } =\n    typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n  for (const name of Object.keys(headers)) {\n    const lname = name.toLowerCase();\n    if (lname.substr(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n      query[name] = headers[name];\n      delete headers[name];\n    }\n  }\n\n  return {\n    ...request,\n    headers,\n    query,\n  };\n}\n"],"mappings":";AAEA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C;;;AAGA,OAAM,SAAUC,kBAAkBA,CAChCC,OAAoB,EACpBC,OAAkD;;;EAAlD,IAAAA,OAAA;IAAAA,OAAA,KAAkD;EAAA;EAE5C,IAAAC,EAAA,GACJ,OAAQF,OAAe,CAACG,KAAK,KAAK,UAAU,GAAIH,OAAe,CAACG,KAAK,EAAE,GAAGL,YAAY,CAACE,OAAO,CAAC;IADzFI,OAAO,GAAAF,EAAA,CAAAE,OAAA;IAAEC,EAAA,GAAAH,EAAA,CAAAI,KAA+B;IAA/BA,KAAK,GAAAD,EAAA,cAAG,EAAuB,GAAAA,EACiD;;IACjG,KAAmB,IAAAE,EAAA,GAAAC,QAAA,CAAAC,MAAM,CAACC,IAAI,CAACN,OAAO,CAAC,GAAAO,EAAA,GAAAJ,EAAA,CAAAK,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAJ,EAAA,CAAAK,IAAA,IAAE;MAApC,IAAME,IAAI,GAAAH,EAAA,CAAAI,KAAA;MACb,IAAMC,KAAK,GAAGF,IAAI,CAACG,WAAW,EAAE;MAChC,IAAID,KAAK,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,IAAI,GAAAC,EAAA,GAAClB,OAAO,CAACmB,kBAAkB,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,GAAG,CAACL,KAAK,EAAC,EAAE;QAC9EV,KAAK,CAACQ,IAAI,CAAC,GAAGV,OAAO,CAACU,IAAI,CAAC;QAC3B,OAAOV,OAAO,CAACU,IAAI,CAAC;;;;;;;;;;;;;;EAIxB,OAAAQ,QAAA,CAAAA,QAAA,KACKtB,OAAO;IACVI,OAAO,EAAAA,OAAA;IACPE,KAAK,EAAAA;EAAA;AAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}