{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PersonalizeEventsClient } from \"./PersonalizeEventsClient\";\nimport { PutEventsCommand } from \"./commands/PutEventsCommand\";\nimport { PutItemsCommand } from \"./commands/PutItemsCommand\";\nimport { PutUsersCommand } from \"./commands/PutUsersCommand\";\n/**\n * <p>Amazon Personalize can consume real-time user event data, such as <i>stream</i> or <i>click</i> data, and use\n *       it for model training either alone or combined with historical data. For more information see <a>recording-events</a>.</p>\n */\nvar PersonalizeEvents = /** @class */function (_super) {\n  __extends(PersonalizeEvents, _super);\n  function PersonalizeEvents() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PersonalizeEvents.prototype.putEvents = function (args, optionsOrCb, cb) {\n    var command = new PutEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  PersonalizeEvents.prototype.putItems = function (args, optionsOrCb, cb) {\n    var command = new PutItemsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  PersonalizeEvents.prototype.putUsers = function (args, optionsOrCb, cb) {\n    var command = new PutUsersCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n  return PersonalizeEvents;\n}(PersonalizeEventsClient);\nexport { PersonalizeEvents };","map":{"version":3,"names":["PersonalizeEventsClient","PutEventsCommand","PutItemsCommand","PutUsersCommand","PersonalizeEvents","_super","__extends","prototype","putEvents","args","optionsOrCb","cb","command","send","Error","putItems","putUsers"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/client-personalize-events/PersonalizeEvents.ts"],"sourcesContent":["import { PersonalizeEventsClient } from \"./PersonalizeEventsClient\";\nimport { PutEventsCommand, PutEventsCommandInput, PutEventsCommandOutput } from \"./commands/PutEventsCommand\";\nimport { PutItemsCommand, PutItemsCommandInput, PutItemsCommandOutput } from \"./commands/PutItemsCommand\";\nimport { PutUsersCommand, PutUsersCommandInput, PutUsersCommandOutput } from \"./commands/PutUsersCommand\";\nimport { HttpHandlerOptions as __HttpHandlerOptions } from \"@aws-sdk/types\";\n\n/**\n * <p>Amazon Personalize can consume real-time user event data, such as <i>stream</i> or <i>click</i> data, and use\n *       it for model training either alone or combined with historical data. For more information see <a>recording-events</a>.</p>\n */\nexport class PersonalizeEvents extends PersonalizeEventsClient {\n  /**\n   * <p>Records user interaction event data. For more information see <a>event-record-api</a>.</p>\n   */\n  public putEvents(args: PutEventsCommandInput, options?: __HttpHandlerOptions): Promise<PutEventsCommandOutput>;\n  public putEvents(args: PutEventsCommandInput, cb: (err: any, data?: PutEventsCommandOutput) => void): void;\n  public putEvents(\n    args: PutEventsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutEventsCommandOutput) => void\n  ): void;\n  public putEvents(\n    args: PutEventsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutEventsCommandOutput) => void),\n    cb?: (err: any, data?: PutEventsCommandOutput) => void\n  ): Promise<PutEventsCommandOutput> | void {\n    const command = new PutEventsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Adds one or more items to an Items dataset. For more information see\n   *       <a>importing-items</a>.</p>\n   */\n  public putItems(args: PutItemsCommandInput, options?: __HttpHandlerOptions): Promise<PutItemsCommandOutput>;\n  public putItems(args: PutItemsCommandInput, cb: (err: any, data?: PutItemsCommandOutput) => void): void;\n  public putItems(\n    args: PutItemsCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutItemsCommandOutput) => void\n  ): void;\n  public putItems(\n    args: PutItemsCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutItemsCommandOutput) => void),\n    cb?: (err: any, data?: PutItemsCommandOutput) => void\n  ): Promise<PutItemsCommandOutput> | void {\n    const command = new PutItemsCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n\n  /**\n   * <p>Adds one or more users to a Users dataset. For more information see\n   *       <a>importing-users</a>.</p>\n   */\n  public putUsers(args: PutUsersCommandInput, options?: __HttpHandlerOptions): Promise<PutUsersCommandOutput>;\n  public putUsers(args: PutUsersCommandInput, cb: (err: any, data?: PutUsersCommandOutput) => void): void;\n  public putUsers(\n    args: PutUsersCommandInput,\n    options: __HttpHandlerOptions,\n    cb: (err: any, data?: PutUsersCommandOutput) => void\n  ): void;\n  public putUsers(\n    args: PutUsersCommandInput,\n    optionsOrCb?: __HttpHandlerOptions | ((err: any, data?: PutUsersCommandOutput) => void),\n    cb?: (err: any, data?: PutUsersCommandOutput) => void\n  ): Promise<PutUsersCommandOutput> | void {\n    const command = new PutUsersCommand(args);\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,uBAAuB,QAAQ,2BAA2B;AACnE,SAASC,gBAAgB,QAAuD,6BAA6B;AAC7G,SAASC,eAAe,QAAqD,4BAA4B;AACzG,SAASC,eAAe,QAAqD,4BAA4B;AAGzG;;;;AAIA,IAAAC,iBAAA,0BAAAC,MAAA;EAAuCC,SAAA,CAAAF,iBAAA,EAAAC,MAAA;EAAvC,SAAAD,kBAAA;;EAgFA;EArESA,iBAAA,CAAAG,SAAA,CAAAC,SAAS,GAAhB,UACEC,IAA2B,EAC3BC,WAAwF,EACxFC,EAAsD;IAEtD,IAAMC,OAAO,GAAG,IAAIX,gBAAgB,CAACQ,IAAI,CAAC;IAC1C,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;MACrC,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;KAChC,MAAM,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;MACnC,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE,MAAM,IAAII,KAAK,CAAC,iCAA+B,OAAOJ,WAAa,CAAC;MACzG,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,IAAI,EAAE,EAAEC,EAAE,CAAC;KAC1C,MAAM;MACL,OAAO,IAAI,CAACE,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;;EAE1C,CAAC;EAaMN,iBAAA,CAAAG,SAAA,CAAAQ,QAAQ,GAAf,UACEN,IAA0B,EAC1BC,WAAuF,EACvFC,EAAqD;IAErD,IAAMC,OAAO,GAAG,IAAIV,eAAe,CAACO,IAAI,CAAC;IACzC,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;MACrC,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;KAChC,MAAM,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;MACnC,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE,MAAM,IAAII,KAAK,CAAC,iCAA+B,OAAOJ,WAAa,CAAC;MACzG,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,IAAI,EAAE,EAAEC,EAAE,CAAC;KAC1C,MAAM;MACL,OAAO,IAAI,CAACE,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;;EAE1C,CAAC;EAaMN,iBAAA,CAAAG,SAAA,CAAAS,QAAQ,GAAf,UACEP,IAA0B,EAC1BC,WAAuF,EACvFC,EAAqD;IAErD,IAAMC,OAAO,GAAG,IAAIT,eAAe,CAACM,IAAI,CAAC;IACzC,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;MACrC,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;KAChC,MAAM,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;MACnC,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE,MAAM,IAAII,KAAK,CAAC,iCAA+B,OAAOJ,WAAa,CAAC;MACzG,IAAI,CAACG,IAAI,CAACD,OAAO,EAAEF,WAAW,IAAI,EAAE,EAAEC,EAAE,CAAC;KAC1C,MAAM;MACL,OAAO,IAAI,CAACE,IAAI,CAACD,OAAO,EAAEF,WAAW,CAAC;;EAE1C,CAAC;EACH,OAAAN,iBAAC;AAAD,CAAC,CAhFsCJ,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}