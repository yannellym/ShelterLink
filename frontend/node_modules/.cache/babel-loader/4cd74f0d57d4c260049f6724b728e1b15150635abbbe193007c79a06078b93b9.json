{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Function to calculate and set card heights dynamically\n  const adjustCardHeights = () => {\n    const petCards = document.querySelectorAll('.pet-card'); // Select all pet cards\n    petCards.forEach(card => {\n      const content = card.querySelector('.pet-card-content');\n      if (content) {\n        card.style.height = content.offsetHeight + 'px'; // Set card height to content height\n      }\n    });\n  };\n\n  const fetchAnimalsByType = async type => {\n    try {\n      const response = await fetch(`http://localhost:3002/api/petfinder?type=${type}`);\n      const data = await response.json();\n      console.log('API Response:', data);\n      if (data && data.animals) {\n        setPets(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchAnimalsByType(category);\n  }, [category]);\n\n  // Call the function to adjust card heights when pets data changes (after loading)\n  useEffect(() => {\n    if (!loading) {\n      adjustCardHeights();\n    }\n  }, [loading, pets]);\n  console.log('Number of pets:', pets.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: pets.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"lMIU1Djr0NIEcKTmu8zcO0LhTYM=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","AllPetsPage","_s","category","pets","setPets","loading","setLoading","adjustCardHeights","petCards","document","querySelectorAll","forEach","card","content","querySelector","style","height","offsetHeight","fetchAnimalsByType","type","response","fetch","data","json","console","log","animals","error","message","length","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Function to calculate and set card heights dynamically\n  const adjustCardHeights = () => {\n    const petCards = document.querySelectorAll('.pet-card'); // Select all pet cards\n    petCards.forEach((card) => {\n      const content = card.querySelector('.pet-card-content');\n      if (content) {\n        card.style.height = content.offsetHeight + 'px'; // Set card height to content height\n      }\n    });\n  };\n  \n\n  const fetchAnimalsByType = async (type) => {\n    try {\n            const response = await fetch(`http://localhost:3002/api/petfinder?type=${type}`);\n      const data = await response.json();\n\n      console.log('API Response:', data);\n\n      if (data && data.animals) {\n        setPets(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAnimalsByType(category);\n  }, [category]);\n  \n  \n  // Call the function to adjust card heights when pets data changes (after loading)\n  useEffect(() => {\n    if (!loading) {\n      adjustCardHeights();\n    }\n  }, [loading, pets]);\n\n  console.log('Number of pets:', pets.length);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {pets.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}