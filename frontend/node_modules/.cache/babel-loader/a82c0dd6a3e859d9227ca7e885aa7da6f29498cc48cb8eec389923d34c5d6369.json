{"ast":null,"code":"import { __assign } from \"tslib\";\nexport function resolveUserAgentConfig(input) {\n  return __assign(__assign({}, input), {\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent\n  });\n}","map":{"version":3,"names":["resolveUserAgentConfig","input","__assign","customUserAgent"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/middleware-user-agent/src/configurations.ts"],"sourcesContent":["import { Provider, UserAgent } from \"@aws-sdk/types\";\nexport interface UserAgentInputConfig {\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: string | UserAgent;\n}\ninterface PreviouslyResolved {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  runtime: string;\n}\nexport interface UserAgentResolvedConfig {\n  defaultUserAgentProvider: Provider<UserAgent>;\n  customUserAgent?: UserAgent;\n  runtime: string;\n}\nexport function resolveUserAgentConfig<T>(\n  input: T & PreviouslyResolved & UserAgentInputConfig\n): T & UserAgentResolvedConfig {\n  return {\n    ...input,\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n  };\n}\n"],"mappings":";AAgBA,OAAM,SAAUA,sBAAsBA,CACpCC,KAAoD;EAEpD,OAAAC,QAAA,CAAAA,QAAA,KACKD,KAAK;IACRE,eAAe,EAAE,OAAOF,KAAK,CAACE,eAAe,KAAK,QAAQ,GAAG,CAAC,CAACF,KAAK,CAACE,eAAe,CAAC,CAAC,GAAGF,KAAK,CAACE;EAAe;AAElH"},"metadata":{},"sourceType":"module","externalDependencies":[]}