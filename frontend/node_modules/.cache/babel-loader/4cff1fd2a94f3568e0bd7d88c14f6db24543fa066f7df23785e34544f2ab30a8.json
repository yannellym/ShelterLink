{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as LoggerClass } from './Logger';\nvar logger = new LoggerClass('Amplify');\nvar AmplifyClass = /** @class */function () {\n  function AmplifyClass() {\n    // Everything that is `register`ed is tracked here\n    this._components = [];\n    this._config = {};\n    // All modules (with `getModuleName()`) are stored here for dependency injection\n    this._modules = {};\n    // for backward compatibility to avoid breaking change\n    // if someone is using like Amplify.Auth\n    this.Auth = null;\n    this.Analytics = null;\n    this.API = null;\n    this.Credentials = null;\n    this.Storage = null;\n    this.I18n = null;\n    this.Cache = null;\n    this.PubSub = null;\n    this.Interactions = null;\n    this.Pushnotification = null;\n    this.UI = null;\n    this.XR = null;\n    this.Predictions = null;\n    this.DataStore = null;\n    this.Geo = null;\n    this.Notifications = null;\n    this.Logger = LoggerClass;\n    this.ServiceWorker = null;\n  }\n  AmplifyClass.prototype.register = function (comp) {\n    logger.debug('component registered in amplify', comp);\n    this._components.push(comp);\n    if (typeof comp.getModuleName === 'function') {\n      this._modules[comp.getModuleName()] = comp;\n      this[comp.getModuleName()] = comp;\n    } else {\n      logger.debug('no getModuleName method for component', comp);\n    }\n    // Finally configure this new component(category) loaded\n    // With the new modularization changes in Amplify V3, all the Amplify\n    // component are not loaded/registered right away but when they are\n    // imported (and hence instantiated) in the client's app. This ensures\n    // that all new components imported get correctly configured with the\n    // configuration that Amplify.configure() was called with.\n    comp.configure(this._config);\n  };\n  AmplifyClass.prototype.configure = function (config) {\n    var _this = this;\n    if (!config) return this._config;\n    this._config = Object.assign(this._config, config);\n    logger.debug('amplify config', this._config);\n    // Dependency Injection via property-setting.\n    // This avoids introducing a public method/interface/setter that's difficult to remove later.\n    // Plus, it reduces `if` statements within the `constructor` and `configure` of each module\n    Object.entries(this._modules).forEach(function (_a) {\n      var _b = __read(_a, 2),\n        Name = _b[0],\n        comp = _b[1];\n      // e.g. Auth.*\n      Object.keys(comp).forEach(function (property) {\n        // e.g. Auth[\"Credentials\"] = this._modules[\"Credentials\"] when set\n        if (_this._modules[property]) {\n          comp[property] = _this._modules[property];\n        }\n      });\n    });\n    this._components.map(function (comp) {\n      comp.configure(_this._config);\n    });\n    return this._config;\n  };\n  AmplifyClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable['getCategory'] && typeof pluggable['getCategory'] === 'function') {\n      this._components.map(function (comp) {\n        if (comp['addPluggable'] && typeof comp['addPluggable'] === 'function') {\n          comp.addPluggable(pluggable);\n        }\n      });\n    }\n  };\n  return AmplifyClass;\n}();\nexport { AmplifyClass };\nexport var Amplify = new AmplifyClass();","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","ConsoleLogger","LoggerClass","logger","AmplifyClass","_components","_config","_modules","Auth","Analytics","API","Credentials","Storage","I18n","Cache","PubSub","Interactions","Pushnotification","UI","XR","Predictions","DataStore","Geo","Notifications","Logger","ServiceWorker","prototype","register","comp","debug","getModuleName","configure","config","_this","Object","assign","entries","forEach","_a","_b","Name","keys","property","map","addPluggable","pluggable","Amplify"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/Amplify.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as LoggerClass } from './Logger';\nvar logger = new LoggerClass('Amplify');\nvar AmplifyClass = /** @class */ (function () {\n    function AmplifyClass() {\n        // Everything that is `register`ed is tracked here\n        this._components = [];\n        this._config = {};\n        // All modules (with `getModuleName()`) are stored here for dependency injection\n        this._modules = {};\n        // for backward compatibility to avoid breaking change\n        // if someone is using like Amplify.Auth\n        this.Auth = null;\n        this.Analytics = null;\n        this.API = null;\n        this.Credentials = null;\n        this.Storage = null;\n        this.I18n = null;\n        this.Cache = null;\n        this.PubSub = null;\n        this.Interactions = null;\n        this.Pushnotification = null;\n        this.UI = null;\n        this.XR = null;\n        this.Predictions = null;\n        this.DataStore = null;\n        this.Geo = null;\n        this.Notifications = null;\n        this.Logger = LoggerClass;\n        this.ServiceWorker = null;\n    }\n    AmplifyClass.prototype.register = function (comp) {\n        logger.debug('component registered in amplify', comp);\n        this._components.push(comp);\n        if (typeof comp.getModuleName === 'function') {\n            this._modules[comp.getModuleName()] = comp;\n            this[comp.getModuleName()] = comp;\n        }\n        else {\n            logger.debug('no getModuleName method for component', comp);\n        }\n        // Finally configure this new component(category) loaded\n        // With the new modularization changes in Amplify V3, all the Amplify\n        // component are not loaded/registered right away but when they are\n        // imported (and hence instantiated) in the client's app. This ensures\n        // that all new components imported get correctly configured with the\n        // configuration that Amplify.configure() was called with.\n        comp.configure(this._config);\n    };\n    AmplifyClass.prototype.configure = function (config) {\n        var _this = this;\n        if (!config)\n            return this._config;\n        this._config = Object.assign(this._config, config);\n        logger.debug('amplify config', this._config);\n        // Dependency Injection via property-setting.\n        // This avoids introducing a public method/interface/setter that's difficult to remove later.\n        // Plus, it reduces `if` statements within the `constructor` and `configure` of each module\n        Object.entries(this._modules).forEach(function (_a) {\n            var _b = __read(_a, 2), Name = _b[0], comp = _b[1];\n            // e.g. Auth.*\n            Object.keys(comp).forEach(function (property) {\n                // e.g. Auth[\"Credentials\"] = this._modules[\"Credentials\"] when set\n                if (_this._modules[property]) {\n                    comp[property] = _this._modules[property];\n                }\n            });\n        });\n        this._components.map(function (comp) {\n            comp.configure(_this._config);\n        });\n        return this._config;\n    };\n    AmplifyClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable &&\n            pluggable['getCategory'] &&\n            typeof pluggable['getCategory'] === 'function') {\n            this._components.map(function (comp) {\n                if (comp['addPluggable'] &&\n                    typeof comp['addPluggable'] === 'function') {\n                    comp.addPluggable(pluggable);\n                }\n            });\n        }\n    };\n    return AmplifyClass;\n}());\nexport { AmplifyClass };\nexport var Amplify = new AmplifyClass();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}