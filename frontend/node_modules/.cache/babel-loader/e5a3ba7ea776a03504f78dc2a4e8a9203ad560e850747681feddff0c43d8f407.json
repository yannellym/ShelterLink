{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { CloudWatchLogsClient, CreateLogGroupCommand, CreateLogStreamCommand, DescribeLogGroupsCommand, DescribeLogStreamsCommand, GetLogEventsCommand, PutLogEventsCommand } from '@aws-sdk/client-cloudwatch-logs';\nimport { Credentials } from '../..';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { getAmplifyUserAgentObject } from '../Platform';\nimport { parseAWSExports } from '../parseAWSExports';\nimport { AWS_CLOUDWATCH_BASE_BUFFER_SIZE, AWS_CLOUDWATCH_CATEGORY, AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE, AWS_CLOUDWATCH_MAX_EVENT_SIZE, AWS_CLOUDWATCH_PROVIDER_NAME, NO_CREDS_ERROR_STRING, RETRY_ERROR_CODES } from '../Util/Constants';\nvar logger = new Logger('AWSCloudWatch');\nvar AWSCloudWatchProvider = /** @class */function () {\n  function AWSCloudWatchProvider(config) {\n    this.configure(config);\n    this._dataTracker = {\n      eventUploadInProgress: false,\n      logEvents: []\n    };\n    this._currentLogBatch = [];\n    this._initiateLogPushInterval();\n  }\n  AWSCloudWatchProvider.prototype.getProviderName = function () {\n    return AWSCloudWatchProvider.PROVIDER_NAME;\n  };\n  AWSCloudWatchProvider.prototype.getCategoryName = function () {\n    return AWSCloudWatchProvider.CATEGORY;\n  };\n  AWSCloudWatchProvider.prototype.getLogQueue = function () {\n    return this._dataTracker.logEvents;\n  };\n  AWSCloudWatchProvider.prototype.configure = function (config) {\n    if (!config) return this._config || {};\n    var conf = Object.assign({}, this._config, parseAWSExports(config).Logging, config);\n    this._config = conf;\n    return this._config;\n  };\n  AWSCloudWatchProvider.prototype.createLogGroup = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('creating new log group in CloudWatch - ', params.logGroupName);\n            cmd = new CreateLogGroupCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_1 = _a.sent();\n            logger.error(\"error creating log group - \".concat(error_1));\n            throw error_1;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogGroups = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting list of log groups');\n            cmd = new DescribeLogGroupsCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_2 = _a.sent();\n            logger.error(\"error getting log group - \".concat(error_2));\n            throw error_2;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.createLogStream = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('creating new log stream in CloudWatch - ', params.logStreamName);\n            cmd = new CreateLogStreamCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_3 = _a.sent();\n            logger.error(\"error creating log stream - \".concat(error_3));\n            throw error_3;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogStreams = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting list of log streams');\n            cmd = new DescribeLogStreamsCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_4 = _a.sent();\n            logger.error(\"error getting log stream - \".concat(error_4));\n            throw error_4;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.getLogEvents = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cmd, credentialsOK, client, output, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting log events from stream - ', params.logStreamName);\n            cmd = new GetLogEventsCommand(params);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 3:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 4:\n            error_5 = _a.sent();\n            logger.error(\"error getting log events - \".concat(error_5));\n            throw error_5;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype.pushLogs = function (logs) {\n    logger.debug('pushing log events to Cloudwatch...');\n    this._dataTracker.logEvents = __spreadArray(__spreadArray([], __read(this._dataTracker.logEvents), false), __read(logs), false);\n  };\n  AWSCloudWatchProvider.prototype._validateLogGroupExistsAndCreate = function (logGroupName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, currGroups, foundGroups, err_1, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._dataTracker.verifiedLogGroup) {\n              return [2 /*return*/, this._dataTracker.verifiedLogGroup];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 5,, 6]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 2:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            return [4 /*yield*/, this.getLogGroups({\n              logGroupNamePrefix: logGroupName\n            })];\n          case 3:\n            currGroups = _a.sent();\n            if (!(typeof currGroups === 'string') && currGroups.logGroups) {\n              foundGroups = currGroups.logGroups.filter(function (group) {\n                return group.logGroupName === logGroupName;\n              });\n              if (foundGroups.length > 0) {\n                this._dataTracker.verifiedLogGroup = foundGroups[0];\n                return [2 /*return*/, foundGroups[0]];\n              }\n            }\n            /**\n             * If we get to this point, it means that the specified log group does not exist\n             * and we should create it.\n             */\n            return [4 /*yield*/, this.createLogGroup({\n              logGroupName: logGroupName\n            })];\n          case 4:\n            /**\n             * If we get to this point, it means that the specified log group does not exist\n             * and we should create it.\n             */\n            _a.sent();\n            return [2 /*return*/, null];\n          case 5:\n            err_1 = _a.sent();\n            errString = \"failure during log group search: \".concat(err_1);\n            logger.error(errString);\n            throw err_1;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._validateLogStreamExists = function (logGroupName, logStreamName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, currStreams, foundStreams, err_2, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            return [4 /*yield*/, this.getLogStreams({\n              logGroupName: logGroupName,\n              logStreamNamePrefix: logStreamName\n            })];\n          case 2:\n            currStreams = _a.sent();\n            if (currStreams.logStreams) {\n              foundStreams = currStreams.logStreams.filter(function (stream) {\n                return stream.logStreamName === logStreamName;\n              });\n              if (foundStreams.length > 0) {\n                this._nextSequenceToken = foundStreams[0].uploadSequenceToken;\n                return [2 /*return*/, foundStreams[0]];\n              }\n            }\n            /**\n             * If we get to this point, it means that the specified stream does not\n             * exist, and we should create it now.\n             */\n            return [4 /*yield*/, this.createLogStream({\n              logGroupName: logGroupName,\n              logStreamName: logStreamName\n            })];\n          case 3:\n            /**\n             * If we get to this point, it means that the specified stream does not\n             * exist, and we should create it now.\n             */\n            _a.sent();\n            return [2 /*return*/, null];\n          case 4:\n            err_2 = _a.sent();\n            errString = \"failure during log stream search: \".concat(err_2);\n            logger.error(errString);\n            throw err_2;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._sendLogEvents = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, cmd, client, output, err_3, errString;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK) {\n              throw new Error(NO_CREDS_ERROR_STRING);\n            }\n            logger.debug('sending log events to stream - ', params.logStreamName);\n            cmd = new PutLogEventsCommand(params);\n            client = this._initCloudWatchLogs();\n            return [4 /*yield*/, client.send(cmd)];\n          case 2:\n            output = _a.sent();\n            return [2 /*return*/, output];\n          case 3:\n            err_3 = _a.sent();\n            errString = \"failure during log push: \".concat(err_3);\n            logger.error(errString);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._initCloudWatchLogs = function () {\n    return new CloudWatchLogsClient({\n      region: this._config.region,\n      credentials: this._config.credentials,\n      customUserAgent: getAmplifyUserAgentObject(),\n      endpoint: this._config.endpoint\n    });\n  };\n  AWSCloudWatchProvider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, Credentials.get().then(function (credentials) {\n              if (!credentials) return false;\n              var cred = Credentials.shear(credentials);\n              logger.debug('set credentials for logging', cred);\n              _this._config.credentials = cred;\n              return true;\n            }).catch(function (error) {\n              logger.warn('ensure credentials error', error);\n              return false;\n            })];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  AWSCloudWatchProvider.prototype._getNextSequenceToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var logStream, err_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._nextSequenceToken && this._nextSequenceToken.length > 0) {\n              return [2 /*return*/, this._nextSequenceToken];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            return [4 /*yield*/, this._validateLogGroupExistsAndCreate(this._config.logGroupName)];\n          case 2:\n            _a.sent();\n            this._nextSequenceToken = undefined;\n            return [4 /*yield*/, this._validateLogStreamExists(this._config.logGroupName, this._config.logStreamName)];\n          case 3:\n            logStream = _a.sent();\n            if (logStream) {\n              this._nextSequenceToken = logStream.uploadSequenceToken;\n            }\n            return [2 /*return*/, this._nextSequenceToken];\n          case 4:\n            err_4 = _a.sent();\n            logger.error(\"failure while getting next sequence token: \".concat(err_4));\n            throw err_4;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._safeUploadLogEvents = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var seqToken, logBatch, putLogsPayload, sendLogEventsResponse, err_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            return [4 /*yield*/, this._getNextSequenceToken()];\n          case 1:\n            seqToken = _a.sent();\n            logBatch = this._currentLogBatch.length === 0 ? this._getBufferedBatchOfLogs() : this._currentLogBatch;\n            putLogsPayload = {\n              logGroupName: this._config.logGroupName,\n              logStreamName: this._config.logStreamName,\n              logEvents: logBatch,\n              sequenceToken: seqToken\n            };\n            this._dataTracker.eventUploadInProgress = true;\n            return [4 /*yield*/, this._sendLogEvents(putLogsPayload)];\n          case 2:\n            sendLogEventsResponse = _a.sent();\n            this._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;\n            this._dataTracker.eventUploadInProgress = false;\n            this._currentLogBatch = [];\n            return [2 /*return*/, sendLogEventsResponse];\n          case 3:\n            err_5 = _a.sent();\n            logger.error(\"error during _safeUploadLogEvents: \".concat(err_5));\n            if (RETRY_ERROR_CODES.includes(err_5.name)) {\n              this._getNewSequenceTokenAndSubmit({\n                logEvents: this._currentLogBatch,\n                logGroupName: this._config.logGroupName,\n                logStreamName: this._config.logStreamName\n              });\n            } else {\n              this._dataTracker.eventUploadInProgress = false;\n              throw err_5;\n            }\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._getBufferedBatchOfLogs = function () {\n    /**\n     * CloudWatch has restrictions on the size of the log events that get sent up.\n     * We need to track both the size of each event and the total size of the batch\n     * of logs.\n     *\n     * We also need to ensure that the logs in the batch are sorted in chronological order.\n     * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n     */\n    var currentEventIdx = 0;\n    var totalByteSize = 0;\n    while (currentEventIdx < this._dataTracker.logEvents.length) {\n      var currentEvent = this._dataTracker.logEvents[currentEventIdx];\n      var eventSize = currentEvent ? new TextEncoder().encode(currentEvent.message).length + AWS_CLOUDWATCH_BASE_BUFFER_SIZE : 0;\n      if (eventSize > AWS_CLOUDWATCH_MAX_EVENT_SIZE) {\n        var errString = \"Log entry exceeds maximum size for CloudWatch logs. Log size: \".concat(eventSize, \". Truncating log message.\");\n        logger.warn(errString);\n        currentEvent.message = currentEvent.message.substring(0, eventSize);\n      }\n      if (totalByteSize + eventSize > AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE) break;\n      totalByteSize += eventSize;\n      currentEventIdx++;\n    }\n    this._currentLogBatch = this._dataTracker.logEvents.splice(0, currentEventIdx);\n    return this._currentLogBatch;\n  };\n  AWSCloudWatchProvider.prototype._getNewSequenceTokenAndSubmit = function (payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var seqToken, sendLogEventsRepsonse, err_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n            this._nextSequenceToken = undefined;\n            this._dataTracker.eventUploadInProgress = true;\n            return [4 /*yield*/, this._getNextSequenceToken()];\n          case 1:\n            seqToken = _a.sent();\n            payload.sequenceToken = seqToken;\n            return [4 /*yield*/, this._sendLogEvents(payload)];\n          case 2:\n            sendLogEventsRepsonse = _a.sent();\n            this._dataTracker.eventUploadInProgress = false;\n            this._currentLogBatch = [];\n            return [2 /*return*/, sendLogEventsRepsonse];\n          case 3:\n            err_6 = _a.sent();\n            logger.error(\"error when retrying log submission with new sequence token: \".concat(err_6));\n            this._dataTracker.eventUploadInProgress = false;\n            throw err_6;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSCloudWatchProvider.prototype._initiateLogPushInterval = function () {\n    var _this = this;\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n    this._timer = setInterval(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var err_7;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 3,, 4]);\n              if (!this._getDocUploadPermissibility()) return [3 /*break*/, 2];\n              return [4 /*yield*/, this._safeUploadLogEvents()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [3 /*break*/, 4];\n            case 3:\n              err_7 = _a.sent();\n              logger.error(\"error when calling _safeUploadLogEvents in the timer interval - \".concat(err_7));\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }, 2000);\n  };\n  AWSCloudWatchProvider.prototype._getDocUploadPermissibility = function () {\n    return (this._dataTracker.logEvents.length !== 0 || this._currentLogBatch.length !== 0) && !this._dataTracker.eventUploadInProgress;\n  };\n  AWSCloudWatchProvider.PROVIDER_NAME = AWS_CLOUDWATCH_PROVIDER_NAME;\n  AWSCloudWatchProvider.CATEGORY = AWS_CLOUDWATCH_CATEGORY;\n  return AWSCloudWatchProvider;\n}();\nexport { AWSCloudWatchProvider };","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__read","o","m","i","r","ar","error","__spreadArray","to","from","pack","arguments","l","Array","prototype","slice","concat","CloudWatchLogsClient","CreateLogGroupCommand","CreateLogStreamCommand","DescribeLogGroupsCommand","DescribeLogStreamsCommand","GetLogEventsCommand","PutLogEventsCommand","Credentials","ConsoleLogger","Logger","getAmplifyUserAgentObject","parseAWSExports","AWS_CLOUDWATCH_BASE_BUFFER_SIZE","AWS_CLOUDWATCH_CATEGORY","AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE","AWS_CLOUDWATCH_MAX_EVENT_SIZE","AWS_CLOUDWATCH_PROVIDER_NAME","NO_CREDS_ERROR_STRING","RETRY_ERROR_CODES","logger","AWSCloudWatchProvider","config","configure","_dataTracker","eventUploadInProgress","logEvents","_currentLogBatch","_initiateLogPushInterval","getProviderName","PROVIDER_NAME","getCategoryName","CATEGORY","getLogQueue","_config","conf","Object","assign","Logging","createLogGroup","params","cmd","credentialsOK","client","output","error_1","_a","debug","logGroupName","_ensureCredentials","Error","_initCloudWatchLogs","send","getLogGroups","error_2","createLogStream","error_3","logStreamName","getLogStreams","error_4","getLogEvents","error_5","pushLogs","logs","_validateLogGroupExistsAndCreate","currGroups","foundGroups","err_1","errString","verifiedLogGroup","logGroupNamePrefix","logGroups","filter","group","_validateLogStreamExists","currStreams","foundStreams","err_2","logStreamNamePrefix","logStreams","stream","_nextSequenceToken","uploadSequenceToken","_sendLogEvents","err_3","region","credentials","customUserAgent","endpoint","_this","get","cred","shear","catch","warn","_getNextSequenceToken","logStream","err_4","undefined","_safeUploadLogEvents","seqToken","logBatch","putLogsPayload","sendLogEventsResponse","err_5","_getBufferedBatchOfLogs","sequenceToken","nextSequenceToken","includes","name","_getNewSequenceTokenAndSubmit","currentEventIdx","totalByteSize","currentEvent","eventSize","TextEncoder","encode","message","substring","splice","payload","sendLogEventsRepsonse","err_6","_timer","clearInterval","setInterval","err_7","_getDocUploadPermissibility"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/Providers/AWSCloudWatchProvider.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { CloudWatchLogsClient, CreateLogGroupCommand, CreateLogStreamCommand, DescribeLogGroupsCommand, DescribeLogStreamsCommand, GetLogEventsCommand, PutLogEventsCommand, } from '@aws-sdk/client-cloudwatch-logs';\nimport { Credentials } from '../..';\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { getAmplifyUserAgentObject } from '../Platform';\nimport { parseAWSExports } from '../parseAWSExports';\nimport { AWS_CLOUDWATCH_BASE_BUFFER_SIZE, AWS_CLOUDWATCH_CATEGORY, AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE, AWS_CLOUDWATCH_MAX_EVENT_SIZE, AWS_CLOUDWATCH_PROVIDER_NAME, NO_CREDS_ERROR_STRING, RETRY_ERROR_CODES, } from '../Util/Constants';\nvar logger = new Logger('AWSCloudWatch');\nvar AWSCloudWatchProvider = /** @class */ (function () {\n    function AWSCloudWatchProvider(config) {\n        this.configure(config);\n        this._dataTracker = {\n            eventUploadInProgress: false,\n            logEvents: [],\n        };\n        this._currentLogBatch = [];\n        this._initiateLogPushInterval();\n    }\n    AWSCloudWatchProvider.prototype.getProviderName = function () {\n        return AWSCloudWatchProvider.PROVIDER_NAME;\n    };\n    AWSCloudWatchProvider.prototype.getCategoryName = function () {\n        return AWSCloudWatchProvider.CATEGORY;\n    };\n    AWSCloudWatchProvider.prototype.getLogQueue = function () {\n        return this._dataTracker.logEvents;\n    };\n    AWSCloudWatchProvider.prototype.configure = function (config) {\n        if (!config)\n            return this._config || {};\n        var conf = Object.assign({}, this._config, parseAWSExports(config).Logging, config);\n        this._config = conf;\n        return this._config;\n    };\n    AWSCloudWatchProvider.prototype.createLogGroup = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('creating new log group in CloudWatch - ', params.logGroupName);\n                        cmd = new CreateLogGroupCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_1 = _a.sent();\n                        logger.error(\"error creating log group - \".concat(error_1));\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.getLogGroups = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting list of log groups');\n                        cmd = new DescribeLogGroupsCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_2 = _a.sent();\n                        logger.error(\"error getting log group - \".concat(error_2));\n                        throw error_2;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.createLogStream = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('creating new log stream in CloudWatch - ', params.logStreamName);\n                        cmd = new CreateLogStreamCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_3 = _a.sent();\n                        logger.error(\"error creating log stream - \".concat(error_3));\n                        throw error_3;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.getLogStreams = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting list of log streams');\n                        cmd = new DescribeLogStreamsCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_4 = _a.sent();\n                        logger.error(\"error getting log stream - \".concat(error_4));\n                        throw error_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.getLogEvents = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var cmd, credentialsOK, client, output, error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('getting log events from stream - ', params.logStreamName);\n                        cmd = new GetLogEventsCommand(params);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 3:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 4:\n                        error_5 = _a.sent();\n                        logger.error(\"error getting log events - \".concat(error_5));\n                        throw error_5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype.pushLogs = function (logs) {\n        logger.debug('pushing log events to Cloudwatch...');\n        this._dataTracker.logEvents = __spreadArray(__spreadArray([], __read(this._dataTracker.logEvents), false), __read(logs), false);\n    };\n    AWSCloudWatchProvider.prototype._validateLogGroupExistsAndCreate = function (logGroupName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, currGroups, foundGroups, err_1, errString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._dataTracker.verifiedLogGroup) {\n                            return [2 /*return*/, this._dataTracker.verifiedLogGroup];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 2:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        return [4 /*yield*/, this.getLogGroups({\n                                logGroupNamePrefix: logGroupName,\n                            })];\n                    case 3:\n                        currGroups = _a.sent();\n                        if (!(typeof currGroups === 'string') && currGroups.logGroups) {\n                            foundGroups = currGroups.logGroups.filter(function (group) { return group.logGroupName === logGroupName; });\n                            if (foundGroups.length > 0) {\n                                this._dataTracker.verifiedLogGroup = foundGroups[0];\n                                return [2 /*return*/, foundGroups[0]];\n                            }\n                        }\n                        /**\n                         * If we get to this point, it means that the specified log group does not exist\n                         * and we should create it.\n                         */\n                        return [4 /*yield*/, this.createLogGroup({ logGroupName: logGroupName })];\n                    case 4:\n                        /**\n                         * If we get to this point, it means that the specified log group does not exist\n                         * and we should create it.\n                         */\n                        _a.sent();\n                        return [2 /*return*/, null];\n                    case 5:\n                        err_1 = _a.sent();\n                        errString = \"failure during log group search: \".concat(err_1);\n                        logger.error(errString);\n                        throw err_1;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._validateLogStreamExists = function (logGroupName, logStreamName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, currStreams, foundStreams, err_2, errString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 4, , 5]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        return [4 /*yield*/, this.getLogStreams({\n                                logGroupName: logGroupName,\n                                logStreamNamePrefix: logStreamName,\n                            })];\n                    case 2:\n                        currStreams = _a.sent();\n                        if (currStreams.logStreams) {\n                            foundStreams = currStreams.logStreams.filter(function (stream) { return stream.logStreamName === logStreamName; });\n                            if (foundStreams.length > 0) {\n                                this._nextSequenceToken = foundStreams[0].uploadSequenceToken;\n                                return [2 /*return*/, foundStreams[0]];\n                            }\n                        }\n                        /**\n                         * If we get to this point, it means that the specified stream does not\n                         * exist, and we should create it now.\n                         */\n                        return [4 /*yield*/, this.createLogStream({\n                                logGroupName: logGroupName,\n                                logStreamName: logStreamName,\n                            })];\n                    case 3:\n                        /**\n                         * If we get to this point, it means that the specified stream does not\n                         * exist, and we should create it now.\n                         */\n                        _a.sent();\n                        return [2 /*return*/, null];\n                    case 4:\n                        err_2 = _a.sent();\n                        errString = \"failure during log stream search: \".concat(err_2);\n                        logger.error(errString);\n                        throw err_2;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._sendLogEvents = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, cmd, client, output, err_3, errString;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            throw new Error(NO_CREDS_ERROR_STRING);\n                        }\n                        logger.debug('sending log events to stream - ', params.logStreamName);\n                        cmd = new PutLogEventsCommand(params);\n                        client = this._initCloudWatchLogs();\n                        return [4 /*yield*/, client.send(cmd)];\n                    case 2:\n                        output = _a.sent();\n                        return [2 /*return*/, output];\n                    case 3:\n                        err_3 = _a.sent();\n                        errString = \"failure during log push: \".concat(err_3);\n                        logger.error(errString);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._initCloudWatchLogs = function () {\n        return new CloudWatchLogsClient({\n            region: this._config.region,\n            credentials: this._config.credentials,\n            customUserAgent: getAmplifyUserAgentObject(),\n            endpoint: this._config.endpoint,\n        });\n    };\n    AWSCloudWatchProvider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Credentials.get()\n                            .then(function (credentials) {\n                            if (!credentials)\n                                return false;\n                            var cred = Credentials.shear(credentials);\n                            logger.debug('set credentials for logging', cred);\n                            _this._config.credentials = cred;\n                            return true;\n                        })\n                            .catch(function (error) {\n                            logger.warn('ensure credentials error', error);\n                            return false;\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._getNextSequenceToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var logStream, err_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._nextSequenceToken && this._nextSequenceToken.length > 0) {\n                            return [2 /*return*/, this._nextSequenceToken];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this._validateLogGroupExistsAndCreate(this._config.logGroupName)];\n                    case 2:\n                        _a.sent();\n                        this._nextSequenceToken = undefined;\n                        return [4 /*yield*/, this._validateLogStreamExists(this._config.logGroupName, this._config.logStreamName)];\n                    case 3:\n                        logStream = _a.sent();\n                        if (logStream) {\n                            this._nextSequenceToken = logStream.uploadSequenceToken;\n                        }\n                        return [2 /*return*/, this._nextSequenceToken];\n                    case 4:\n                        err_4 = _a.sent();\n                        logger.error(\"failure while getting next sequence token: \".concat(err_4));\n                        throw err_4;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._safeUploadLogEvents = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var seqToken, logBatch, putLogsPayload, sendLogEventsResponse, err_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this._getNextSequenceToken()];\n                    case 1:\n                        seqToken = _a.sent();\n                        logBatch = this._currentLogBatch.length === 0\n                            ? this._getBufferedBatchOfLogs()\n                            : this._currentLogBatch;\n                        putLogsPayload = {\n                            logGroupName: this._config.logGroupName,\n                            logStreamName: this._config.logStreamName,\n                            logEvents: logBatch,\n                            sequenceToken: seqToken,\n                        };\n                        this._dataTracker.eventUploadInProgress = true;\n                        return [4 /*yield*/, this._sendLogEvents(putLogsPayload)];\n                    case 2:\n                        sendLogEventsResponse = _a.sent();\n                        this._nextSequenceToken = sendLogEventsResponse.nextSequenceToken;\n                        this._dataTracker.eventUploadInProgress = false;\n                        this._currentLogBatch = [];\n                        return [2 /*return*/, sendLogEventsResponse];\n                    case 3:\n                        err_5 = _a.sent();\n                        logger.error(\"error during _safeUploadLogEvents: \".concat(err_5));\n                        if (RETRY_ERROR_CODES.includes(err_5.name)) {\n                            this._getNewSequenceTokenAndSubmit({\n                                logEvents: this._currentLogBatch,\n                                logGroupName: this._config.logGroupName,\n                                logStreamName: this._config.logStreamName,\n                            });\n                        }\n                        else {\n                            this._dataTracker.eventUploadInProgress = false;\n                            throw err_5;\n                        }\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._getBufferedBatchOfLogs = function () {\n        /**\n         * CloudWatch has restrictions on the size of the log events that get sent up.\n         * We need to track both the size of each event and the total size of the batch\n         * of logs.\n         *\n         * We also need to ensure that the logs in the batch are sorted in chronological order.\n         * https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutLogEvents.html\n         */\n        var currentEventIdx = 0;\n        var totalByteSize = 0;\n        while (currentEventIdx < this._dataTracker.logEvents.length) {\n            var currentEvent = this._dataTracker.logEvents[currentEventIdx];\n            var eventSize = currentEvent\n                ? new TextEncoder().encode(currentEvent.message).length +\n                    AWS_CLOUDWATCH_BASE_BUFFER_SIZE\n                : 0;\n            if (eventSize > AWS_CLOUDWATCH_MAX_EVENT_SIZE) {\n                var errString = \"Log entry exceeds maximum size for CloudWatch logs. Log size: \".concat(eventSize, \". Truncating log message.\");\n                logger.warn(errString);\n                currentEvent.message = currentEvent.message.substring(0, eventSize);\n            }\n            if (totalByteSize + eventSize > AWS_CLOUDWATCH_MAX_BATCH_EVENT_SIZE)\n                break;\n            totalByteSize += eventSize;\n            currentEventIdx++;\n        }\n        this._currentLogBatch = this._dataTracker.logEvents.splice(0, currentEventIdx);\n        return this._currentLogBatch;\n    };\n    AWSCloudWatchProvider.prototype._getNewSequenceTokenAndSubmit = function (payload) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seqToken, sendLogEventsRepsonse, err_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        this._nextSequenceToken = undefined;\n                        this._dataTracker.eventUploadInProgress = true;\n                        return [4 /*yield*/, this._getNextSequenceToken()];\n                    case 1:\n                        seqToken = _a.sent();\n                        payload.sequenceToken = seqToken;\n                        return [4 /*yield*/, this._sendLogEvents(payload)];\n                    case 2:\n                        sendLogEventsRepsonse = _a.sent();\n                        this._dataTracker.eventUploadInProgress = false;\n                        this._currentLogBatch = [];\n                        return [2 /*return*/, sendLogEventsRepsonse];\n                    case 3:\n                        err_6 = _a.sent();\n                        logger.error(\"error when retrying log submission with new sequence token: \".concat(err_6));\n                        this._dataTracker.eventUploadInProgress = false;\n                        throw err_6;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSCloudWatchProvider.prototype._initiateLogPushInterval = function () {\n        var _this = this;\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        this._timer = setInterval(function () { return __awaiter(_this, void 0, void 0, function () {\n            var err_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        if (!this._getDocUploadPermissibility()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._safeUploadLogEvents()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [3 /*break*/, 4];\n                    case 3:\n                        err_7 = _a.sent();\n                        logger.error(\"error when calling _safeUploadLogEvents in the timer interval - \".concat(err_7));\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); }, 2000);\n    };\n    AWSCloudWatchProvider.prototype._getDocUploadPermissibility = function () {\n        return ((this._dataTracker.logEvents.length !== 0 ||\n            this._currentLogBatch.length !== 0) &&\n            !this._dataTracker.eventUploadInProgress);\n    };\n    AWSCloudWatchProvider.PROVIDER_NAME = AWS_CLOUDWATCH_PROVIDER_NAME;\n    AWSCloudWatchProvider.CATEGORY = AWS_CLOUDWATCH_CATEGORY;\n    return AWSCloudWatchProvider;\n}());\nexport { AWSCloudWatchProvider };\n"],"mappings":"AAAA;AACA;AACA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,SAASC,KAAKA,CAACC,KAAK,EAAE;IAAE,OAAOA,KAAK,YAAYH,CAAC,GAAGG,KAAK,GAAG,IAAIH,CAAC,CAAC,UAAUI,OAAO,EAAE;MAAEA,OAAO,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;EAAE;EAC3G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAO,CAAC,EAAE,UAAUD,OAAO,EAAEE,MAAM,EAAE;IACvD,SAASC,SAASA,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAI,CAACN,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQA,CAACR,KAAK,EAAE;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAO,CAAC,CAACE,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOO,CAAC,EAAE;QAAEJ,MAAM,CAACI,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAIA,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACT,KAAK,CAAC,GAAGD,KAAK,CAACU,MAAM,CAACT,KAAK,CAAC,CAACW,IAAI,CAACP,SAAS,EAAEI,QAAQ,CAAC;IAAE;IAC7GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAK,CAACjB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAEU,IAAI,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,IAAIO,WAAW,GAAI,IAAI,IAAI,IAAI,CAACA,WAAW,IAAK,UAAUlB,OAAO,EAAEmB,IAAI,EAAE;EACrE,IAAIC,CAAC,GAAG;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAAA,CAAA,EAAW;QAAE,IAAIC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,CAAC,CAAC,CAAC,CAAC;QAAE,OAAOA,CAAC,CAAC,CAAC,CAAC;MAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC;IAAEC,CAAC;IAAEC,CAAC;IAAEJ,CAAC;IAAEK,CAAC;EAChH,OAAOA,CAAC,GAAG;IAAEjB,IAAI,EAAEkB,IAAI,CAAC,CAAC,CAAC;IAAE,OAAO,EAAEA,IAAI,CAAC,CAAC,CAAC;IAAE,QAAQ,EAAEA,IAAI,CAAC,CAAC;EAAE,CAAC,EAAE,OAAOC,MAAM,KAAK,UAAU,KAAKF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC,GAAG,YAAW;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,EAAEH,CAAC;EACxJ,SAASC,IAAIA,CAACG,CAAC,EAAE;IAAE,OAAO,UAAUC,CAAC,EAAE;MAAE,OAAOvB,IAAI,CAAC,CAACsB,CAAC,EAAEC,CAAC,CAAC,CAAC;IAAE,CAAC;EAAE;EACjE,SAASvB,IAAIA,CAACwB,EAAE,EAAE;IACd,IAAIR,CAAC,EAAE,MAAM,IAAIS,SAAS,CAAC,iCAAiC,CAAC;IAC7D,OAAOP,CAAC,KAAKA,CAAC,GAAG,CAAC,EAAEM,EAAE,CAAC,CAAC,CAAC,KAAKd,CAAC,GAAG,CAAC,CAAC,CAAC,EAAEA,CAAC,EAAE,IAAI;MAC1C,IAAIM,CAAC,GAAG,CAAC,EAAEC,CAAC,KAAKJ,CAAC,GAAGW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAGP,CAAC,CAAC,QAAQ,CAAC,GAAGO,EAAE,CAAC,CAAC,CAAC,GAAGP,CAAC,CAAC,OAAO,CAAC,KAAK,CAACJ,CAAC,GAAGI,CAAC,CAAC,QAAQ,CAAC,KAAKJ,CAAC,CAACa,IAAI,CAACT,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGA,CAAC,CAAChB,IAAI,CAAC,IAAI,CAAC,CAACY,CAAC,GAAGA,CAAC,CAACa,IAAI,CAACT,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEnB,IAAI,EAAE,OAAOQ,CAAC;MAC5J,IAAII,CAAC,GAAG,CAAC,EAAEJ,CAAC,EAAEW,EAAE,GAAG,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEX,CAAC,CAAClB,KAAK,CAAC;MACvC,QAAQ6B,EAAE,CAAC,CAAC,CAAC;QACT,KAAK,CAAC;QAAE,KAAK,CAAC;UAAEX,CAAC,GAAGW,EAAE;UAAE;QACxB,KAAK,CAAC;UAAEd,CAAC,CAACC,KAAK,EAAE;UAAE,OAAO;YAAEhB,KAAK,EAAE6B,EAAE,CAAC,CAAC,CAAC;YAAEnB,IAAI,EAAE;UAAM,CAAC;QACvD,KAAK,CAAC;UAAEK,CAAC,CAACC,KAAK,EAAE;UAAEM,CAAC,GAAGO,EAAE,CAAC,CAAC,CAAC;UAAEA,EAAE,GAAG,CAAC,CAAC,CAAC;UAAE;QACxC,KAAK,CAAC;UAAEA,EAAE,GAAGd,CAAC,CAACK,GAAG,CAACY,GAAG,CAAC,CAAC;UAAEjB,CAAC,CAACI,IAAI,CAACa,GAAG,CAAC,CAAC;UAAE;QACxC;UACI,IAAI,EAAEd,CAAC,GAAGH,CAAC,CAACI,IAAI,EAAED,CAAC,GAAGA,CAAC,CAACe,MAAM,GAAG,CAAC,IAAIf,CAAC,CAACA,CAAC,CAACe,MAAM,GAAG,CAAC,CAAC,CAAC,KAAKJ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;YAAEd,CAAC,GAAG,CAAC;YAAE;UAAU;UAC3G,IAAIc,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAACX,CAAC,IAAKW,EAAE,CAAC,CAAC,CAAC,GAAGX,CAAC,CAAC,CAAC,CAAC,IAAIW,EAAE,CAAC,CAAC,CAAC,GAAGX,CAAC,CAAC,CAAC,CAAE,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGa,EAAE,CAAC,CAAC,CAAC;YAAE;UAAO;UACrF,IAAIA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAId,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC;YAAEA,CAAC,GAAGW,EAAE;YAAE;UAAO;UACpE,IAAIX,CAAC,IAAIH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC,EAAE;YAAEH,CAAC,CAACC,KAAK,GAAGE,CAAC,CAAC,CAAC,CAAC;YAAEH,CAAC,CAACK,GAAG,CAACc,IAAI,CAACL,EAAE,CAAC;YAAE;UAAO;UAClE,IAAIX,CAAC,CAAC,CAAC,CAAC,EAAEH,CAAC,CAACK,GAAG,CAACY,GAAG,CAAC,CAAC;UACrBjB,CAAC,CAACI,IAAI,CAACa,GAAG,CAAC,CAAC;UAAE;MACtB;MACAH,EAAE,GAAGf,IAAI,CAACiB,IAAI,CAACpC,OAAO,EAAEoB,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOR,CAAC,EAAE;MAAEsB,EAAE,GAAG,CAAC,CAAC,EAAEtB,CAAC,CAAC;MAAEe,CAAC,GAAG,CAAC;IAAE,CAAC,SAAS;MAAED,CAAC,GAAGH,CAAC,GAAG,CAAC;IAAE;IACzD,IAAIW,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAMA,EAAE,CAAC,CAAC,CAAC;IAAE,OAAO;MAAE7B,KAAK,EAAE6B,EAAE,CAAC,CAAC,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;MAAEnB,IAAI,EAAE;IAAK,CAAC;EACpF;AACJ,CAAC;AACD,IAAIyB,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAET,CAAC,EAAE;EAClD,IAAIU,CAAC,GAAG,OAAOZ,MAAM,KAAK,UAAU,IAAIW,CAAC,CAACX,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACW,CAAC,EAAE,OAAOD,CAAC;EAChB,IAAIE,CAAC,GAAGD,CAAC,CAACN,IAAI,CAACK,CAAC,CAAC;IAAEG,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEjC,CAAC;EAChC,IAAI;IACA,OAAO,CAACoB,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACY,CAAC,GAAGD,CAAC,CAAChC,IAAI,CAAC,CAAC,EAAEI,IAAI,EAAE8B,EAAE,CAACN,IAAI,CAACK,CAAC,CAACvC,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOyC,KAAK,EAAE;IAAElC,CAAC,GAAG;MAAEkC,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIF,CAAC,IAAI,CAACA,CAAC,CAAC7B,IAAI,KAAK2B,CAAC,GAAGC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAED,CAAC,CAACN,IAAI,CAACO,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAI/B,CAAC,EAAE,MAAMA,CAAC,CAACkC,KAAK;IAAE;EACpC;EACA,OAAOD,EAAE;AACb,CAAC;AACD,IAAIE,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACb,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAES,CAAC,GAAGH,IAAI,CAACX,MAAM,EAAEO,EAAE,EAAEF,CAAC,GAAGS,CAAC,EAAET,CAAC,EAAE,EAAE;IACjF,IAAIE,EAAE,IAAI,EAAEF,CAAC,IAAIM,IAAI,CAAC,EAAE;MACpB,IAAI,CAACJ,EAAE,EAAEA,EAAE,GAAGQ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACnB,IAAI,CAACa,IAAI,EAAE,CAAC,EAAEN,CAAC,CAAC;MACpDE,EAAE,CAACF,CAAC,CAAC,GAAGM,IAAI,CAACN,CAAC,CAAC;IACnB;EACJ;EACA,OAAOK,EAAE,CAACQ,MAAM,CAACX,EAAE,IAAIQ,KAAK,CAACC,SAAS,CAACC,KAAK,CAACnB,IAAI,CAACa,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,SAASQ,oBAAoB,EAAEC,qBAAqB,EAAEC,sBAAsB,EAAEC,wBAAwB,EAAEC,yBAAyB,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAS,iCAAiC;AACrN,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,aAAa,IAAIC,MAAM,QAAQ,WAAW;AACnD,SAASC,yBAAyB,QAAQ,aAAa;AACvD,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,+BAA+B,EAAEC,uBAAuB,EAAEC,mCAAmC,EAAEC,6BAA6B,EAAEC,4BAA4B,EAAEC,qBAAqB,EAAEC,iBAAiB,QAAS,mBAAmB;AACzO,IAAIC,MAAM,GAAG,IAAIV,MAAM,CAAC,eAAe,CAAC;AACxC,IAAIW,qBAAqB,GAAG,aAAe,YAAY;EACnD,SAASA,qBAAqBA,CAACC,MAAM,EAAE;IACnC,IAAI,CAACC,SAAS,CAACD,MAAM,CAAC;IACtB,IAAI,CAACE,YAAY,GAAG;MAChBC,qBAAqB,EAAE,KAAK;MAC5BC,SAAS,EAAE;IACf,CAAC;IACD,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACC,wBAAwB,CAAC,CAAC;EACnC;EACAP,qBAAqB,CAACvB,SAAS,CAAC+B,eAAe,GAAG,YAAY;IAC1D,OAAOR,qBAAqB,CAACS,aAAa;EAC9C,CAAC;EACDT,qBAAqB,CAACvB,SAAS,CAACiC,eAAe,GAAG,YAAY;IAC1D,OAAOV,qBAAqB,CAACW,QAAQ;EACzC,CAAC;EACDX,qBAAqB,CAACvB,SAAS,CAACmC,WAAW,GAAG,YAAY;IACtD,OAAO,IAAI,CAACT,YAAY,CAACE,SAAS;EACtC,CAAC;EACDL,qBAAqB,CAACvB,SAAS,CAACyB,SAAS,GAAG,UAAUD,MAAM,EAAE;IAC1D,IAAI,CAACA,MAAM,EACP,OAAO,IAAI,CAACY,OAAO,IAAI,CAAC,CAAC;IAC7B,IAAIC,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACH,OAAO,EAAEtB,eAAe,CAACU,MAAM,CAAC,CAACgB,OAAO,EAAEhB,MAAM,CAAC;IACnF,IAAI,CAACY,OAAO,GAAGC,IAAI;IACnB,OAAO,IAAI,CAACD,OAAO;EACvB,CAAC;EACDb,qBAAqB,CAACvB,SAAS,CAACyC,cAAc,GAAG,UAAUC,MAAM,EAAE;IAC/D,OAAOjG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkG,GAAG,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO;MAC/C,OAAOnF,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFuD,MAAM,CAAC2B,KAAK,CAAC,yCAAyC,EAAEP,MAAM,CAACQ,YAAY,CAAC;YAC5EP,GAAG,GAAG,IAAIvC,qBAAqB,CAACsC,MAAM,CAAC;YACvCM,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACAyB,MAAM,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,CAAC,CAAC,WAAWR,MAAM,CAACS,IAAI,CAACX,GAAG,CAAC,CAAC;UAC1C,KAAK,CAAC;YACFG,MAAM,GAAGE,EAAE,CAAChF,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,YAAY8E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFC,OAAO,GAAGC,EAAE,CAAChF,IAAI,CAAC,CAAC;YACnBsD,MAAM,CAAC9B,KAAK,CAAC,6BAA6B,CAACU,MAAM,CAAC6C,OAAO,CAAC,CAAC;YAC3D,MAAMA,OAAO;UACjB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDxB,qBAAqB,CAACvB,SAAS,CAACuD,YAAY,GAAG,UAAUb,MAAM,EAAE;IAC7D,OAAOjG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkG,GAAG,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEU,OAAO;MAC/C,OAAO5F,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFuD,MAAM,CAAC2B,KAAK,CAAC,4BAA4B,CAAC;YAC1CN,GAAG,GAAG,IAAIrC,wBAAwB,CAACoC,MAAM,CAAC;YAC1CM,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACAyB,MAAM,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,CAAC,CAAC,WAAWR,MAAM,CAACS,IAAI,CAACX,GAAG,CAAC,CAAC;UAC1C,KAAK,CAAC;YACFG,MAAM,GAAGE,EAAE,CAAChF,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,YAAY8E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFU,OAAO,GAAGR,EAAE,CAAChF,IAAI,CAAC,CAAC;YACnBsD,MAAM,CAAC9B,KAAK,CAAC,4BAA4B,CAACU,MAAM,CAACsD,OAAO,CAAC,CAAC;YAC1D,MAAMA,OAAO;UACjB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDjC,qBAAqB,CAACvB,SAAS,CAACyD,eAAe,GAAG,UAAUf,MAAM,EAAE;IAChE,OAAOjG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkG,GAAG,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEY,OAAO;MAC/C,OAAO9F,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFuD,MAAM,CAAC2B,KAAK,CAAC,0CAA0C,EAAEP,MAAM,CAACiB,aAAa,CAAC;YAC9EhB,GAAG,GAAG,IAAItC,sBAAsB,CAACqC,MAAM,CAAC;YACxCM,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACAyB,MAAM,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,CAAC,CAAC,WAAWR,MAAM,CAACS,IAAI,CAACX,GAAG,CAAC,CAAC;UAC1C,KAAK,CAAC;YACFG,MAAM,GAAGE,EAAE,CAAChF,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,YAAY8E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFY,OAAO,GAAGV,EAAE,CAAChF,IAAI,CAAC,CAAC;YACnBsD,MAAM,CAAC9B,KAAK,CAAC,8BAA8B,CAACU,MAAM,CAACwD,OAAO,CAAC,CAAC;YAC5D,MAAMA,OAAO;UACjB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDnC,qBAAqB,CAACvB,SAAS,CAAC4D,aAAa,GAAG,UAAUlB,MAAM,EAAE;IAC9D,OAAOjG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkG,GAAG,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEe,OAAO;MAC/C,OAAOjG,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFuD,MAAM,CAAC2B,KAAK,CAAC,6BAA6B,CAAC;YAC3CN,GAAG,GAAG,IAAIpC,yBAAyB,CAACmC,MAAM,CAAC;YAC3CM,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACAyB,MAAM,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,CAAC,CAAC,WAAWR,MAAM,CAACS,IAAI,CAACX,GAAG,CAAC,CAAC;UAC1C,KAAK,CAAC;YACFG,MAAM,GAAGE,EAAE,CAAChF,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,YAAY8E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFe,OAAO,GAAGb,EAAE,CAAChF,IAAI,CAAC,CAAC;YACnBsD,MAAM,CAAC9B,KAAK,CAAC,6BAA6B,CAACU,MAAM,CAAC2D,OAAO,CAAC,CAAC;YAC3D,MAAMA,OAAO;UACjB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDtC,qBAAqB,CAACvB,SAAS,CAAC8D,YAAY,GAAG,UAAUpB,MAAM,EAAE;IAC7D,OAAOjG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkG,GAAG,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEiB,OAAO;MAC/C,OAAOnG,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFuD,MAAM,CAAC2B,KAAK,CAAC,mCAAmC,EAAEP,MAAM,CAACiB,aAAa,CAAC;YACvEhB,GAAG,GAAG,IAAInC,mBAAmB,CAACkC,MAAM,CAAC;YACrCM,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACAyB,MAAM,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,CAAC,CAAC,WAAWR,MAAM,CAACS,IAAI,CAACX,GAAG,CAAC,CAAC;UAC1C,KAAK,CAAC;YACFG,MAAM,GAAGE,EAAE,CAAChF,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,YAAY8E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFiB,OAAO,GAAGf,EAAE,CAAChF,IAAI,CAAC,CAAC;YACnBsD,MAAM,CAAC9B,KAAK,CAAC,6BAA6B,CAACU,MAAM,CAAC6D,OAAO,CAAC,CAAC;YAC3D,MAAMA,OAAO;UACjB,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDxC,qBAAqB,CAACvB,SAAS,CAACgE,QAAQ,GAAG,UAAUC,IAAI,EAAE;IACvD3C,MAAM,CAAC2B,KAAK,CAAC,qCAAqC,CAAC;IACnD,IAAI,CAACvB,YAAY,CAACE,SAAS,GAAGnC,aAAa,CAACA,aAAa,CAAC,EAAE,EAAEP,MAAM,CAAC,IAAI,CAACwC,YAAY,CAACE,SAAS,CAAC,EAAE,KAAK,CAAC,EAAE1C,MAAM,CAAC+E,IAAI,CAAC,EAAE,KAAK,CAAC;EACnI,CAAC;EACD1C,qBAAqB,CAACvB,SAAS,CAACkE,gCAAgC,GAAG,UAAUhB,YAAY,EAAE;IACvF,OAAOzG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAImG,aAAa,EAAEuB,UAAU,EAAEC,WAAW,EAAEC,KAAK,EAAEC,SAAS;MAC5D,OAAO1G,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,IAAI,CAAC2D,YAAY,CAAC6C,gBAAgB,EAAE;cACpC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC7C,YAAY,CAAC6C,gBAAgB,CAAC;YAC7D;YACAvB,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACA,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACmC,YAAY,CAAC;cAC/BiB,kBAAkB,EAAEtB;YACxB,CAAC,CAAC,CAAC;UACX,KAAK,CAAC;YACFiB,UAAU,GAAGnB,EAAE,CAAChF,IAAI,CAAC,CAAC;YACtB,IAAI,EAAE,OAAOmG,UAAU,KAAK,QAAQ,CAAC,IAAIA,UAAU,CAACM,SAAS,EAAE;cAC3DL,WAAW,GAAGD,UAAU,CAACM,SAAS,CAACC,MAAM,CAAC,UAAUC,KAAK,EAAE;gBAAE,OAAOA,KAAK,CAACzB,YAAY,KAAKA,YAAY;cAAE,CAAC,CAAC;cAC3G,IAAIkB,WAAW,CAACpF,MAAM,GAAG,CAAC,EAAE;gBACxB,IAAI,CAAC0C,YAAY,CAAC6C,gBAAgB,GAAGH,WAAW,CAAC,CAAC,CAAC;gBACnD,OAAO,CAAC,CAAC,CAAC,YAAYA,WAAW,CAAC,CAAC,CAAC,CAAC;cACzC;YACJ;YACA;AACxB;AACA;AACA;YACwB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC3B,cAAc,CAAC;cAAES,YAAY,EAAEA;YAAa,CAAC,CAAC,CAAC;UAC7E,KAAK,CAAC;YACF;AACxB;AACA;AACA;YACwBF,EAAE,CAAChF,IAAI,CAAC,CAAC;YACT,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;UAC/B,KAAK,CAAC;YACFqG,KAAK,GAAGrB,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjBsG,SAAS,GAAG,mCAAmC,CAACpE,MAAM,CAACmE,KAAK,CAAC;YAC7D/C,MAAM,CAAC9B,KAAK,CAAC8E,SAAS,CAAC;YACvB,MAAMD,KAAK;UACf,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACD9C,qBAAqB,CAACvB,SAAS,CAAC4E,wBAAwB,GAAG,UAAU1B,YAAY,EAAES,aAAa,EAAE;IAC9F,OAAOlH,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAImG,aAAa,EAAEiC,WAAW,EAAEC,YAAY,EAAEC,KAAK,EAAET,SAAS;MAC9D,OAAO1G,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACA,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACwC,aAAa,CAAC;cAChCV,YAAY,EAAEA,YAAY;cAC1B8B,mBAAmB,EAAErB;YACzB,CAAC,CAAC,CAAC;UACX,KAAK,CAAC;YACFkB,WAAW,GAAG7B,EAAE,CAAChF,IAAI,CAAC,CAAC;YACvB,IAAI6G,WAAW,CAACI,UAAU,EAAE;cACxBH,YAAY,GAAGD,WAAW,CAACI,UAAU,CAACP,MAAM,CAAC,UAAUQ,MAAM,EAAE;gBAAE,OAAOA,MAAM,CAACvB,aAAa,KAAKA,aAAa;cAAE,CAAC,CAAC;cAClH,IAAImB,YAAY,CAAC9F,MAAM,GAAG,CAAC,EAAE;gBACzB,IAAI,CAACmG,kBAAkB,GAAGL,YAAY,CAAC,CAAC,CAAC,CAACM,mBAAmB;gBAC7D,OAAO,CAAC,CAAC,CAAC,YAAYN,YAAY,CAAC,CAAC,CAAC,CAAC;cAC1C;YACJ;YACA;AACxB;AACA;AACA;YACwB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACrB,eAAe,CAAC;cAClCP,YAAY,EAAEA,YAAY;cAC1BS,aAAa,EAAEA;YACnB,CAAC,CAAC,CAAC;UACX,KAAK,CAAC;YACF;AACxB;AACA;AACA;YACwBX,EAAE,CAAChF,IAAI,CAAC,CAAC;YACT,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;UAC/B,KAAK,CAAC;YACF+G,KAAK,GAAG/B,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjBsG,SAAS,GAAG,oCAAoC,CAACpE,MAAM,CAAC6E,KAAK,CAAC;YAC9DzD,MAAM,CAAC9B,KAAK,CAAC8E,SAAS,CAAC;YACvB,MAAMS,KAAK;UACf,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDxD,qBAAqB,CAACvB,SAAS,CAACqF,cAAc,GAAG,UAAU3C,MAAM,EAAE;IAC/D,OAAOjG,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAImG,aAAa,EAAED,GAAG,EAAEE,MAAM,EAAEC,MAAM,EAAEwC,KAAK,EAAEhB,SAAS;MACxD,OAAO1G,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACkE,kBAAkB,CAAC,CAAC,CAAC;UACnD,KAAK,CAAC;YACFP,aAAa,GAAGI,EAAE,CAAChF,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC4E,aAAa,EAAE;cAChB,MAAM,IAAIQ,KAAK,CAAChC,qBAAqB,CAAC;YAC1C;YACAE,MAAM,CAAC2B,KAAK,CAAC,iCAAiC,EAAEP,MAAM,CAACiB,aAAa,CAAC;YACrEhB,GAAG,GAAG,IAAIlC,mBAAmB,CAACiC,MAAM,CAAC;YACrCG,MAAM,GAAG,IAAI,CAACQ,mBAAmB,CAAC,CAAC;YACnC,OAAO,CAAC,CAAC,CAAC,WAAWR,MAAM,CAACS,IAAI,CAACX,GAAG,CAAC,CAAC;UAC1C,KAAK,CAAC;YACFG,MAAM,GAAGE,EAAE,CAAChF,IAAI,CAAC,CAAC;YAClB,OAAO,CAAC,CAAC,CAAC,YAAY8E,MAAM,CAAC;UACjC,KAAK,CAAC;YACFwC,KAAK,GAAGtC,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjBsG,SAAS,GAAG,2BAA2B,CAACpE,MAAM,CAACoF,KAAK,CAAC;YACrDhE,MAAM,CAAC9B,KAAK,CAAC8E,SAAS,CAAC;YACvB,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACD/C,qBAAqB,CAACvB,SAAS,CAACqD,mBAAmB,GAAG,YAAY;IAC9D,OAAO,IAAIlD,oBAAoB,CAAC;MAC5BoF,MAAM,EAAE,IAAI,CAACnD,OAAO,CAACmD,MAAM;MAC3BC,WAAW,EAAE,IAAI,CAACpD,OAAO,CAACoD,WAAW;MACrCC,eAAe,EAAE5E,yBAAyB,CAAC,CAAC;MAC5C6E,QAAQ,EAAE,IAAI,CAACtD,OAAO,CAACsD;IAC3B,CAAC,CAAC;EACN,CAAC;EACDnE,qBAAqB,CAACvB,SAAS,CAACmD,kBAAkB,GAAG,YAAY;IAC7D,OAAO1G,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIkJ,KAAK,GAAG,IAAI;MAChB,OAAO/H,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW2C,WAAW,CAACkF,GAAG,CAAC,CAAC,CACrClI,IAAI,CAAC,UAAU8H,WAAW,EAAE;cAC7B,IAAI,CAACA,WAAW,EACZ,OAAO,KAAK;cAChB,IAAIK,IAAI,GAAGnF,WAAW,CAACoF,KAAK,CAACN,WAAW,CAAC;cACzClE,MAAM,CAAC2B,KAAK,CAAC,6BAA6B,EAAE4C,IAAI,CAAC;cACjDF,KAAK,CAACvD,OAAO,CAACoD,WAAW,GAAGK,IAAI;cAChC,OAAO,IAAI;YACf,CAAC,CAAC,CACGE,KAAK,CAAC,UAAUvG,KAAK,EAAE;cACxB8B,MAAM,CAAC0E,IAAI,CAAC,0BAA0B,EAAExG,KAAK,CAAC;cAC9C,OAAO,KAAK;YAChB,CAAC,CAAC,CAAC;UACP,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,YAAYwD,EAAE,CAAChF,IAAI,CAAC,CAAC,CAAC;QAC5C;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDuD,qBAAqB,CAACvB,SAAS,CAACiG,qBAAqB,GAAG,YAAY;IAChE,OAAOxJ,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAIyJ,SAAS,EAAEC,KAAK;MACpB,OAAOvI,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACF,IAAI,IAAI,CAACoH,kBAAkB,IAAI,IAAI,CAACA,kBAAkB,CAACnG,MAAM,GAAG,CAAC,EAAE;cAC/D,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACmG,kBAAkB,CAAC;YAClD;YACAnC,EAAE,CAACjF,KAAK,GAAG,CAAC;UAChB,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACiF,gCAAgC,CAAC,IAAI,CAAC9B,OAAO,CAACc,YAAY,CAAC,CAAC;UAC1F,KAAK,CAAC;YACFF,EAAE,CAAChF,IAAI,CAAC,CAAC;YACT,IAAI,CAACmH,kBAAkB,GAAGiB,SAAS;YACnC,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACxB,wBAAwB,CAAC,IAAI,CAACxC,OAAO,CAACc,YAAY,EAAE,IAAI,CAACd,OAAO,CAACuB,aAAa,CAAC,CAAC;UAC9G,KAAK,CAAC;YACFuC,SAAS,GAAGlD,EAAE,CAAChF,IAAI,CAAC,CAAC;YACrB,IAAIkI,SAAS,EAAE;cACX,IAAI,CAACf,kBAAkB,GAAGe,SAAS,CAACd,mBAAmB;YAC3D;YACA,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACD,kBAAkB,CAAC;UAClD,KAAK,CAAC;YACFgB,KAAK,GAAGnD,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjBsD,MAAM,CAAC9B,KAAK,CAAC,6CAA6C,CAACU,MAAM,CAACiG,KAAK,CAAC,CAAC;YACzE,MAAMA,KAAK;UACf,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACD5E,qBAAqB,CAACvB,SAAS,CAACqG,oBAAoB,GAAG,YAAY;IAC/D,OAAO5J,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI6J,QAAQ,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,KAAK;MACpE,OAAO9I,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACgH,qBAAqB,CAAC,CAAC,CAAC;UACtD,KAAK,CAAC;YACFK,QAAQ,GAAGtD,EAAE,CAAChF,IAAI,CAAC,CAAC;YACpBuI,QAAQ,GAAG,IAAI,CAAC1E,gBAAgB,CAAC7C,MAAM,KAAK,CAAC,GACvC,IAAI,CAAC2H,uBAAuB,CAAC,CAAC,GAC9B,IAAI,CAAC9E,gBAAgB;YAC3B2E,cAAc,GAAG;cACbtD,YAAY,EAAE,IAAI,CAACd,OAAO,CAACc,YAAY;cACvCS,aAAa,EAAE,IAAI,CAACvB,OAAO,CAACuB,aAAa;cACzC/B,SAAS,EAAE2E,QAAQ;cACnBK,aAAa,EAAEN;YACnB,CAAC;YACD,IAAI,CAAC5E,YAAY,CAACC,qBAAqB,GAAG,IAAI;YAC9C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC0D,cAAc,CAACmB,cAAc,CAAC,CAAC;UAC7D,KAAK,CAAC;YACFC,qBAAqB,GAAGzD,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjC,IAAI,CAACmH,kBAAkB,GAAGsB,qBAAqB,CAACI,iBAAiB;YACjE,IAAI,CAACnF,YAAY,CAACC,qBAAqB,GAAG,KAAK;YAC/C,IAAI,CAACE,gBAAgB,GAAG,EAAE;YAC1B,OAAO,CAAC,CAAC,CAAC,YAAY4E,qBAAqB,CAAC;UAChD,KAAK,CAAC;YACFC,KAAK,GAAG1D,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjBsD,MAAM,CAAC9B,KAAK,CAAC,qCAAqC,CAACU,MAAM,CAACwG,KAAK,CAAC,CAAC;YACjE,IAAIrF,iBAAiB,CAACyF,QAAQ,CAACJ,KAAK,CAACK,IAAI,CAAC,EAAE;cACxC,IAAI,CAACC,6BAA6B,CAAC;gBAC/BpF,SAAS,EAAE,IAAI,CAACC,gBAAgB;gBAChCqB,YAAY,EAAE,IAAI,CAACd,OAAO,CAACc,YAAY;gBACvCS,aAAa,EAAE,IAAI,CAACvB,OAAO,CAACuB;cAChC,CAAC,CAAC;YACN,CAAC,MACI;cACD,IAAI,CAACjC,YAAY,CAACC,qBAAqB,GAAG,KAAK;cAC/C,MAAM+E,KAAK;YACf;YACA,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;UAC3B,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDnF,qBAAqB,CAACvB,SAAS,CAAC2G,uBAAuB,GAAG,YAAY;IAClE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAIM,eAAe,GAAG,CAAC;IACvB,IAAIC,aAAa,GAAG,CAAC;IACrB,OAAOD,eAAe,GAAG,IAAI,CAACvF,YAAY,CAACE,SAAS,CAAC5C,MAAM,EAAE;MACzD,IAAImI,YAAY,GAAG,IAAI,CAACzF,YAAY,CAACE,SAAS,CAACqF,eAAe,CAAC;MAC/D,IAAIG,SAAS,GAAGD,YAAY,GACtB,IAAIE,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,YAAY,CAACI,OAAO,CAAC,CAACvI,MAAM,GACnD+B,+BAA+B,GACjC,CAAC;MACP,IAAIqG,SAAS,GAAGlG,6BAA6B,EAAE;QAC3C,IAAIoD,SAAS,GAAG,gEAAgE,CAACpE,MAAM,CAACkH,SAAS,EAAE,2BAA2B,CAAC;QAC/H9F,MAAM,CAAC0E,IAAI,CAAC1B,SAAS,CAAC;QACtB6C,YAAY,CAACI,OAAO,GAAGJ,YAAY,CAACI,OAAO,CAACC,SAAS,CAAC,CAAC,EAAEJ,SAAS,CAAC;MACvE;MACA,IAAIF,aAAa,GAAGE,SAAS,GAAGnG,mCAAmC,EAC/D;MACJiG,aAAa,IAAIE,SAAS;MAC1BH,eAAe,EAAE;IACrB;IACA,IAAI,CAACpF,gBAAgB,GAAG,IAAI,CAACH,YAAY,CAACE,SAAS,CAAC6F,MAAM,CAAC,CAAC,EAAER,eAAe,CAAC;IAC9E,OAAO,IAAI,CAACpF,gBAAgB;EAChC,CAAC;EACDN,qBAAqB,CAACvB,SAAS,CAACgH,6BAA6B,GAAG,UAAUU,OAAO,EAAE;IAC/E,OAAOjL,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;MAC/C,IAAI6J,QAAQ,EAAEqB,qBAAqB,EAAEC,KAAK;MAC1C,OAAOhK,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;QACnC,QAAQA,EAAE,CAACjF,KAAK;UACZ,KAAK,CAAC;YACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;YACzB,IAAI,CAACkG,kBAAkB,GAAGiB,SAAS;YACnC,IAAI,CAAC1E,YAAY,CAACC,qBAAqB,GAAG,IAAI;YAC9C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACsE,qBAAqB,CAAC,CAAC,CAAC;UACtD,KAAK,CAAC;YACFK,QAAQ,GAAGtD,EAAE,CAAChF,IAAI,CAAC,CAAC;YACpB0J,OAAO,CAACd,aAAa,GAAGN,QAAQ;YAChC,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACjB,cAAc,CAACqC,OAAO,CAAC,CAAC;UACtD,KAAK,CAAC;YACFC,qBAAqB,GAAG3E,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC0D,YAAY,CAACC,qBAAqB,GAAG,KAAK;YAC/C,IAAI,CAACE,gBAAgB,GAAG,EAAE;YAC1B,OAAO,CAAC,CAAC,CAAC,YAAY8F,qBAAqB,CAAC;UAChD,KAAK,CAAC;YACFC,KAAK,GAAG5E,EAAE,CAAChF,IAAI,CAAC,CAAC;YACjBsD,MAAM,CAAC9B,KAAK,CAAC,8DAA8D,CAACU,MAAM,CAAC0H,KAAK,CAAC,CAAC;YAC1F,IAAI,CAAClG,YAAY,CAACC,qBAAqB,GAAG,KAAK;YAC/C,MAAMiG,KAAK;UACf,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,WAAW;QACjC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EACDrG,qBAAqB,CAACvB,SAAS,CAAC8B,wBAAwB,GAAG,YAAY;IACnE,IAAI6D,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACkC,MAAM,EAAE;MACbC,aAAa,CAAC,IAAI,CAACD,MAAM,CAAC;IAC9B;IACA,IAAI,CAACA,MAAM,GAAGE,WAAW,CAAC,YAAY;MAAE,OAAOtL,SAAS,CAACkJ,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACxF,IAAIqC,KAAK;QACT,OAAOpK,WAAW,CAAC,IAAI,EAAE,UAAUoF,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACjF,KAAK;YACZ,KAAK,CAAC;cACFiF,EAAE,CAAC9E,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;cACzB,IAAI,CAAC,IAAI,CAACgJ,2BAA2B,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAChE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC5B,oBAAoB,CAAC,CAAC,CAAC;YACrD,KAAK,CAAC;cACFrD,EAAE,CAAChF,IAAI,CAAC,CAAC;cACTgF,EAAE,CAACjF,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC/B,KAAK,CAAC;cACFiK,KAAK,GAAGhF,EAAE,CAAChF,IAAI,CAAC,CAAC;cACjBsD,MAAM,CAAC9B,KAAK,CAAC,kEAAkE,CAACU,MAAM,CAAC8H,KAAK,CAAC,CAAC;cAC9F,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC3B,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UACjC;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC,EAAE,IAAI,CAAC;EAChB,CAAC;EACDzG,qBAAqB,CAACvB,SAAS,CAACiI,2BAA2B,GAAG,YAAY;IACtE,OAAQ,CAAC,IAAI,CAACvG,YAAY,CAACE,SAAS,CAAC5C,MAAM,KAAK,CAAC,IAC7C,IAAI,CAAC6C,gBAAgB,CAAC7C,MAAM,KAAK,CAAC,KAClC,CAAC,IAAI,CAAC0C,YAAY,CAACC,qBAAqB;EAChD,CAAC;EACDJ,qBAAqB,CAACS,aAAa,GAAGb,4BAA4B;EAClEI,qBAAqB,CAACW,QAAQ,GAAGlB,uBAAuB;EACxD,OAAOO,qBAAqB;AAChC,CAAC,CAAC,CAAE;AACJ,SAASA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}