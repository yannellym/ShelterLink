{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport function parents(ele) {\n  var list = [];\n  var element = ele;\n  while (element && element.parentNode && element.parentNode.nodeType === 1) {\n    element = /** @type {!Element} */element.parentNode;\n    list.push(element);\n  }\n  return list;\n}","map":{"version":3,"names":["parents","ele","list","element","parentNode","nodeType","push"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/analytics/src/vendor/dom-utils/parents.ts"],"sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\n/**\n * Returns an array of a DOM element's parent elements.\n * @param {!Element} element The DOM element whose parents to get.\n * @return {!Array} An array of all parent elemets, or an empty array if no\n *     parent elements are found.\n */\nexport function parents(ele) {\n\tconst list = [];\n\tlet element = ele;\n\twhile (element && element.parentNode && element.parentNode.nodeType === 1) {\n\t\telement = /** @type {!Element} */ element.parentNode;\n\t\tlist.push(element);\n\t}\n\treturn list;\n}\n"],"mappings":"AAAA;;;AAIA;;;;;;AAMA,OAAM,SAAUA,OAAOA,CAACC,GAAG;EAC1B,IAAMC,IAAI,GAAG,EAAE;EACf,IAAIC,OAAO,GAAGF,GAAG;EACjB,OAAOE,OAAO,IAAIA,OAAO,CAACC,UAAU,IAAID,OAAO,CAACC,UAAU,CAACC,QAAQ,KAAK,CAAC,EAAE;IAC1EF,OAAO,GAAG,uBAAwBA,OAAO,CAACC,UAAU;IACpDF,IAAI,CAACI,IAAI,CAACH,OAAO,CAAC;;EAEnB,OAAOD,IAAI;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}