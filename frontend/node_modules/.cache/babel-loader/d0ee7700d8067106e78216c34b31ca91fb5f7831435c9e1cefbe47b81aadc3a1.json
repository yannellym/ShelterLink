{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nexport var getHashedData = function (key, data) {\n  var sha256 = new Sha256(key);\n  sha256.update(data);\n  // TODO: V6 flip to async digest\n  var hashedData = sha256.digestSync();\n  return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nexport var getHashedDataAsHex = function (key, data) {\n  var hashedData = getHashedData(key, data);\n  return toHex(hashedData);\n};","map":{"version":3,"names":["Sha256","toHex","getHashedData","key","data","sha256","update","hashedData","digestSync","getHashedDataAsHex"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\nimport { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nexport var getHashedData = function (key, data) {\n    var sha256 = new Sha256(key);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    var hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nexport var getHashedDataAsHex = function (key, data) {\n    var hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,KAAK,QAAQ,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,aAAa,GAAG,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAE;EAC5C,IAAIC,MAAM,GAAG,IAAIL,MAAM,CAACG,GAAG,CAAC;EAC5BE,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC;EACnB;EACA,IAAIG,UAAU,GAAGF,MAAM,CAACG,UAAU,CAAC,CAAC;EACpC,OAAOD,UAAU;AACrB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,kBAAkB,GAAG,SAAAA,CAAUN,GAAG,EAAEC,IAAI,EAAE;EACjD,IAAIG,UAAU,GAAGL,aAAa,CAACC,GAAG,EAAEC,IAAI,CAAC;EACzC,OAAOH,KAAK,CAACM,UAAU,CAAC;AAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}