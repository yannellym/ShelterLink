{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Initialize with page 1\n  const itemsPerPage = 10; // Number of dogs to display per page\n  const minimumPets = 100; // Minimum number of pets to query\n  const fetchInProgress = useRef(false); // To prevent concurrent fetch requests\n\n  const fetchAllPets = useCallback(() => {\n    if (fetchInProgress.current || searchResults.length >= minimumPets) {\n      return;\n    }\n    fetchInProgress.current = true;\n    const endpoint = `http://localhost:3002/api/petfinder?page=${currentPage}&perPage=${itemsPerPage}`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      console.log('API Data:', data);\n\n      // Combine new results with existing results\n      const updatedResults = [...searchResults, ...(data.animals || [])];\n      setSearchResults(updatedResults);\n\n      // If we haven't reached the minimumPets, fetch the next page\n      if (updatedResults.length < minimumPets) {\n        setCurrentPage(currentPage + 1);\n      } else {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }).finally(() => {\n      fetchInProgress.current = false;\n    });\n  }, [currentPage, itemsPerPage, minimumPets, searchResults]);\n  useEffect(() => {\n    // When the component mounts, fetch all animals\n    setSearchResults([]);\n    setCurrentPage(1);\n    fetchAllPets();\n  }, [fetchAllPets]);\n  const applyFilters = (data, selectedFilters) => {\n    // Apply filters for all filter categories\n    for (const filterKey in selectedFilters) {\n      var _selectedFilters$filt;\n      const filterValue = (_selectedFilters$filt = selectedFilters[filterKey]) === null || _selectedFilters$filt === void 0 ? void 0 : _selectedFilters$filt.toLowerCase();\n      if (filterValue && filterValue !== 'any') {\n        data = data.filter(pet => {\n          var _pet$filterKey;\n          // Filter logic for the given category\n          const petValue = (_pet$filterKey = pet[filterKey]) === null || _pet$filterKey === void 0 ? void 0 : _pet$filterKey.toLowerCase();\n          return petValue && petValue === filterValue;\n        });\n      }\n    }\n    return data;\n  };\n  const handleFilterSubmit = selectedFilters => {\n    // Apply filters based on the selected filters\n    setFilteredResults(applyFilters(searchResults, selectedFilters));\n  };\n  useEffect(() => {\n    // Update the filtered results whenever searchResults or filters change\n    setFilteredResults(applyFilters(searchResults, selectedFilters));\n  }, [searchResults, selectedFilters]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterSubmit: handleFilterSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: filteredResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"ya9R5yLkZR9ECd+R0zQY60topQg=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","filteredResults","setFilteredResults","loading","setLoading","currentPage","setCurrentPage","itemsPerPage","minimumPets","fetchInProgress","fetchAllPets","current","length","endpoint","fetch","then","response","json","data","console","log","updatedResults","animals","catch","error","message","finally","applyFilters","filterKey","_selectedFilters$filt","filterValue","toLowerCase","filter","pet","_pet$filterKey","petValue","handleFilterSubmit","className","children","onFilterSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","isFavorite","some","favoritePet","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Initialize with page 1\n  const itemsPerPage = 10; // Number of dogs to display per page\n  const minimumPets = 100; // Minimum number of pets to query\n  const fetchInProgress = useRef(false); // To prevent concurrent fetch requests\n\n  const fetchAllPets = useCallback(() => {\n    if (fetchInProgress.current || searchResults.length >= minimumPets) {\n      return;\n    }\n\n    fetchInProgress.current = true;\n\n    const endpoint = `http://localhost:3002/api/petfinder?page=${currentPage}&perPage=${itemsPerPage}`;\n\n    fetch(endpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('API Data:', data);\n\n        // Combine new results with existing results\n        const updatedResults = [...searchResults, ...(data.animals || [])];\n        setSearchResults(updatedResults);\n\n        // If we haven't reached the minimumPets, fetch the next page\n        if (updatedResults.length < minimumPets) {\n          setCurrentPage(currentPage + 1);\n        } else {\n          setLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      })\n      .finally(() => {\n        fetchInProgress.current = false;\n      });\n  }, [currentPage, itemsPerPage, minimumPets, searchResults]);\n\n  useEffect(() => {\n    // When the component mounts, fetch all animals\n    setSearchResults([]);\n    setCurrentPage(1);\n    fetchAllPets();\n  }, [fetchAllPets]);\n\n  const applyFilters = (data, selectedFilters) => {\n    // Apply filters for all filter categories\n    for (const filterKey in selectedFilters) {\n      const filterValue = selectedFilters[filterKey]?.toLowerCase();\n      if (filterValue && filterValue !== 'any') {\n        data = data.filter((pet) => {\n          // Filter logic for the given category\n          const petValue = pet[filterKey]?.toLowerCase();\n          return petValue && petValue === filterValue;\n        });\n      }\n    }\n\n    return data;\n  };\n\n  const handleFilterSubmit = (selectedFilters) => {\n    // Apply filters based on the selected filters\n    setFilteredResults(applyFilters(searchResults, selectedFilters));\n  };\n\n  useEffect(() => {\n    // Update the filtered results whenever searchResults or filters change\n    setFilteredResults(applyFilters(searchResults, selectedFilters));\n  }, [searchResults, selectedFilters]);\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterSubmit={handleFilterSubmit} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className=\"pet-card-list\">\n            {filteredResults.map((pet) => (\n              <PetCard\n                key={pet.id}\n                pet={pet}\n                addToFavorites={addToFavorites}\n                removeFromFavorites={removeFromFavorites}\n                isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,wBAAwB;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EACvE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC;IACrDiB,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,KAAK;IACZC,GAAG,EAAE,KAAK;IACVC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAM6B,YAAY,GAAG,EAAE,CAAC,CAAC;EACzB,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,eAAe,GAAG5B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvC,MAAM6B,YAAY,GAAG9B,WAAW,CAAC,MAAM;IACrC,IAAI6B,eAAe,CAACE,OAAO,IAAIpB,aAAa,CAACqB,MAAM,IAAIJ,WAAW,EAAE;MAClE;IACF;IAEAC,eAAe,CAACE,OAAO,GAAG,IAAI;IAE9B,MAAME,QAAQ,GAAI,4CAA2CR,WAAY,YAAWE,YAAa,EAAC;IAElGO,KAAK,CAACD,QAAQ,CAAC,CACZE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,IAAI,CAAC;;MAE9B;MACA,MAAMG,cAAc,GAAG,CAAC,GAAG9B,aAAa,EAAE,IAAI2B,IAAI,CAACI,OAAO,IAAI,EAAE,CAAC,CAAC;MAClE9B,gBAAgB,CAAC6B,cAAc,CAAC;;MAEhC;MACA,IAAIA,cAAc,CAACT,MAAM,GAAGJ,WAAW,EAAE;QACvCF,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;MACjC,CAAC,MAAM;QACLD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,CACDmB,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpDrB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDsB,OAAO,CAAC,MAAM;MACbjB,eAAe,CAACE,OAAO,GAAG,KAAK;IACjC,CAAC,CAAC;EACN,CAAC,EAAE,CAACN,WAAW,EAAEE,YAAY,EAAEC,WAAW,EAAEjB,aAAa,CAAC,CAAC;EAE3DZ,SAAS,CAAC,MAAM;IACd;IACAa,gBAAgB,CAAC,EAAE,CAAC;IACpBc,cAAc,CAAC,CAAC,CAAC;IACjBI,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMiB,YAAY,GAAGA,CAACT,IAAI,EAAEzB,eAAe,KAAK;IAC9C;IACA,KAAK,MAAMmC,SAAS,IAAInC,eAAe,EAAE;MAAA,IAAAoC,qBAAA;MACvC,MAAMC,WAAW,IAAAD,qBAAA,GAAGpC,eAAe,CAACmC,SAAS,CAAC,cAAAC,qBAAA,uBAA1BA,qBAAA,CAA4BE,WAAW,CAAC,CAAC;MAC7D,IAAID,WAAW,IAAIA,WAAW,KAAK,KAAK,EAAE;QACxCZ,IAAI,GAAGA,IAAI,CAACc,MAAM,CAAEC,GAAG,IAAK;UAAA,IAAAC,cAAA;UAC1B;UACA,MAAMC,QAAQ,IAAAD,cAAA,GAAGD,GAAG,CAACL,SAAS,CAAC,cAAAM,cAAA,uBAAdA,cAAA,CAAgBH,WAAW,CAAC,CAAC;UAC9C,OAAOI,QAAQ,IAAIA,QAAQ,KAAKL,WAAW;QAC7C,CAAC,CAAC;MACJ;IACF;IAEA,OAAOZ,IAAI;EACb,CAAC;EAED,MAAMkB,kBAAkB,GAAI3C,eAAe,IAAK;IAC9C;IACAS,kBAAkB,CAACyB,YAAY,CAACpC,aAAa,EAAEE,eAAe,CAAC,CAAC;EAClE,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACAuB,kBAAkB,CAACyB,YAAY,CAACpC,aAAa,EAAEE,eAAe,CAAC,CAAC;EAClE,CAAC,EAAE,CAACF,aAAa,EAAEE,eAAe,CAAC,CAAC;EAEpC,oBACER,OAAA;IAAKoD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrD,OAAA;MAAKoD,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBrD,OAAA;QAAKoD,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBrD,OAAA,CAACF,MAAM;UAACwD,cAAc,EAAEH;QAAmB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1D,OAAA;MAAKoD,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBnC,OAAO,gBACNlB,OAAA;QAAAqD,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjB1D,OAAA;QAAKoD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BrC,eAAe,CAAC2C,GAAG,CAAEX,GAAG,iBACvBhD,OAAA,CAACH,OAAO;UAENmD,GAAG,EAAEA,GAAI;UACT7C,cAAc,EAAEA,cAAe;UAC/BC,mBAAmB,EAAEA,mBAAoB;UACzCwD,UAAU,EAAE1D,YAAY,CAAC2D,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACC,EAAE,KAAKf,GAAG,CAACe,EAAE;QAAE,GAJrEf,GAAG,CAACe,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKZ,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrD,EAAA,CA9GQJ,QAAQ;AAAA+D,EAAA,GAAR/D,QAAQ;AAgHjB,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}