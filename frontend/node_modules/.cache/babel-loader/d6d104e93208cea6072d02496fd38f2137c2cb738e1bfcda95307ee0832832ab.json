{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nexport var getCanonicalQueryString = function (searchParams) {\n  return Array.from(searchParams).sort(function (_a, _b) {\n    var _c = __read(_a, 2),\n      keyA = _c[0],\n      valA = _c[1];\n    var _d = __read(_b, 2),\n      keyB = _d[0],\n      valB = _d[1];\n    if (keyA === keyB) {\n      return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n  }).map(function (_a) {\n    var _b = __read(_a, 2),\n      key = _b[0],\n      val = _b[1];\n    return \"\".concat(escapeUri(key), \"=\").concat(escapeUri(val));\n  }).join('&');\n};\nvar escapeUri = function (uri) {\n  return encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n};\nvar hexEncode = function (c) {\n  return \"%\".concat(c.charCodeAt(0).toString(16).toUpperCase());\n};","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","getCanonicalQueryString","searchParams","Array","from","sort","_a","_b","_c","keyA","valA","_d","keyB","valB","map","key","val","concat","escapeUri","join","uri","encodeURIComponent","replace","hexEncode","c","charCodeAt","toString","toUpperCase"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nexport var getCanonicalQueryString = function (searchParams) {\n    return Array.from(searchParams)\n        .sort(function (_a, _b) {\n        var _c = __read(_a, 2), keyA = _c[0], valA = _c[1];\n        var _d = __read(_b, 2), keyB = _d[0], valB = _d[1];\n        if (keyA === keyB) {\n            return valA < valB ? -1 : 1;\n        }\n        return keyA < keyB ? -1 : 1;\n    })\n        .map(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], val = _b[1];\n        return \"\".concat(escapeUri(key), \"=\").concat(escapeUri(val));\n    })\n        .join('&');\n};\nvar escapeUri = function (uri) {\n    return encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\n};\nvar hexEncode = function (c) {\n    return \"%\".concat(c.charCodeAt(0).toString(16).toUpperCase());\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}