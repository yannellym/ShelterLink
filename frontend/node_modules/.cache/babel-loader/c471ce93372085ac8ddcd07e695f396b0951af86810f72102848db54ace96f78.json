{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\nexport var omitRetryHeadersMiddleware = function () {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n          if (HttpRequest.isInstance(request)) {\n            delete request.headers[INVOCATION_ID_HEADER];\n            delete request.headers[REQUEST_HEADER];\n          }\n          return [2 /*return*/, next(args)];\n        });\n      });\n    };\n  };\n};\nexport var omitRetryHeadersMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true\n};\nexport var getOmitRetryHeadersPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["HttpRequest","INVOCATION_ID_HEADER","REQUEST_HEADER","omitRetryHeadersMiddleware","next","args","__awaiter","request","isInstance","headers","omitRetryHeadersMiddlewareOptions","name","tags","relation","toMiddleware","override","getOmitRetryHeadersPlugin","options","applyToStack","clientStack","addRelativeTo"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/middleware-retry/src/omitRetryHeadersMiddleware.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n  RelativeMiddlewareOptions,\n} from \"@aws-sdk/types\";\n\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"./constants\";\n\nexport const omitRetryHeadersMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  const { request } = args;\n  if (HttpRequest.isInstance(request)) {\n    delete request.headers[INVOCATION_ID_HEADER];\n    delete request.headers[REQUEST_HEADER];\n  }\n  return next(args);\n};\n\nexport const omitRetryHeadersMiddlewareOptions: RelativeMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true,\n};\n\nexport const getOmitRetryHeadersPlugin = (options: unknown): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,wBAAwB;AAUpD,SAASC,oBAAoB,EAAEC,cAAc,QAAQ,aAAa;AAElE,OAAO,IAAMC,0BAA0B,GAAG,SAAAA,CAAA;EAAM,iBAC9CC,IAAkC;IACD,iBACjCC,IAAmC;MAAA,OAAAC,SAAA;;;UAE3BC,OAAO,GAAKF,IAAI,CAAAE,OAAT;UACf,IAAIP,WAAW,CAACQ,UAAU,CAACD,OAAO,CAAC,EAAE;YACnC,OAAOA,OAAO,CAACE,OAAO,CAACR,oBAAoB,CAAC;YAC5C,OAAOM,OAAO,CAACE,OAAO,CAACP,cAAc,CAAC;;UAExC,sBAAOE,IAAI,CAACC,IAAI,CAAC;;;KAClB;EATkC,CASlC;AAX+C,CAW/C;AAED,OAAO,IAAMK,iCAAiC,GAA8B;EAC1EC,IAAI,EAAE,4BAA4B;EAClCC,IAAI,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,oBAAoB,CAAC;EAChDC,QAAQ,EAAE,QAAQ;EAClBC,YAAY,EAAE,mBAAmB;EACjCC,QAAQ,EAAE;CACX;AAED,OAAO,IAAMC,yBAAyB,GAAG,SAAAA,CAACC,OAAgB;EAA0B,OAAC;IACnFC,YAAY,EAAE,SAAAA,CAACC,WAAW;MACxBA,WAAW,CAACC,aAAa,CAACjB,0BAA0B,EAAE,EAAEO,iCAAiC,CAAC;IAC5F;GACD;AAJmF,CAIlF"},"metadata":{},"sourceType":"module","externalDependencies":[]}