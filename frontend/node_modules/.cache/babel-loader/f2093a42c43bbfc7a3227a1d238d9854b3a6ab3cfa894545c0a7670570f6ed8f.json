{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy } from \"./AdaptiveRetryStrategy\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES } from \"./config\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport var ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport var CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport var NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n  environmentVariableSelector: function (env) {\n    var value = env[ENV_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    var maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(\"Environment variable \".concat(ENV_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n    }\n    return maxAttempt;\n  },\n  configFileSelector: function (profile) {\n    var value = profile[CONFIG_MAX_ATTEMPTS];\n    if (!value) return undefined;\n    var maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(\"Shared config file entry \".concat(CONFIG_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n    }\n    return maxAttempt;\n  },\n  default: DEFAULT_MAX_ATTEMPTS\n};\nexport var resolveRetryConfig = function (input) {\n  var _a;\n  var maxAttempts = normalizeProvider((_a = input.maxAttempts) !== null && _a !== void 0 ? _a : DEFAULT_MAX_ATTEMPTS);\n  return __assign(__assign({}, input), {\n    maxAttempts: maxAttempts,\n    retryStrategy: function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var retryMode;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (input.retryStrategy) {\n                return [2, input.retryStrategy];\n              }\n              return [4, normalizeProvider(input.retryMode)()];\n            case 1:\n              retryMode = _a.sent();\n              if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return [2, new AdaptiveRetryStrategy(maxAttempts)];\n              }\n              return [2, new StandardRetryStrategy(maxAttempts)];\n          }\n        });\n      });\n    }\n  });\n};\nexport var ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport var CONFIG_RETRY_MODE = \"retry_mode\";\nexport var NODE_RETRY_MODE_CONFIG_OPTIONS = {\n  environmentVariableSelector: function (env) {\n    return env[ENV_RETRY_MODE];\n  },\n  configFileSelector: function (profile) {\n    return profile[CONFIG_RETRY_MODE];\n  },\n  default: DEFAULT_RETRY_MODE\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","normalizeProvider","AdaptiveRetryStrategy","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","RETRY_MODES","StandardRetryStrategy","ENV_MAX_ATTEMPTS","CONFIG_MAX_ATTEMPTS","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","environmentVariableSelector","env","value","undefined","maxAttempt","parseInt","Number","isNaN","Error","concat","configFileSelector","profile","default","resolveRetryConfig","input","_a","maxAttempts","retryStrategy","retryMode","label","sent","ADAPTIVE","ENV_RETRY_MODE","CONFIG_RETRY_MODE","NODE_RETRY_MODE_CONFIG_OPTIONS"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/client-location/node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy } from \"./AdaptiveRetryStrategy\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES } from \"./config\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport var ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport var CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport var NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) {\n        var value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        var maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(\"Environment variable \".concat(ENV_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n        }\n        return maxAttempt;\n    },\n    configFileSelector: function (profile) {\n        var value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        var maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(\"Shared config file entry \".concat(CONFIG_MAX_ATTEMPTS, \" mast be a number, got \\\"\").concat(value, \"\\\"\"));\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport var resolveRetryConfig = function (input) {\n    var _a;\n    var maxAttempts = normalizeProvider((_a = input.maxAttempts) !== null && _a !== void 0 ? _a : DEFAULT_MAX_ATTEMPTS);\n    return __assign(__assign({}, input), { maxAttempts: maxAttempts, retryStrategy: function () { return __awaiter(void 0, void 0, void 0, function () {\n            var retryMode;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (input.retryStrategy) {\n                            return [2, input.retryStrategy];\n                        }\n                        return [4, normalizeProvider(input.retryMode)()];\n                    case 1:\n                        retryMode = _a.sent();\n                        if (retryMode === RETRY_MODES.ADAPTIVE) {\n                            return [2, new AdaptiveRetryStrategy(maxAttempts)];\n                        }\n                        return [2, new StandardRetryStrategy(maxAttempts)];\n                }\n            });\n        }); } });\n};\nexport var ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport var CONFIG_RETRY_MODE = \"retry_mode\";\nexport var NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: function (env) { return env[ENV_RETRY_MODE]; },\n    configFileSelector: function (profile) { return profile[CONFIG_RETRY_MODE]; },\n    default: DEFAULT_RETRY_MODE,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}