{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const itemsPerPage = 10;\n  const minimumPets = 10; // Change this to the minimum number of pets you want to display\n  const fetchInProgress = useRef(false);\n  const fetchPets = useCallback(() => {\n    if (fetchInProgress.current) {\n      return;\n    }\n    fetchInProgress.current = true;\n    setLoading(true);\n    const endpoint = `http://localhost:3002/api/petfinder?page=1&perPage=${itemsPerPage}`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      console.log('API Data:', data);\n      const existingPetIds = searchResults.map(pet => pet.id);\n      const uniquePets = data.animals.filter(pet => !existingPetIds.includes(pet.id));\n      const updatedResults = [...searchResults, ...uniquePets];\n      if (updatedResults.length < minimumPets) {\n        setLoading(false);\n      } else {\n        setLoading(false);\n        setSearchResults(updatedResults);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }).finally(() => {\n      fetchInProgress.current = false;\n    });\n  }, [searchResults, minimumPets, itemsPerPage]);\n  const handleSearchClick = () => {\n    setSearchResults([]); // Clear existing results\n    fetchPets(); // Fetch pets based on filters\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onSearchClick: handleSearchClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"xG0qhyXDmu9mbvDoGDiyoB8VlGQ=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useCallback","useRef","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","itemsPerPage","minimumPets","fetchInProgress","fetchPets","current","endpoint","fetch","then","response","json","data","console","log","existingPetIds","map","pet","id","uniquePets","animals","filter","includes","updatedResults","length","catch","error","message","finally","handleSearchClick","className","children","onSearchClick","fileName","_jsxFileName","lineNumber","columnNumber","isFavorite","some","favoritePet","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const itemsPerPage = 10;\n  const minimumPets = 10; // Change this to the minimum number of pets you want to display\n  const fetchInProgress = useRef(false);\n\n  const fetchPets = useCallback(() => {\n    if (fetchInProgress.current) {\n      return;\n    }\n\n    fetchInProgress.current = true;\n    setLoading(true);\n\n    const endpoint = `http://localhost:3002/api/petfinder?page=1&perPage=${itemsPerPage}`;\n\n    fetch(endpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('API Data:', data);\n\n        const existingPetIds = searchResults.map((pet) => pet.id);\n        const uniquePets = data.animals.filter((pet) => !existingPetIds.includes(pet.id));\n        const updatedResults = [...searchResults, ...uniquePets];\n\n        if (updatedResults.length < minimumPets) {\n          setLoading(false);\n        } else {\n          setLoading(false);\n          setSearchResults(updatedResults);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      })\n      .finally(() => {\n        fetchInProgress.current = false;\n      });\n  }, [searchResults, minimumPets, itemsPerPage]);\n\n  const handleSearchClick = () => {\n    setSearchResults([]); // Clear existing results\n    fetchPets(); // Fetch pets based on filters\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onSearchClick={handleSearchClick} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {!loading ? (\n          <div className=\"pet-card-list\">\n            {searchResults.map((pet) => (\n              <PetCard\n                key={pet.id}\n                pet={pet}\n                addToFavorites={addToFavorites}\n                removeFromFavorites={removeFromFavorites}\n                isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n              />\n            ))}\n          </div>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC5D,OAAO,wBAAwB;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EACvE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMgB,YAAY,GAAG,EAAE;EACvB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAMC,eAAe,GAAGhB,MAAM,CAAC,KAAK,CAAC;EAErC,MAAMiB,SAAS,GAAGlB,WAAW,CAAC,MAAM;IAClC,IAAIiB,eAAe,CAACE,OAAO,EAAE;MAC3B;IACF;IAEAF,eAAe,CAACE,OAAO,GAAG,IAAI;IAC9BL,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMM,QAAQ,GAAI,sDAAqDL,YAAa,EAAC;IAErFM,KAAK,CAACD,QAAQ,CAAC,CACZE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,IAAI,CAAC;MAE9B,MAAMG,cAAc,GAAGjB,aAAa,CAACkB,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,CAAC;MACzD,MAAMC,UAAU,GAAGP,IAAI,CAACQ,OAAO,CAACC,MAAM,CAAEJ,GAAG,IAAK,CAACF,cAAc,CAACO,QAAQ,CAACL,GAAG,CAACC,EAAE,CAAC,CAAC;MACjF,MAAMK,cAAc,GAAG,CAAC,GAAGzB,aAAa,EAAE,GAAGqB,UAAU,CAAC;MAExD,IAAII,cAAc,CAACC,MAAM,GAAGrB,WAAW,EAAE;QACvCF,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLA,UAAU,CAAC,KAAK,CAAC;QACjBF,gBAAgB,CAACwB,cAAc,CAAC;MAClC;IACF,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBb,OAAO,CAACa,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpD1B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACD2B,OAAO,CAAC,MAAM;MACbxB,eAAe,CAACE,OAAO,GAAG,KAAK;IACjC,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,aAAa,EAAEK,WAAW,EAAED,YAAY,CAAC,CAAC;EAE9C,MAAM2B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B9B,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IACtBM,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;;EAED,oBACEb,OAAA;IAAKsC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvC,OAAA;MAAKsC,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBvC,OAAA;QAAKsC,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBvC,OAAA,CAACF,MAAM;UAAC0C,aAAa,EAAEH;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5C,OAAA;MAAKsC,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrB,CAAC/B,OAAO,gBACPR,OAAA;QAAKsC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BjC,aAAa,CAACkB,GAAG,CAAEC,GAAG,iBACrBzB,OAAA,CAACH,OAAO;UAEN4B,GAAG,EAAEA,GAAI;UACTtB,cAAc,EAAEA,cAAe;UAC/BC,mBAAmB,EAAEA,mBAAoB;UACzCyC,UAAU,EAAE3C,YAAY,CAAC4C,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACrB,EAAE,KAAKD,GAAG,CAACC,EAAE;QAAE,GAJrED,GAAG,CAACC,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKZ,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAEN5C,OAAA;QAAAuC,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvC,EAAA,CAzEQJ,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AA2EjB,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}