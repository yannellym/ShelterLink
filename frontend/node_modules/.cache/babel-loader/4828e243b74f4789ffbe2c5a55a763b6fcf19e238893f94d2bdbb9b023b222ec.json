{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // When the component mounts, fetch all animals\n    fetchAllPets();\n  }, []);\n  const fetchAllPets = () => {\n    const endpoint = 'http://localhost:3001/api/petfinder';\n    fetch(endpoint).then(response => response.json()).then(data => {\n      console.log('API Response:', data);\n      setSearchResults(data.animals || []);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    });\n  };\n  const handleFilterChange = newFilters => {\n    // Update the filters with the new values\n    setFilters(newFilters);\n\n    // Apply client-side filtering based on newFilters\n    let filteredData = [...searchResults];\n\n    // Filter by pet type\n    if (newFilters.type !== 'any') {\n      filteredData = filteredData.filter(pet => pet.type.toLowerCase() === newFilters.type.toLowerCase());\n    }\n    // Filter by breed\n    if (newFilters.breed !== 'any') {\n      filteredData = filteredData.filter(pet => pet.breed.toLowerCase() === newFilters.breed.toLowerCase());\n    }\n    // Filter by age\n    if (newFilters.age !== 'any') {\n      filteredData = filteredData.filter(pet => pet.age.toLowerCase() === newFilters.age);\n    }\n    // Filter by gender\n    if (newFilters.gender !== 'any') {\n      filteredData = filteredData.filter(pet => pet.gender.toLowerCase() === newFilters.gender);\n    }\n    // Filter by size\n    if (newFilters.size !== 'any') {\n      filteredData = filteredData.filter(pet => pet.size.toLowerCase() === newFilters.size);\n    }\n    // Filter by coat\n    if (newFilters.coat !== 'any') {\n      filteredData = filteredData.filter(pet => pet.coat.toLowerCase() === newFilters.coat);\n    }\n    setSearchResults(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"pCLKPc2kGEJze1ptKG9m17M+Yfs=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","fetchAllPets","endpoint","fetch","then","response","json","data","console","log","animals","catch","error","message","handleFilterChange","newFilters","setFilters","filteredData","type","filter","pet","toLowerCase","breed","age","gender","size","coat","className","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","map","isFavorite","some","favoritePet","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // When the component mounts, fetch all animals\n    fetchAllPets();\n  }, []);\n\n  const fetchAllPets = () => {\n    const endpoint = 'http://localhost:3001/api/petfinder';\n\n    fetch(endpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('API Response:', data);\n        setSearchResults(data.animals || []);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      });\n  };\n\n  const handleFilterChange = (newFilters) => {\n    // Update the filters with the new values\n    setFilters(newFilters);\n    \n    // Apply client-side filtering based on newFilters\n    let filteredData = [...searchResults];\n\n    // Filter by pet type\n    if (newFilters.type !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.type.toLowerCase() === newFilters.type.toLowerCase());\n    }\n    // Filter by breed\n    if (newFilters.breed !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.breed.toLowerCase() === newFilters.breed.toLowerCase());\n    }\n    // Filter by age\n    if (newFilters.age !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.age.toLowerCase() === newFilters.age);\n    }\n    // Filter by gender\n    if (newFilters.gender !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.gender.toLowerCase() === newFilters.gender);\n    }\n    // Filter by size\n    if (newFilters.size !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.size.toLowerCase() === newFilters.size);\n    }\n    // Filter by coat\n    if (newFilters.coat !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.coat.toLowerCase() === newFilters.coat);\n    }\n\n    setSearchResults(filteredData);\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          <div className=\"pet-card-list\">\n            {searchResults.map((pet) => (\n              <PetCard\n                key={pet.id}\n                pet={pet}\n                addToFavorites={addToFavorites}\n                removeFromFavorites={removeFromFavorites}\n                isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}