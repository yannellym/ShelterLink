{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9; // Number of buttons to show at once\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    let endpoint;\n    let animalData;\n    let total_pages; // Define total_pages here\n\n    if (category === \"dog\" || category === \"cat\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${40}&page=${page}`;\n    } else if (category === \"other\") {\n      // Fetch animals for each type in the \"other\" category\n      const animalPromises = otherAnimalTypes.map(async animalType => {\n        const response = await fetch(`http://localhost:3002/api/petfinder?type=${animalType}&limit=${petsPerPage}&page=${page}`);\n        const data = await response.json();\n        if (data.pagination) {\n          total_pages = data.pagination.total_pages;\n        }\n        return data.animals || [];\n      });\n      const animalResponses = await Promise.all(animalPromises);\n      animalData = animalResponses.flat();\n    }\n    try {\n      if (animalData) {\n        return animalData.filter(animal => animal && animal.photos.length > 0);\n      } else if (endpoint) {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.animals) {\n          if (data.pagination) {\n            total_pages = data.pagination.total_pages;\n          }\n          return data.animals.filter(animal => animal.photos.length > 0);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n    return {\n      total_pages,\n      // Return total_pages\n      animals: []\n    };\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const {\n        total_pages,\n        animals\n      } = await fetchAnimalsByCategory(category, currentPage);\n\n      // Shuffle the animals array\n      shuffleArray(animals);\n      setLoading(false);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = Math.min(startPage + buttonsToShow - 1, total_pages);\n  const pageButtons = Array.from({\n    length: endPage - startPage + 1\n  }, (_, i) => startPage + i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: fetchAnimalsByCategory(category, currentPage).animals.slice(0, petsPerPage).map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), pageButtons.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        className: currentPage === page ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage >= total_pages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"PQ7R8gAeaGh5X8pNyuJ0JzeeG2c=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","AllPetsPage","_s","category","loading","setLoading","currentPage","setCurrentPage","petsPerPage","otherAnimalTypes","buttonsToShow","fetchAnimalsByCategory","page","endpoint","animalData","total_pages","animalPromises","map","animalType","response","fetch","data","json","pagination","animals","animalResponses","Promise","all","flat","filter","animal","photos","error","console","message","fetchData","window","scrollTo","top","behavior","handlePageChange","newPage","startPage","max","endPage","min","pageButtons","Array","from","_","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","pet","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9; // Number of buttons to show at once\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    let endpoint;\n    let animalData;\n    let total_pages; // Define total_pages here\n\n    if (category === \"dog\" || category === \"cat\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${40}&page=${page}`;\n    } else if (category === \"other\") {\n      // Fetch animals for each type in the \"other\" category\n      const animalPromises = otherAnimalTypes.map(async (animalType) => {\n        const response = await fetch(\n          `http://localhost:3002/api/petfinder?type=${animalType}&limit=${petsPerPage}&page=${page}`\n        );\n        const data = await response.json();\n        if (data.pagination) {\n          total_pages = data.pagination.total_pages;\n        }\n        return data.animals || [];\n      });\n\n      const animalResponses = await Promise.all(animalPromises);\n      animalData = animalResponses.flat();\n    }\n\n    try {\n      if (animalData) {\n        return animalData.filter((animal) => animal && animal.photos.length > 0);\n      } else if (endpoint) {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.animals) {\n          if (data.pagination) {\n            total_pages = data.pagination.total_pages;\n          }\n          return data.animals.filter((animal) => animal.photos.length > 0);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n\n    return {\n      total_pages, // Return total_pages\n      animals: [],\n    };\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const { total_pages, animals } = await fetchAnimalsByCategory(category, currentPage);\n\n      // Shuffle the animals array\n      shuffleArray(animals);\n\n      setLoading(false);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = Math.min(startPage + buttonsToShow - 1, total_pages);\n\n  const pageButtons = Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {fetchAnimalsByCategory(category, currentPage)\n            .animals\n            .slice(0, petsPerPage)\n            .map((pet) => (\n              <PetCard key={pet.id} pet={pet} />\n            ))}\n        </div>\n      )}\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        {pageButtons.map((page) => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={currentPage === page ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n          disabled={currentPage >= total_pages}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}