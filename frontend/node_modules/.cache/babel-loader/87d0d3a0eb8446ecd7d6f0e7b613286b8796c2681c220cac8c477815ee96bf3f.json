{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9; // Number of buttons to show at once\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    let endpoint;\n    if (category === \"dog\" || category === \"cat\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    } else if (category === \"other\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    }\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      if (data && data.animals) {\n        setCache(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n  const pageButtons = Array.from({\n    length: buttonsToShow\n  }, (_, i) => startPage + i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: cache.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), pageButtons.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        className: currentPage === page ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"ZI7uaPeuqINtAeXCvtnrefX/dFg=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","AllPetsPage","_s","category","loading","setLoading","currentPage","setCurrentPage","cache","setCache","petsPerPage","otherAnimalTypes","buttonsToShow","fetchAnimalsByCategory","page","endpoint","response","fetch","data","json","animals","error","console","message","fetchData","window","scrollTo","top","behavior","handlePageChange","newPage","startPage","max","endPage","pageButtons","Array","from","_","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9; // Number of buttons to show at once\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    let endpoint;\n\n    if (category === \"dog\" || category === \"cat\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    } else if (category === \"other\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    }\n\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      if (data && data.animals) {\n        setCache(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n\n  const pageButtons = Array.from({ length: buttonsToShow }, (_, i) => startPage + i);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {cache.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      )}\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        {pageButtons.map((page) => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={currentPage === page ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}