{"ast":null,"code":"import { __assign, __awaiter, __generator, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\nvar RestAPIClass = /** @class */function () {\n  /**\n   * Initialize Rest API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function RestAPIClass(options) {\n    this._api = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n  RestAPIClass.prototype.getModuleName = function () {\n    return 'RestAPI';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n  RestAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n      _b = _a.API,\n      API = _b === void 0 ? {} : _b,\n      otherOptions = __rest(_a, [\"API\"]);\n    var opt = __assign(__assign({}, otherOptions), API);\n    logger.debug('configure Rest API', {\n      opt: opt\n    });\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n    if (Array.isArray(opt.endpoints)) {\n      // Check if endpoints has custom_headers and validate if is a function\n      opt.endpoints.forEach(function (endpoint) {\n        if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n          logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n          endpoint.custom_header = undefined;\n        }\n      });\n    } else if (this._options && Array.isArray(this._options.endpoints)) {\n      opt.endpoints = this._options.endpoints;\n    } else {\n      opt.endpoints = [];\n    }\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n  RestAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest API instance');\n    this._api = new RestClient(this._options);\n    // Share Amplify instance with client for SSR\n    this._api.Credentials = this.Credentials;\n    return true;\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.get = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.get(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.post = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.post(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.put = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.put(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.patch = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.patch(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.del = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.del(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n  RestAPIClass.prototype.head = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n      var cancellableToken = this._api.getCancellableToken();\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n      var responsePromise = this._api.head(apiInfo, initParams);\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n  RestAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n  RestAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n  RestAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n  RestAPIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this._api.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * Getting endpoint info for API\n   * @param {string} apiName - The name of the api\n   * @param {string} path - The path of the api that is going to accessed\n   * @return {ApiInfo} - The endpoint information for that api-name\n   */\n  RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n    var cloud_logic_array = this._options.endpoints;\n    if (!Array.isArray(cloud_logic_array)) {\n      throw new Error(\"API category not configured\");\n    }\n    var apiConfig = cloud_logic_array.find(function (api) {\n      return api.name === apiName;\n    });\n    if (!apiConfig) {\n      throw new Error(\"API \" + apiName + \" does not exist\");\n    }\n    var response = {\n      endpoint: apiConfig.endpoint + path\n    };\n    if (typeof apiConfig.region === 'string') {\n      response.region = apiConfig.region;\n    } else if (typeof this._options.region === 'string') {\n      response.region = this._options.region;\n    }\n    if (typeof apiConfig.service === 'string') {\n      response.service = apiConfig.service || 'execute-api';\n    } else {\n      response.service = 'execute-api';\n    }\n    if (typeof apiConfig.custom_header === 'function') {\n      response.custom_header = apiConfig.custom_header;\n    } else {\n      response.custom_header = undefined;\n    }\n    return response;\n  };\n  return RestAPIClass;\n}();\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);","map":{"version":3,"names":["__assign","__awaiter","__generator","__rest","RestClient","Amplify","ConsoleLogger","Logger","Credentials","logger","RestAPIClass","options","_api","_options","debug","prototype","getModuleName","configure","_a","_b","API","otherOptions","opt","custom","endpoints","JSON","parse","Object","assign","region","header","Array","isArray","forEach","endpoint","custom_header","warn","name","undefined","createInstance","get","apiName","path","init","apiInfo","getEndpointInfo","cancellableToken","getCancellableToken","initParams","responsePromise","updateRequestToBeCancellable","err","Promise","reject","message","post","put","patch","del","head","isCancel","error","cancel","request","hasCancelToken","cloud_logic_array","Error","apiConfig","find","api","response","service","RestAPI","register"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/api-rest/lib-esm/RestAPI.js"],"sourcesContent":["import { __assign, __awaiter, __generator, __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials, } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\nvar RestAPIClass = /** @class */ (function () {\n    /**\n     * Initialize Rest API with AWS configuration\n     * @param {Object} options - Configuration object for API\n     */\n    function RestAPIClass(options) {\n        this._api = null;\n        this.Credentials = Credentials;\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    RestAPIClass.prototype.getModuleName = function () {\n        return 'RestAPI';\n    };\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    RestAPIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign(__assign({}, otherOptions), API);\n        logger.debug('configure Rest API', { opt: opt });\n        if (opt['aws_project_region']) {\n            if (opt['aws_cloud_logic_custom']) {\n                var custom = opt['aws_cloud_logic_custom'];\n                opt.endpoints =\n                    typeof custom === 'string' ? JSON.parse(custom) : custom;\n            }\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (Array.isArray(opt.endpoints)) {\n            // Check if endpoints has custom_headers and validate if is a function\n            opt.endpoints.forEach(function (endpoint) {\n                if (typeof endpoint.custom_header !== 'undefined' &&\n                    typeof endpoint.custom_header !== 'function') {\n                    logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n                    endpoint.custom_header = undefined;\n                }\n            });\n        }\n        else if (this._options && Array.isArray(this._options.endpoints)) {\n            opt.endpoints = this._options.endpoints;\n        }\n        else {\n            opt.endpoints = [];\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    RestAPIClass.prototype.createInstance = function () {\n        logger.debug('create Rest API instance');\n        this._api = new RestClient(this._options);\n        // Share Amplify instance with client for SSR\n        this._api.Credentials = this.Credentials;\n        return true;\n    };\n    /**\n     * Make a GET request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.get = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.get(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a POST request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.post = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.post(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PUT request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.put = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.put(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a PATCH request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.patch = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.patch(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a DEL request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.del = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.del(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Make a HEAD request\n     * @param {string} apiName - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    RestAPIClass.prototype.head = function (apiName, path, init) {\n        try {\n            var apiInfo = this.getEndpointInfo(apiName, path);\n            var cancellableToken = this._api.getCancellableToken();\n            var initParams = Object.assign({}, init);\n            initParams.cancellableToken = cancellableToken;\n            var responsePromise = this._api.head(apiInfo, initParams);\n            this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n            return responsePromise;\n        }\n        catch (err) {\n            return Promise.reject(err.message);\n        }\n    };\n    /**\n     * Checks to see if an error thrown is from an api request cancellation\n     * @param {any} error - Any error\n     * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n     */\n    RestAPIClass.prototype.isCancel = function (error) {\n        return this._api.isCancel(error);\n    };\n    /**\n     * Cancels an inflight request\n     * @param {any} request - request to cancel\n     * @return {boolean} - A boolean indicating if the request was cancelled\n     */\n    RestAPIClass.prototype.cancel = function (request, message) {\n        return this._api.cancel(request, message);\n    };\n    /**\n     * Check if the request has a corresponding cancel token in the WeakMap.\n     * @params request - The request promise\n     * @return if the request has a corresponding cancel token.\n     */\n    RestAPIClass.prototype.hasCancelToken = function (request) {\n        return this._api.hasCancelToken(request);\n    };\n    /**\n     * Getting endpoint for API\n     * @param {string} apiName - The name of the api\n     * @return {string} - The endpoint of the api\n     */\n    RestAPIClass.prototype.endpoint = function (apiName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._api.endpoint(apiName)];\n            });\n        });\n    };\n    /**\n     * Getting endpoint info for API\n     * @param {string} apiName - The name of the api\n     * @param {string} path - The path of the api that is going to accessed\n     * @return {ApiInfo} - The endpoint information for that api-name\n     */\n    RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n        var cloud_logic_array = this._options.endpoints;\n        if (!Array.isArray(cloud_logic_array)) {\n            throw new Error(\"API category not configured\");\n        }\n        var apiConfig = cloud_logic_array.find(function (api) { return api.name === apiName; });\n        if (!apiConfig) {\n            throw new Error(\"API \" + apiName + \" does not exist\");\n        }\n        var response = {\n            endpoint: apiConfig.endpoint + path,\n        };\n        if (typeof apiConfig.region === 'string') {\n            response.region = apiConfig.region;\n        }\n        else if (typeof this._options.region === 'string') {\n            response.region = this._options.region;\n        }\n        if (typeof apiConfig.service === 'string') {\n            response.service = apiConfig.service || 'execute-api';\n        }\n        else {\n            response.service = 'execute-api';\n        }\n        if (typeof apiConfig.custom_header === 'function') {\n            response.custom_header = apiConfig.custom_header;\n        }\n        else {\n            response.custom_header = undefined;\n        }\n        return response;\n    };\n    return RestAPIClass;\n}());\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);\n//# sourceMappingURL=RestAPI.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}