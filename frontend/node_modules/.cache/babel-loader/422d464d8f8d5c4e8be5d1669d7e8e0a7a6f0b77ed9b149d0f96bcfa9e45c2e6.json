{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useEffect } from 'react';\nimport usePetFinderAPI from './usePetFinderAPI';\nfunction useAnimalsBasedOnPreferencesAPI(preferences) {\n  _s2();\n  var _s = $RefreshSig$();\n  const fetchAnimalsBasedOnPreferences = async () => {\n    _s();\n    try {\n      let filteredAnimals = [];\n      let apiCallsMade = 0;\n      while (apiCallsMade < 2 && filteredAnimals.length === 0) {\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const size = preferences.size !== 'any' ? preferences.size : 'Large';\n        const apiUrl = `http://localhost:3002/api/petfinder?perPage=100&type=${preferences.type}&gender=${gender}&age=${preferences.age}&size=${size}`;\n\n        // Use the usePetfinderAPI hook to fetch data\n        const {\n          data: prefdata,\n          loading: prefdataLoading\n        } = usePetFinderAPI(apiUrl, []);\n        if (prefdata && prefdata.animals) {\n          filteredAnimals = prefdata.animals.filter(animal => {\n            const matchesTags = preferences.temperament.some(prefTemperament => animal.tags.includes(prefTemperament));\n            return matchesTags || preferences.temperament.length === 0;\n          });\n          if (filteredAnimals.length === 0) {\n            apiCallsMade++;\n          }\n        }\n      }\n      if (filteredAnimals.length === 0) {\n        const type = preferences.type;\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const fallbackApiUrl = `http://localhost:3002/api/petfinder?perPage=1&type=${type}&gender=${gender}`;\n\n        // Use the usePetfinderAPI hook to fetch the fallback animal\n        const {\n          data: animalData,\n          loading: animalDataLoading\n        } = usePetFinderAPI(fallbackApiUrl, []);\n        if (animalData && animalData.animals && animalData.animals.length > 0) {\n          const matchedAnimal = animalData.animals[0];\n          filteredAnimals.push(matchedAnimal);\n        } else {\n          console.log(\"No matching animal found based on type and gender or age.\");\n        }\n      }\n\n      // Handle the filtered animals here (e.g., set state or return data).\n    } catch (error) {\n      console.error('Error fetching pet data:', error);\n    }\n  };\n  _s(fetchAnimalsBasedOnPreferences, \"i2VE1HGklmykpMwsIIucxAQ76Xs=\", false, function () {\n    return [usePetFinderAPI, usePetFinderAPI];\n  });\n  useEffect(() => {\n    fetchAnimalsBasedOnPreferences();\n  }, [preferences]);\n  return {/* Return any relevant data or loading state here */};\n}\n_s2(useAnimalsBasedOnPreferencesAPI, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useAnimalsBasedOnPreferencesAPI;","map":{"version":3,"names":["useEffect","usePetFinderAPI","useAnimalsBasedOnPreferencesAPI","preferences","_s2","_s","$RefreshSig$","fetchAnimalsBasedOnPreferences","filteredAnimals","apiCallsMade","length","gender","size","apiUrl","type","age","data","prefdata","loading","prefdataLoading","animals","filter","animal","matchesTags","temperament","some","prefTemperament","tags","includes","fallbackApiUrl","animalData","animalDataLoading","matchedAnimal","push","console","log","error"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/useAnimalsBasedOnPreferencesAPI.js"],"sourcesContent":["import { useEffect } from 'react';\nimport usePetFinderAPI from './usePetFinderAPI';\n\nfunction useAnimalsBasedOnPreferencesAPI(preferences) {\n  const fetchAnimalsBasedOnPreferences = async () => {\n    try {\n      let filteredAnimals = [];\n      let apiCallsMade = 0;\n\n      while (apiCallsMade < 2 && filteredAnimals.length === 0) {\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const size = preferences.size !== 'any' ? preferences.size : 'Large';\n        const apiUrl = `http://localhost:3002/api/petfinder?perPage=100&type=${preferences.type}&gender=${gender}&age=${preferences.age}&size=${size}`;\n\n        // Use the usePetfinderAPI hook to fetch data\n        const { data: prefdata, loading: prefdataLoading } = usePetFinderAPI(apiUrl, []);\n\n        if (prefdata && prefdata.animals) {\n          filteredAnimals = prefdata.animals.filter((animal) => {\n            const matchesTags = preferences.temperament.some((prefTemperament) => animal.tags.includes(prefTemperament));\n            return (matchesTags || preferences.temperament.length === 0);\n          });\n          if (filteredAnimals.length === 0) {\n            apiCallsMade++;\n          }\n        }\n      }\n\n      if (filteredAnimals.length === 0) {\n        const type = preferences.type;\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const fallbackApiUrl = `http://localhost:3002/api/petfinder?perPage=1&type=${type}&gender=${gender}`;\n\n        // Use the usePetfinderAPI hook to fetch the fallback animal\n        const { data: animalData, loading: animalDataLoading } = usePetFinderAPI(fallbackApiUrl, []);\n\n        if (animalData && animalData.animals && animalData.animals.length > 0) {\n          const matchedAnimal = animalData.animals[0];\n          filteredAnimals.push(matchedAnimal);\n        } else {\n          console.log(\"No matching animal found based on type and gender or age.\");\n        }\n      }\n\n      // Handle the filtered animals here (e.g., set state or return data).\n    } catch (error) {\n      console.error('Error fetching pet data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAnimalsBasedOnPreferences();\n  }, [preferences]);\n\n  return { /* Return any relevant data or loading state here */ };\n}\n\nexport default useAnimalsBasedOnPreferencesAPI;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,+BAA+BA,CAACC,WAAW,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACpD,MAAMC,8BAA8B,GAAG,MAAAA,CAAA,KAAY;IAAAF,EAAA;IACjD,IAAI;MACF,IAAIG,eAAe,GAAG,EAAE;MACxB,IAAIC,YAAY,GAAG,CAAC;MAEpB,OAAOA,YAAY,GAAG,CAAC,IAAID,eAAe,CAACE,MAAM,KAAK,CAAC,EAAE;QACvD,MAAMC,MAAM,GAAGR,WAAW,CAACQ,MAAM,KAAK,KAAK,GAAGR,WAAW,CAACQ,MAAM,GAAG,MAAM;QACzE,MAAMC,IAAI,GAAGT,WAAW,CAACS,IAAI,KAAK,KAAK,GAAGT,WAAW,CAACS,IAAI,GAAG,OAAO;QACpE,MAAMC,MAAM,GAAI,wDAAuDV,WAAW,CAACW,IAAK,WAAUH,MAAO,QAAOR,WAAW,CAACY,GAAI,SAAQH,IAAK,EAAC;;QAE9I;QACA,MAAM;UAAEI,IAAI,EAAEC,QAAQ;UAAEC,OAAO,EAAEC;QAAgB,CAAC,GAAGlB,eAAe,CAACY,MAAM,EAAE,EAAE,CAAC;QAEhF,IAAII,QAAQ,IAAIA,QAAQ,CAACG,OAAO,EAAE;UAChCZ,eAAe,GAAGS,QAAQ,CAACG,OAAO,CAACC,MAAM,CAAEC,MAAM,IAAK;YACpD,MAAMC,WAAW,GAAGpB,WAAW,CAACqB,WAAW,CAACC,IAAI,CAAEC,eAAe,IAAKJ,MAAM,CAACK,IAAI,CAACC,QAAQ,CAACF,eAAe,CAAC,CAAC;YAC5G,OAAQH,WAAW,IAAIpB,WAAW,CAACqB,WAAW,CAACd,MAAM,KAAK,CAAC;UAC7D,CAAC,CAAC;UACF,IAAIF,eAAe,CAACE,MAAM,KAAK,CAAC,EAAE;YAChCD,YAAY,EAAE;UAChB;QACF;MACF;MAEA,IAAID,eAAe,CAACE,MAAM,KAAK,CAAC,EAAE;QAChC,MAAMI,IAAI,GAAGX,WAAW,CAACW,IAAI;QAC7B,MAAMH,MAAM,GAAGR,WAAW,CAACQ,MAAM,KAAK,KAAK,GAAGR,WAAW,CAACQ,MAAM,GAAG,MAAM;QACzE,MAAMkB,cAAc,GAAI,sDAAqDf,IAAK,WAAUH,MAAO,EAAC;;QAEpG;QACA,MAAM;UAAEK,IAAI,EAAEc,UAAU;UAAEZ,OAAO,EAAEa;QAAkB,CAAC,GAAG9B,eAAe,CAAC4B,cAAc,EAAE,EAAE,CAAC;QAE5F,IAAIC,UAAU,IAAIA,UAAU,CAACV,OAAO,IAAIU,UAAU,CAACV,OAAO,CAACV,MAAM,GAAG,CAAC,EAAE;UACrE,MAAMsB,aAAa,GAAGF,UAAU,CAACV,OAAO,CAAC,CAAC,CAAC;UAC3CZ,eAAe,CAACyB,IAAI,CAACD,aAAa,CAAC;QACrC,CAAC,MAAM;UACLE,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;QAC1E;MACF;;MAEA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAAC/B,EAAA,CA5CIE,8BAA8B;IAAA,QAWuBN,eAAe,EAmBXA,eAAe;EAAA;EAgB9ED,SAAS,CAAC,MAAM;IACdO,8BAA8B,CAAC,CAAC;EAClC,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,OAAO,CAAE,qDAAsD;AACjE;AAACC,GAAA,CApDQF,+BAA+B;AAsDxC,eAAeA,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}