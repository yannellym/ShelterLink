{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 10;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n\n  // Function to fetch pets based on filters and pagination\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      // Check if there are enough pets in the cache to display 10 per page\n      if (cachedData.length < itemsPerPage) {\n        // Fetch more pets from the API if the cache is running low\n        const filters = Object.keys(selectedFilters).filter(key => selectedFilters[key] !== 'any').map(key => `${key}=${selectedFilters[key]}`).join('&');\n        const endpoint = `http://localhost:3002/api/petfinder?perPage=${itemsPerPage}&page=${currentPageRef.current}&${filters}`;\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data && data.animals) {\n          // Concatenate new pets to the cache\n          setCachedData([...cachedData, ...data.animals]);\n          setSearchResults(data.animals);\n          setTotalPages(Math.ceil(data.pagination.total_count / itemsPerPage));\n          setLoading(false);\n          return;\n        }\n      }\n\n      // If there are enough pets in the cache, use them\n      const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n      const endIndex = startIndex + itemsPerPage;\n      setSearchResults(cachedData.slice(startIndex, endIndex));\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters]);\n  const handlePageChange = page => {\n    currentPageRef.current = page;\n    fetchPets();\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n    fetchPets();\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-horizontal\",\n      children: [Array.from({\n        length: totalPagesToDisplay\n      }, (_, index) => {\n        const page = firstPage + index;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handlePageChange(page);\n            fetchPets();\n          },\n          className: currentPageRef.current === page ? 'active' : '',\n          children: page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this);\n      }), lastPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePageChange(lastPage + 1);\n          fetchPets();\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), totalPages > 1 && renderPaginationButtons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"+8z3zipEghC7Yl/B7VYm7IzKqso=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","currentPageRef","itemsPerPage","cachedData","setCachedData","totalPages","setTotalPages","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchPets","length","filters","Object","keys","filter","key","map","join","endpoint","current","response","fetch","data","json","console","log","animals","Math","ceil","pagination","total_count","startIndex","endIndex","slice","error","message","handlePageChange","page","handleFilterChange","newFilters","renderPetCards","pet","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","children","renderPaginationButtons","visiblePageCount","totalPagesToDisplay","min","firstPage","max","floor","lastPage","className","Array","from","_","index","onClick","onFilterChange","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 10;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch pets based on filters and pagination\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      // Check if there are enough pets in the cache to display 10 per page\n      if (cachedData.length < itemsPerPage) {\n        // Fetch more pets from the API if the cache is running low\n        const filters = Object.keys(selectedFilters)\n          .filter((key) => selectedFilters[key] !== 'any')\n          .map((key) => `${key}=${selectedFilters[key]}`)\n          .join('&');\n\n        const endpoint = `http://localhost:3002/api/petfinder?perPage=${itemsPerPage}&page=${currentPageRef.current}&${filters}`;\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        console.log('API Response:', data);\n\n        if (data && data.animals) {\n          // Concatenate new pets to the cache\n          setCachedData([...cachedData, ...data.animals]);\n          setSearchResults(data.animals);\n          setTotalPages(Math.ceil(data.pagination.total_count / itemsPerPage));\n          setLoading(false);\n          return;\n        }\n      }\n\n      // If there are enough pets in the cache, use them\n      const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n      const endIndex = startIndex + itemsPerPage;\n      setSearchResults(cachedData.slice(startIndex, endIndex));\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters]);\n\n  const handlePageChange = (page) => {\n    currentPageRef.current = page;\n    fetchPets();\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n    fetchPets();\n  };\n\n  \n\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map((pet) => (\n          <PetCard\n            key={pet.id}\n            pet={pet}\n            addToFavorites={addToFavorites}\n            removeFromFavorites={removeFromFavorites}\n            isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n          />\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n\n    return (\n      <div className=\"pagination-horizontal\">\n        {Array.from({ length: totalPagesToDisplay }, (_, index) => {\n          const page = firstPage + index;\n          return (\n            <button\n              key={index}\n              onClick={() => {\n                handlePageChange(page);\n                fetchPets();\n              }}\n              className={currentPageRef.current === page ? 'active' : ''}\n            >\n              {page}\n            </button>\n          );\n        })}\n        {lastPage < totalPages && (\n          <button\n            onClick={() => {\n              handlePageChange(lastPage + 1);\n              fetchPets();\n            }}\n          >\n            ...\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        {totalPages > 1 && renderPaginationButtons()}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}