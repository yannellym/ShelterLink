{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { InternalAPIClass } from './internals/InternalAPI';\nvar logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */function (_super) {\n  __extends(APIClass, _super);\n  function APIClass() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  APIClass.prototype.graphql = function (options, additionalHeaders) {\n    return _super.prototype.graphql.call(this, options, additionalHeaders);\n  };\n  return APIClass;\n}(InternalAPIClass);\nexport { APIClass };\nexport var API = new APIClass(null);\nAmplify.register(API);","map":{"version":3,"names":["Amplify","ConsoleLogger","Logger","InternalAPIClass","logger","APIClass","_super","__extends","prototype","getModuleName","graphql","options","additionalHeaders","call","API","register"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/api/src/API.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AWSAppSyncRealTimeProvider } from '@aws-amplify/pubsub';\nimport { GraphQLOptions, GraphQLResult } from '@aws-amplify/api-graphql';\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport Observable from 'zen-observable-ts';\nimport { GraphQLQuery, GraphQLSubscription } from './types';\nimport { InternalAPIClass } from './internals/InternalAPI';\n\nconst logger = new Logger('API');\n/**\n * @deprecated\n * Use RestApi or GraphQLAPI to reduce your application bundle size\n * Export Cloud Logic APIs\n */\nexport class APIClass extends InternalAPIClass {\n\tpublic getModuleName() {\n\t\treturn 'API';\n\t}\n\n\t/**\n\t * Executes a GraphQL operation\n\t *\n\t * @param options - GraphQL Options\n\t * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config\n\t * @returns An Observable if queryType is 'subscription', else a promise of the graphql result from the query.\n\t */\n\tgraphql<T>(\n\t\toptions: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): T extends GraphQLQuery<T>\n\t\t? Promise<GraphQLResult<T>>\n\t\t: T extends GraphQLSubscription<T>\n\t\t? Observable<{\n\t\t\t\tprovider: AWSAppSyncRealTimeProvider;\n\t\t\t\tvalue: GraphQLResult<T>;\n\t\t  }>\n\t\t: Promise<GraphQLResult<any>> | Observable<object>;\n\tgraphql<T = any>(\n\t\toptions: GraphQLOptions,\n\t\tadditionalHeaders?: { [key: string]: string }\n\t): Promise<GraphQLResult<any>> | Observable<object> {\n\t\treturn super.graphql(options, additionalHeaders);\n\t}\n}\n\nexport const API = new APIClass(null);\nAmplify.register(API);\n"],"mappings":";AAIA,SAASA,OAAO,EAAEC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAGpE,SAASC,gBAAgB,QAAQ,yBAAyB;AAE1D,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAAC,KAAK,CAAC;AAChC;;;;;AAKA,IAAAG,QAAA,0BAAAC,MAAA;EAA8BC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAA9B,SAAAD,SAAA;;EA6BA;EA5BQA,QAAA,CAAAG,SAAA,CAAAC,aAAa,GAApB;IACC,OAAO,KAAK;EACb,CAAC;EAoBDJ,QAAA,CAAAG,SAAA,CAAAE,OAAO,GAAP,UACCC,OAAuB,EACvBC,iBAA6C;IAE7C,OAAON,MAAA,CAAAE,SAAA,CAAME,OAAO,CAAAG,IAAA,OAACF,OAAO,EAAEC,iBAAiB,CAAC;EACjD,CAAC;EACF,OAAAP,QAAC;AAAD,CAAC,CA7B6BF,gBAAgB;;AA+B9C,OAAO,IAAMW,GAAG,GAAG,IAAIT,QAAQ,CAAC,IAAI,CAAC;AACrCL,OAAO,CAACe,QAAQ,CAACD,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}