{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [loading, setLoading] = useState(true); // Set initial loading state to true\n  const currentPageRef = useRef(1); // Use a ref to track the current page\n  const itemsPerPage = 10; // Number of dogs to display per page\n  const minimumPets = 100; // Minimum number of pets to query\n  const fetchInProgress = useRef(false); // To prevent concurrent fetch requests\n  const filterTimeout = useRef(null); // To debounce filter function\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n  const fetchAllPets = useCallback(() => {\n    if (fetchInProgress.current || searchResults.length >= minimumPets) {\n      return;\n    }\n    fetchInProgress.current = true;\n    const endpoint = `http://localhost:3002/api/petfinder?page=${currentPageRef.current}&perPage=${itemsPerPage}`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      console.log('API Data:', data);\n\n      // Combine new results with existing results\n      const updatedResults = [...searchResults, ...(data.animals || [])];\n\n      // Set loading to false when fetching is complete\n      setLoading(false);\n\n      // If we haven't reached the minimumPets, increment the current page\n      if (updatedResults.length < minimumPets) {\n        currentPageRef.current++;\n      }\n      setSearchResults(updatedResults);\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n\n      // Set loading to false on error\n      setLoading(false);\n    }).finally(() => {\n      fetchInProgress.current = false;\n    });\n  }, [searchResults, minimumPets, itemsPerPage]);\n  useEffect(() => {\n    // Fetch all data on component mount\n    fetchAllPets();\n  }, []); // Fetch only on mount\n\n  useEffect(() => {\n    // When filters change, apply filters and update filteredResults\n    applyFilters(searchResults, selectedFilters);\n  }, [selectedFilters, searchResults]);\n  const applyFilters = (data, filters) => {\n    // Apply filters for all filter categories\n    let filteredData = data;\n    for (const filterKey in filters) {\n      var _filters$filterKey;\n      const filterValue = (_filters$filterKey = filters[filterKey]) === null || _filters$filterKey === void 0 ? void 0 : _filters$filterKey.toLowerCase();\n      if (filterValue && filterValue !== 'any') {\n        filteredData = filteredData.filter(pet => {\n          var _pet$filterKey;\n          // Filter logic for the given category\n          const petValue = (_pet$filterKey = pet[filterKey]) === null || _pet$filterKey === void 0 ? void 0 : _pet$filterKey.toLowerCase();\n          return petValue && petValue === filterValue;\n        });\n      }\n    }\n    setFilteredResults(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          selectedFilters: selectedFilters,\n          onFilterChange: newFilters => setSelectedFilters(newFilters),\n          onSearchClick: handleSearchClick // Pass the function here\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: filteredResults.length > 0 ? filteredResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this)) : searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"P5c9wWNxH4QGmtYOTCFSeGSG3Og=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","filteredResults","setFilteredResults","loading","setLoading","currentPageRef","itemsPerPage","minimumPets","fetchInProgress","filterTimeout","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchAllPets","current","length","endpoint","fetch","then","response","json","data","console","log","updatedResults","animals","catch","error","message","finally","applyFilters","filters","filteredData","filterKey","_filters$filterKey","filterValue","toLowerCase","filter","pet","_pet$filterKey","petValue","className","children","onFilterChange","newFilters","onSearchClick","handleSearchClick","fileName","_jsxFileName","lineNumber","columnNumber","map","isFavorite","some","favoritePet","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [loading, setLoading] = useState(true); // Set initial loading state to true\n  const currentPageRef = useRef(1); // Use a ref to track the current page\n  const itemsPerPage = 10; // Number of dogs to display per page\n  const minimumPets = 100; // Minimum number of pets to query\n  const fetchInProgress = useRef(false); // To prevent concurrent fetch requests\n  const filterTimeout = useRef(null); // To debounce filter function\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  const fetchAllPets = useCallback(() => {\n    if (fetchInProgress.current || searchResults.length >= minimumPets) {\n      return;\n    }\n\n    fetchInProgress.current = true;\n\n    const endpoint = `http://localhost:3002/api/petfinder?page=${currentPageRef.current}&perPage=${itemsPerPage}`;\n\n    fetch(endpoint)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('API Data:', data);\n\n        // Combine new results with existing results\n        const updatedResults = [...searchResults, ...(data.animals || [])];\n\n        // Set loading to false when fetching is complete\n        setLoading(false);\n\n        // If we haven't reached the minimumPets, increment the current page\n        if (updatedResults.length < minimumPets) {\n          currentPageRef.current++;\n        }\n\n        setSearchResults(updatedResults);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error.message);\n\n        // Set loading to false on error\n        setLoading(false);\n      })\n      .finally(() => {\n        fetchInProgress.current = false;\n      });\n  }, [searchResults, minimumPets, itemsPerPage]);\n\n  useEffect(() => {\n    // Fetch all data on component mount\n    fetchAllPets();\n  }, []); // Fetch only on mount\n\n  useEffect(() => {\n    // When filters change, apply filters and update filteredResults\n    applyFilters(searchResults, selectedFilters);\n  }, [selectedFilters, searchResults]);\n\n  const applyFilters = (data, filters) => {\n    // Apply filters for all filter categories\n    let filteredData = data;\n\n    for (const filterKey in filters) {\n      const filterValue = filters[filterKey]?.toLowerCase();\n      if (filterValue && filterValue !== 'any') {\n        filteredData = filteredData.filter((pet) => {\n          // Filter logic for the given category\n          const petValue = pet[filterKey]?.toLowerCase();\n          return petValue && petValue === filterValue;\n        });\n      }\n    }\n\n    setFilteredResults(filteredData);\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          {/* Pass setSelectedFilters to the Filter component */}\n          <Filter\n  selectedFilters={selectedFilters}\n  onFilterChange={(newFilters) => setSelectedFilters(newFilters)}\n  onSearchClick={handleSearchClick} // Pass the function here\n/>\n        </div>\n      </div>\n      <div className=\"content\">\n        {!loading ? (\n          <div className=\"pet-card-list\">\n            {filteredResults.length > 0\n              ? filteredResults.map((pet) => (\n                  <PetCard\n                    key={pet.id}\n                    pet={pet}\n                    addToFavorites={addToFavorites}\n                    removeFromFavorites={removeFromFavorites}\n                    isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n                  />\n                ))\n              : searchResults.map((pet) => (\n                  <PetCard\n                    key={pet.id}\n                    pet={pet}\n                    addToFavorites={addToFavorites}\n                    removeFromFavorites={removeFromFavorites}\n                    isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n                  />\n                ))}\n          </div>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}