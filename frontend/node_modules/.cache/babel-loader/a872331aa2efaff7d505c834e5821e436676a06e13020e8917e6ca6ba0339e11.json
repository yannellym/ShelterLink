{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Store the current page\n  const itemsPerPage = 20;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n  useEffect(() => {\n    // Function to fetch all pets and store them in memory\n    const fetchAllPets = async () => {\n      try {\n        const endpoint = 'http://localhost:3002/api/petfinder?perPage=400'; // Fetch all pets in a single request\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        console.log('API Response:', data); // Print the API response\n\n        if (data && data.animals) {\n          setCachedData(data.animals);\n          setSearchResults(data.animals);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      }\n    };\n\n    // Fetch all pets when the component mounts\n    fetchAllPets();\n  }, []);\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n\n    // Apply filters to the cached data and update search results\n    const filteredResults = applyFilters(cachedData, newFilters);\n    setSearchResults(filteredResults);\n    // Reset the current page to the first page when filters change\n    setCurrentPage(1);\n  };\n  const applyFilters = (data, filters) => {\n    return data.filter(pet => {\n      // Flag to check if the pet matches all filters\n      let matchesAllFilters = true;\n      for (const filterKey in filters) {\n        var _filters$filterKey, _pet$filterKey;\n        const filterValue = (_filters$filterKey = filters[filterKey]) === null || _filters$filterKey === void 0 ? void 0 : _filters$filterKey.toLowerCase();\n        const petValue = (_pet$filterKey = pet[filterKey]) === null || _pet$filterKey === void 0 ? void 0 : _pet$filterKey.toLowerCase();\n\n        // If the filter value is \"any,\" skip this filter\n        if (filterValue === 'any') {\n          continue;\n        }\n\n        // Special handling for the \"type\" filter to handle both \"Cat\" and \"Dog\"\n        if (filterKey === 'type') {\n          if (filterValue === 'cat' && petValue !== 'cat') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n\n          if (filterValue === 'dog' && petValue !== 'dog') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else if (filterKey === 'breed') {\n          var _pet$breeds, _pet$breeds$primary;\n          // Handle the \"breed\" filter\n          const primaryBreed = (_pet$breeds = pet.breeds) === null || _pet$breeds === void 0 ? void 0 : (_pet$breeds$primary = _pet$breeds.primary) === null || _pet$breeds$primary === void 0 ? void 0 : _pet$breeds$primary.toLowerCase();\n          if (primaryBreed !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else {\n          // For other filters, compare values directly\n          if (petValue !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        }\n      }\n\n      // If the pet matches all filters, include it in the results\n      return matchesAllFilters;\n    });\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      // Apply filters to the cached data\n      const filteredResults = applyFilters(cachedData, selectedFilters);\n      if (filteredResults.length > 0) {\n        // Calculate startIndex and endIndex based on currentPage and itemsPerPage\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const currentPets = filteredResults.slice(startIndex, endIndex);\n        return currentPets.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const totalPages = Math.ceil(searchResults.length / itemsPerPage); // Calculate totalPages based on filtered results\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-horizontal\",\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(index + 1),\n          className: currentPage === index + 1 ? 'active' : '',\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"xsNAQ9+e9E9Nm9vxrfPRElxpBJw=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","currentPage","setCurrentPage","itemsPerPage","minimumPets","cachedData","setCachedData","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchAllPets","endpoint","response","fetch","data","json","console","log","animals","error","message","handleFilterChange","newFilters","filteredResults","applyFilters","filters","filter","pet","matchesAllFilters","filterKey","_filters$filterKey","_pet$filterKey","filterValue","toLowerCase","petValue","_pet$breeds","_pet$breeds$primary","primaryBreed","breeds","primary","renderPetCards","length","startIndex","endIndex","currentPets","slice","map","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","children","totalPages","Math","ceil","handlePageChange","page","className","onFilterChange","Array","from","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Store the current page\n  const itemsPerPage = 20;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  useEffect(() => {\n    // Function to fetch all pets and store them in memory\n    const fetchAllPets = async () => {\n      try {\n        const endpoint = 'http://localhost:3002/api/petfinder?perPage=400'; // Fetch all pets in a single request\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        console.log('API Response:', data); // Print the API response\n\n        if (data && data.animals) {\n          setCachedData(data.animals);\n          setSearchResults(data.animals);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      }\n    };\n\n    // Fetch all pets when the component mounts\n    fetchAllPets();\n  }, []);\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n\n    // Apply filters to the cached data and update search results\n    const filteredResults = applyFilters(cachedData, newFilters);\n    setSearchResults(filteredResults);\n    // Reset the current page to the first page when filters change\n    setCurrentPage(1);\n  };\n\n  const applyFilters = (data, filters) => {\n    return data.filter((pet) => {\n      // Flag to check if the pet matches all filters\n      let matchesAllFilters = true;\n  \n      for (const filterKey in filters) {\n        const filterValue = filters[filterKey]?.toLowerCase();\n        const petValue = pet[filterKey]?.toLowerCase();\n  \n        // If the filter value is \"any,\" skip this filter\n        if (filterValue === 'any') {\n          continue;\n        }\n  \n        // Special handling for the \"type\" filter to handle both \"Cat\" and \"Dog\"\n        if (filterKey === 'type') {\n          if (filterValue === 'cat' && petValue !== 'cat') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n          if (filterValue === 'dog' && petValue !== 'dog') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else if (filterKey === 'breed') {\n          // Handle the \"breed\" filter\n          const primaryBreed = pet.breeds?.primary?.toLowerCase();\n          if (primaryBreed !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else {\n          // For other filters, compare values directly\n          if (petValue !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        }\n      }\n  \n      // If the pet matches all filters, include it in the results\n      return matchesAllFilters;\n    });\n  };\n  \n  const renderPetCards = () => {\n    if (!loading) {\n      // Apply filters to the cached data\n      const filteredResults = applyFilters(cachedData, selectedFilters);\n\n      if (filteredResults.length > 0) {\n        // Calculate startIndex and endIndex based on currentPage and itemsPerPage\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const currentPets = filteredResults.slice(startIndex, endIndex);\n\n        return currentPets.map((pet) => (\n          <PetCard\n            key={pet.id}\n            pet={pet}\n            addToFavorites={addToFavorites}\n            removeFromFavorites={removeFromFavorites}\n            isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n          />\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  const totalPages = Math.ceil(searchResults.length / itemsPerPage); // Calculate totalPages based on filtered results\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          {/* Pass the handleFilterChange function to the Filter component */}\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {/* Render pet cards based on filtered search results */}\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        <div className=\"pagination-horizontal\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index}\n              onClick={() => handlePageChange(index + 1)}\n              className={currentPage === index + 1 ? 'active' : ''}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}