{"ast":null,"code":"import { __awaiter, __generator, __read, __spread, __values } from \"tslib\";\nimport { OpType } from '../types';\nimport { getIdentifierValue } from './utils';\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nvar ModelMerger = /** @class */function () {\n  function ModelMerger(outbox, ownSymbol) {\n    this.outbox = outbox;\n    this.ownSymbol = ownSymbol;\n  }\n  /**\n   *\n   * @param storage Storage adapter that contains the data.\n   * @param model The model from an outbox mutation.\n   * @returns The type of operation (INSERT/UPDATE/DELETE)\n   */\n  ModelMerger.prototype.merge = function (storage, model, modelDefinition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, mutationsForModel, isDelete;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.outbox.getForModel(storage, model, modelDefinition)];\n          case 1:\n            mutationsForModel = _c.sent();\n            isDelete = model._deleted;\n            if (!(mutationsForModel.length === 0)) return [3 /*break*/, 5];\n            if (!isDelete) return [3 /*break*/, 3];\n            result = OpType.DELETE;\n            return [4 /*yield*/, storage.delete(model, undefined, this.ownSymbol)];\n          case 2:\n            _c.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            return [4 /*yield*/, storage.save(model, undefined, this.ownSymbol)];\n          case 4:\n            _a = __read.apply(void 0, [_c.sent(), 1]), _b = __read(_a[0], 2), result = _b[1];\n            _c.label = 5;\n          case 5:\n            return [2 /*return*/, result];\n        }\n      });\n    });\n  };\n  ModelMerger.prototype.mergePage = function (storage, modelConstructor, items, modelDefinition) {\n    return __awaiter(this, void 0, void 0, function () {\n      var itemsMap, items_1, items_1_1, item, modelId, page;\n      var e_1, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            itemsMap = new Map();\n            try {\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value;\n                modelId = getIdentifierValue(modelDefinition, item);\n                itemsMap.set(modelId, item);\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n            page = __spread(itemsMap.values());\n            return [4 /*yield*/, storage.batchSave(modelConstructor, page, this.ownSymbol)];\n          case 1:\n            return [2 /*return*/, _b.sent()];\n        }\n      });\n    });\n  };\n  return ModelMerger;\n}();\nexport { ModelMerger };","map":{"version":3,"names":["OpType","getIdentifierValue","ModelMerger","outbox","ownSymbol","prototype","merge","storage","model","modelDefinition","getForModel","mutationsForModel","_c","sent","isDelete","_deleted","length","result","DELETE","delete","undefined","save","_a","__read","apply","_b","mergePage","modelConstructor","items","itemsMap","Map","items_1","__values","items_1_1","next","done","item","value","modelId","set","page","__spread","values","batchSave"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/datastore/src/sync/merger.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Storage } from '../storage/storage';\nimport {\n\tModelInstanceMetadata,\n\tOpType,\n\tPersistentModelConstructor,\n\tSchemaModel,\n} from '../types';\nimport { MutationEventOutbox } from './outbox';\nimport { getIdentifierValue } from './utils';\n\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nclass ModelMerger {\n\tconstructor(\n\t\tprivate readonly outbox: MutationEventOutbox,\n\t\tprivate readonly ownSymbol: Symbol\n\t) {}\n\n\t/**\n\t *\n\t * @param storage Storage adapter that contains the data.\n\t * @param model The model from an outbox mutation.\n\t * @returns The type of operation (INSERT/UPDATE/DELETE)\n\t */\n\tpublic async merge<T extends ModelInstanceMetadata>(\n\t\tstorage: Storage,\n\t\tmodel: T,\n\t\tmodelDefinition: SchemaModel\n\t): Promise<OpType> {\n\t\tlet result: OpType;\n\t\tconst mutationsForModel = await this.outbox.getForModel(\n\t\t\tstorage,\n\t\t\tmodel,\n\t\t\tmodelDefinition\n\t\t);\n\n\t\tconst isDelete = model._deleted;\n\n\t\tif (mutationsForModel.length === 0) {\n\t\t\tif (isDelete) {\n\t\t\t\tresult = OpType.DELETE;\n\t\t\t\tawait storage.delete(model, undefined, this.ownSymbol);\n\t\t\t} else {\n\t\t\t\t[[, result]] = await storage.save(model, undefined, this.ownSymbol);\n\t\t\t}\n\t\t}\n\n\t\treturn result!;\n\t}\n\n\tpublic async mergePage(\n\t\tstorage: Storage,\n\t\tmodelConstructor: PersistentModelConstructor<any>,\n\t\titems: ModelInstanceMetadata[],\n\t\tmodelDefinition: SchemaModel\n\t): Promise<[ModelInstanceMetadata, OpType][]> {\n\t\tconst itemsMap: Map<string, ModelInstanceMetadata> = new Map();\n\n\t\tfor (const item of items) {\n\t\t\t// merge items by model id. Latest record for a given id remains.\n\t\t\tconst modelId = getIdentifierValue(modelDefinition, item);\n\n\t\t\titemsMap.set(modelId, item);\n\t\t}\n\n\t\tconst page = [...itemsMap.values()];\n\n\t\treturn await storage.batchSave(modelConstructor, page, this.ownSymbol);\n\t}\n}\n\nexport { ModelMerger };\n"],"mappings":";AAGA,SAECA,MAAM,QAGA,UAAU;AAEjB,SAASC,kBAAkB,QAAQ,SAAS;AAE5C;AACA,IAAAC,WAAA;EACC,SAAAA,YACkBC,MAA2B,EAC3BC,SAAiB;IADjB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,SAAS,GAATA,SAAS;EACxB;EAEH;;;;;;EAMaF,WAAA,CAAAG,SAAA,CAAAC,KAAK,GAAlB,UACCC,OAAgB,EAChBC,KAAQ,EACRC,eAA4B;;;;;;;YAGF,qBAAM,IAAI,CAACN,MAAM,CAACO,WAAW,CACtDH,OAAO,EACPC,KAAK,EACLC,eAAe,CACf;;YAJKE,iBAAiB,GAAGC,EAAA,CAAAC,IAAA,EAIzB;YAEKC,QAAQ,GAAGN,KAAK,CAACO,QAAQ;kBAE3BJ,iBAAiB,CAACK,MAAM,KAAK,CAAC,GAA9B;iBACCF,QAAQ,EAAR;YACHG,MAAM,GAAGjB,MAAM,CAACkB,MAAM;YACtB,qBAAMX,OAAO,CAACY,MAAM,CAACX,KAAK,EAAEY,SAAS,EAAE,IAAI,CAAChB,SAAS,CAAC;;YAAtDQ,EAAA,CAAAC,IAAA,EAAsD;;;YAEvC,qBAAMN,OAAO,CAACc,IAAI,CAACb,KAAK,EAAEY,SAAS,EAAE,IAAI,CAAChB,SAAS,CAAC;;YAAnEkB,EAAA,GAAAC,MAAA,CAAAC,KAAA,UAAAZ,EAAA,CAAAC,IAAA,OAAmE,EAAlEY,EAAA,GAAAF,MAAA,CAAAD,EAAA,OAAU,EAAPL,MAAA,GAAAQ,EAAA,GAAM;;;YAIZ,sBAAOR,MAAO;;;;GACd;EAEYf,WAAA,CAAAG,SAAA,CAAAqB,SAAS,GAAtB,UACCnB,OAAgB,EAChBoB,gBAAiD,EACjDC,KAA8B,EAC9BnB,eAA4B;;;;;;;YAEtBoB,QAAQ,GAAuC,IAAIC,GAAG,EAAE;;cAE9D,KAAmBC,OAAA,GAAAC,QAAA,CAAAJ,KAAK,GAAAK,SAAA,GAAAF,OAAA,CAAAG,IAAA,KAAAD,SAAA,CAAAE,IAAA,EAAAF,SAAA,GAAAF,OAAA,CAAAG,IAAA,IAAE;gBAAfE,IAAI,GAAAH,SAAA,CAAAI,KAAA;gBAERC,OAAO,GAAGrC,kBAAkB,CAACQ,eAAe,EAAE2B,IAAI,CAAC;gBAEzDP,QAAQ,CAACU,GAAG,CAACD,OAAO,EAAEF,IAAI,CAAC;;;;;;;;;;;;;YAGtBI,IAAI,GAAAC,QAAA,CAAOZ,QAAQ,CAACa,MAAM,EAAE,CAAC;YAE5B,qBAAMnC,OAAO,CAACoC,SAAS,CAAChB,gBAAgB,EAAEa,IAAI,EAAE,IAAI,CAACpC,SAAS,CAAC;;YAAtE,sBAAOqB,EAAA,CAAAZ,IAAA,EAA+D;;;;GACtE;EACF,OAAAX,WAAC;AAAD,CAAC,CAzDD;AA2DA,SAASA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}