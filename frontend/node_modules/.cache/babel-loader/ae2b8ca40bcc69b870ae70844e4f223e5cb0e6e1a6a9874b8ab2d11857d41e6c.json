{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Parser');\nexport var parseAWSExports = function (config) {\n  var amplifyConfig = {};\n  // Analytics\n  if (config['aws_mobile_analytics_app_id']) {\n    var Analytics = {\n      AWSPinpoint: {\n        appId: config['aws_mobile_analytics_app_id'],\n        region: config['aws_mobile_analytics_app_region']\n      }\n    };\n    amplifyConfig.Analytics = Analytics;\n  }\n  // Auth\n  if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n    amplifyConfig.Auth = {\n      userPoolId: config['aws_user_pools_id'],\n      userPoolWebClientId: config['aws_user_pools_web_client_id'],\n      region: config['aws_cognito_region'],\n      identityPoolId: config['aws_cognito_identity_pool_id'],\n      identityPoolRegion: config['aws_cognito_region'],\n      mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n      signUpVerificationMethod: config['aws_cognito_sign_up_verification_method'] || 'code'\n    };\n  }\n  // Storage\n  var storageConfig;\n  if (config['aws_user_files_s3_bucket']) {\n    storageConfig = {\n      AWSS3: {\n        bucket: config['aws_user_files_s3_bucket'],\n        region: config['aws_user_files_s3_bucket_region'],\n        dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing']\n      }\n    };\n  } else {\n    storageConfig = config ? config.Storage || config : {};\n  }\n  // Logging\n  if (config['Logging']) {\n    amplifyConfig.Logging = __assign(__assign({}, config['Logging']), {\n      region: config['aws_project_region']\n    });\n  }\n  // Geo\n  if (config['geo']) {\n    amplifyConfig.Geo = Object.assign({}, config.geo);\n    if (config.geo['amazon_location_service']) {\n      amplifyConfig.Geo = {\n        AmazonLocationService: config.geo['amazon_location_service']\n      };\n    }\n  }\n  amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n  amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n  amplifyConfig.Storage = Object.assign({}, storageConfig);\n  amplifyConfig.Logging = Object.assign({}, amplifyConfig.Logging, config.Logging);\n  logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n  return amplifyConfig;\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","ConsoleLogger","Logger","logger","parseAWSExports","config","amplifyConfig","Analytics","AWSPinpoint","appId","region","Auth","userPoolId","userPoolWebClientId","identityPoolId","identityPoolRegion","mandatorySignIn","signUpVerificationMethod","storageConfig","AWSS3","bucket","dangerouslyConnectToHttpEndpointForTesting","Storage","Logging","Geo","geo","AmazonLocationService","debug"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/parseAWSExports.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Parser');\nexport var parseAWSExports = function (config) {\n    var amplifyConfig = {};\n    // Analytics\n    if (config['aws_mobile_analytics_app_id']) {\n        var Analytics = {\n            AWSPinpoint: {\n                appId: config['aws_mobile_analytics_app_id'],\n                region: config['aws_mobile_analytics_app_region'],\n            },\n        };\n        amplifyConfig.Analytics = Analytics;\n    }\n    // Auth\n    if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n        amplifyConfig.Auth = {\n            userPoolId: config['aws_user_pools_id'],\n            userPoolWebClientId: config['aws_user_pools_web_client_id'],\n            region: config['aws_cognito_region'],\n            identityPoolId: config['aws_cognito_identity_pool_id'],\n            identityPoolRegion: config['aws_cognito_region'],\n            mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable',\n            signUpVerificationMethod: config['aws_cognito_sign_up_verification_method'] || 'code',\n        };\n    }\n    // Storage\n    var storageConfig;\n    if (config['aws_user_files_s3_bucket']) {\n        storageConfig = {\n            AWSS3: {\n                bucket: config['aws_user_files_s3_bucket'],\n                region: config['aws_user_files_s3_bucket_region'],\n                dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing'],\n            },\n        };\n    }\n    else {\n        storageConfig = config ? config.Storage || config : {};\n    }\n    // Logging\n    if (config['Logging']) {\n        amplifyConfig.Logging = __assign(__assign({}, config['Logging']), { region: config['aws_project_region'] });\n    }\n    // Geo\n    if (config['geo']) {\n        amplifyConfig.Geo = Object.assign({}, config.geo);\n        if (config.geo['amazon_location_service']) {\n            amplifyConfig.Geo = {\n                AmazonLocationService: config.geo['amazon_location_service'],\n            };\n        }\n    }\n    amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n    amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n    amplifyConfig.Storage = Object.assign({}, storageConfig);\n    amplifyConfig.Logging = Object.assign({}, amplifyConfig.Logging, config.Logging);\n    logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n    return amplifyConfig;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}