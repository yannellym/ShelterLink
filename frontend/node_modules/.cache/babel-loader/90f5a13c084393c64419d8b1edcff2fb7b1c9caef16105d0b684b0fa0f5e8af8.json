{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Drop-in replacement for fast-xml-parser's XmlParser class used in the AWS SDK S3 client XML deserializer. This\n * implementation is not tested against the full xml conformance test suite. It is only tested against the XML responses\n * from S3. This implementation requires the `DOMParser` class in the runtime.\n */\nexport var parser = {\n  parse: function (xmlStr) {\n    var domParser = new DOMParser();\n    var xml = domParser.parseFromString(xmlStr, 'text/xml');\n    var parsedObj = parseXmlNode(xml);\n    var rootKey = Object.keys(parsedObj)[0];\n    return parsedObj[rootKey];\n  }\n};\nvar parseXmlNode = function (node) {\n  var _a;\n  var _b, _c;\n  if (isDocumentNode(node)) {\n    return _a = {}, _a[node.documentElement.nodeName] = parseXmlNode(node.documentElement), _a;\n  }\n  if (node.nodeType === Node.TEXT_NODE) {\n    return (_b = node.nodeValue) === null || _b === void 0 ? void 0 : _b.trim();\n  }\n  if (isElementNode(node)) {\n    // Node like <Location>foo</Location> will be converted to { Location: 'foo' }\n    // instead of { Location: { '#text': 'foo' } }.\n    if (isTextOnlyElementNode(node)) {\n      return (_c = node.childNodes[0]) === null || _c === void 0 ? void 0 : _c.nodeValue;\n    }\n    var nodeValue = {};\n    // convert attributes\n    for (var i = 0; i < node.attributes.length; i++) {\n      var attr = node.attributes[i];\n      if (!isNamespaceAttributeName(attr.nodeName)) {\n        nodeValue[attr.nodeName] = attr.nodeValue;\n      }\n    }\n    // convert child nodes\n    if (node.children.length > 0) {\n      for (var i = 0; i < node.children.length; i++) {\n        var child = node.children[i];\n        var childValue = parseXmlNode(child);\n        if (childValue === undefined) {\n          continue;\n        }\n        var childName = child.nodeName;\n        if (nodeValue[childName] === undefined) {\n          nodeValue[childName] = childValue;\n        } else if (Array.isArray(nodeValue[childName])) {\n          nodeValue[childName].push(childValue);\n        } else {\n          nodeValue[childName] = [nodeValue[childName], childValue];\n        }\n      }\n    }\n    // Return empty element node as empty string instead of `{}`, which is the default behavior of fast-xml-parser.\n    return Object.keys(nodeValue).length === 0 ? '' : nodeValue;\n  }\n};\nvar isElementNode = function (node) {\n  return node.nodeType === Node.ELEMENT_NODE;\n};\nvar isDocumentNode = function (node) {\n  return node.nodeType === Node.DOCUMENT_NODE;\n};\nvar isTextOnlyElementNode = function (node) {\n  var _a;\n  return hasOnlyNamespaceAttributes(node) && node.children.length === 0 && ((_a = node.firstChild) === null || _a === void 0 ? void 0 : _a.nodeType) === Node.TEXT_NODE;\n};\nvar hasOnlyNamespaceAttributes = function (node) {\n  for (var i = 0; i < node.attributes.length; i++) {\n    var attr = node.attributes[i];\n    if (!isNamespaceAttributeName(attr.nodeName)) {\n      return false;\n    }\n  }\n  return true;\n};\nvar isNamespaceAttributeName = function (name) {\n  return name === 'xmlns' || name.startsWith('xmlns:');\n};","map":{"version":3,"names":["parser","parse","xmlStr","domParser","DOMParser","xml","parseFromString","parsedObj","parseXmlNode","rootKey","Object","keys","node","_a","_b","_c","isDocumentNode","documentElement","nodeName","nodeType","Node","TEXT_NODE","nodeValue","trim","isElementNode","isTextOnlyElementNode","childNodes","i","attributes","length","attr","isNamespaceAttributeName","children","child","childValue","undefined","childName","Array","isArray","push","ELEMENT_NODE","DOCUMENT_NODE","hasOnlyNamespaceAttributes","firstChild","name","startsWith"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/storage/lib-esm/AwsClients/S3/runtime/xmlParser/dom.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Drop-in replacement for fast-xml-parser's XmlParser class used in the AWS SDK S3 client XML deserializer. This\n * implementation is not tested against the full xml conformance test suite. It is only tested against the XML responses\n * from S3. This implementation requires the `DOMParser` class in the runtime.\n */\nexport var parser = {\n    parse: function (xmlStr) {\n        var domParser = new DOMParser();\n        var xml = domParser.parseFromString(xmlStr, 'text/xml');\n        var parsedObj = parseXmlNode(xml);\n        var rootKey = Object.keys(parsedObj)[0];\n        return parsedObj[rootKey];\n    },\n};\nvar parseXmlNode = function (node) {\n    var _a;\n    var _b, _c;\n    if (isDocumentNode(node)) {\n        return _a = {},\n            _a[node.documentElement.nodeName] = parseXmlNode(node.documentElement),\n            _a;\n    }\n    if (node.nodeType === Node.TEXT_NODE) {\n        return (_b = node.nodeValue) === null || _b === void 0 ? void 0 : _b.trim();\n    }\n    if (isElementNode(node)) {\n        // Node like <Location>foo</Location> will be converted to { Location: 'foo' }\n        // instead of { Location: { '#text': 'foo' } }.\n        if (isTextOnlyElementNode(node)) {\n            return (_c = node.childNodes[0]) === null || _c === void 0 ? void 0 : _c.nodeValue;\n        }\n        var nodeValue = {};\n        // convert attributes\n        for (var i = 0; i < node.attributes.length; i++) {\n            var attr = node.attributes[i];\n            if (!isNamespaceAttributeName(attr.nodeName)) {\n                nodeValue[attr.nodeName] = attr.nodeValue;\n            }\n        }\n        // convert child nodes\n        if (node.children.length > 0) {\n            for (var i = 0; i < node.children.length; i++) {\n                var child = node.children[i];\n                var childValue = parseXmlNode(child);\n                if (childValue === undefined) {\n                    continue;\n                }\n                var childName = child.nodeName;\n                if (nodeValue[childName] === undefined) {\n                    nodeValue[childName] = childValue;\n                }\n                else if (Array.isArray(nodeValue[childName])) {\n                    nodeValue[childName].push(childValue);\n                }\n                else {\n                    nodeValue[childName] = [nodeValue[childName], childValue];\n                }\n            }\n        }\n        // Return empty element node as empty string instead of `{}`, which is the default behavior of fast-xml-parser.\n        return Object.keys(nodeValue).length === 0 ? '' : nodeValue;\n    }\n};\nvar isElementNode = function (node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nvar isDocumentNode = function (node) {\n    return node.nodeType === Node.DOCUMENT_NODE;\n};\nvar isTextOnlyElementNode = function (node) {\n    var _a;\n    return hasOnlyNamespaceAttributes(node) &&\n        node.children.length === 0 &&\n        ((_a = node.firstChild) === null || _a === void 0 ? void 0 : _a.nodeType) === Node.TEXT_NODE;\n};\nvar hasOnlyNamespaceAttributes = function (node) {\n    for (var i = 0; i < node.attributes.length; i++) {\n        var attr = node.attributes[i];\n        if (!isNamespaceAttributeName(attr.nodeName)) {\n            return false;\n        }\n    }\n    return true;\n};\nvar isNamespaceAttributeName = function (name) {\n    return name === 'xmlns' || name.startsWith('xmlns:');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}