{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign } from \"tslib\";\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractInteractionsProvider');\nvar AbstractInteractionsProvider = /** @class */function () {\n  function AbstractInteractionsProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._config = options;\n  }\n  AbstractInteractionsProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n    this._config = __assign(__assign({}, this._config), config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n  AbstractInteractionsProvider.prototype.getCategory = function () {\n    return 'Interactions';\n  };\n  Object.defineProperty(AbstractInteractionsProvider.prototype, \"options\", {\n    get: function () {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractInteractionsProvider;\n}();\nexport { AbstractInteractionsProvider };","map":{"version":3,"names":["ConsoleLogger","Logger","logger","AbstractInteractionsProvider","options","_config","prototype","configure","config","__assign","debug","getProviderName","getCategory","Object","defineProperty","get"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/interactions/src/Providers/InteractionsProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n\tInteractionsProvider,\n\tInteractionsOptions,\n\tInteractionsResponse,\n} from '../types';\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AbstractInteractionsProvider');\n\nexport abstract class AbstractInteractionsProvider\n\timplements InteractionsProvider {\n\tprotected _config: InteractionsOptions;\n\n\tconstructor(options: InteractionsOptions = {}) {\n\t\tthis._config = options;\n\t}\n\n\tconfigure(config: InteractionsOptions = {}): InteractionsOptions {\n\t\tthis._config = { ...this._config, ...config };\n\n\t\tlogger.debug(`configure ${this.getProviderName()}`, this._config);\n\n\t\treturn this.options;\n\t}\n\n\tgetCategory() {\n\t\treturn 'Interactions';\n\t}\n\n\tabstract getProviderName(): string;\n\n\tprotected get options(): InteractionsOptions {\n\t\treturn { ...this._config };\n\t}\n\n\tpublic abstract sendMessage(\n\t\tbotname: string,\n\t\tmessage: string | Object\n\t): Promise<object>;\n\n\tpublic abstract onComplete(\n\t\tbotname: string,\n\t\tcallback: (err: any, confirmation: InteractionsResponse) => void\n\t);\n}\n"],"mappings":"AAAA;AACA;;AAQA,SAASA,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAE3D,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,8BAA8B,CAAC;AAEzD,IAAAE,4BAAA;EAIC,SAAAA,6BAAYC,OAAiC;IAAjC,IAAAA,OAAA;MAAAA,OAAA,KAAiC;IAAA;IAC5C,IAAI,CAACC,OAAO,GAAGD,OAAO;EACvB;EAEAD,4BAAA,CAAAG,SAAA,CAAAC,SAAS,GAAT,UAAUC,MAAgC;IAAhC,IAAAA,MAAA;MAAAA,MAAA,KAAgC;IAAA;IACzC,IAAI,CAACH,OAAO,GAAAI,QAAA,CAAAA,QAAA,KAAQ,IAAI,CAACJ,OAAO,GAAKG,MAAM,CAAE;IAE7CN,MAAM,CAACQ,KAAK,CAAC,eAAa,IAAI,CAACC,eAAe,EAAI,EAAE,IAAI,CAACN,OAAO,CAAC;IAEjE,OAAO,IAAI,CAACD,OAAO;EACpB,CAAC;EAEDD,4BAAA,CAAAG,SAAA,CAAAM,WAAW,GAAX;IACC,OAAO,cAAc;EACtB,CAAC;EAIDC,MAAA,CAAAC,cAAA,CAAcX,4BAAA,CAAAG,SAAA,WAAO;SAArB,SAAAS,CAAA;MACC,OAAAN,QAAA,KAAY,IAAI,CAACJ,OAAO;IACzB,CAAC;;;;EAWF,OAAAF,4BAAC;AAAD,CAAC,CAnCD"},"metadata":{},"sourceType":"module","externalDependencies":[]}