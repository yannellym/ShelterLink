{"ast":null,"code":"import { __awaiter, __generator, __rest } from \"tslib\";\nexport var loggerMiddleware = function () {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog, response, _a, $metadata, outputWithoutMetadata;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              clientName = context.clientName, commandName = context.commandName, inputFilterSensitiveLog = context.inputFilterSensitiveLog, logger = context.logger, outputFilterSensitiveLog = context.outputFilterSensitiveLog;\n              return [4 /*yield*/, next(args)];\n            case 1:\n              response = _b.sent();\n              if (!logger) {\n                return [2 /*return*/, response];\n              }\n              if (typeof logger.info === \"function\") {\n                _a = response.output, $metadata = _a.$metadata, outputWithoutMetadata = __rest(_a, [\"$metadata\"]);\n                logger.info({\n                  clientName: clientName,\n                  commandName: commandName,\n                  input: inputFilterSensitiveLog(args.input),\n                  output: outputFilterSensitiveLog(outputWithoutMetadata),\n                  metadata: $metadata\n                });\n              }\n              return [2 /*return*/, response];\n          }\n        });\n      });\n    };\n  };\n};\nexport var loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport var getLoggerPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"names":["loggerMiddleware","next","context","args","__awaiter","clientName","commandName","inputFilterSensitiveLog","logger","outputFilterSensitiveLog","response","_b","sent","info","_a","output","$metadata","outputWithoutMetadata","__rest","input","metadata","loggerMiddlewareOptions","name","tags","step","override","getLoggerPlugin","options","applyToStack","clientStack","add"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/middleware-logger/src/loggerMiddleware.ts"],"sourcesContent":["import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  HandlerExecutionContext,\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nexport const loggerMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: InitializeHandler<any, Output>,\n  context: HandlerExecutionContext\n): InitializeHandler<any, Output> => async (\n  args: InitializeHandlerArguments<any>\n): Promise<InitializeHandlerOutput<Output>> => {\n  const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n\n  const response = await next(args);\n\n  if (!logger) {\n    return response;\n  }\n\n  if (typeof logger.info === \"function\") {\n    const { $metadata, ...outputWithoutMetadata } = response.output;\n    logger.info({\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n      metadata: $metadata,\n    });\n  }\n\n  return response;\n};\n\nexport const loggerMiddlewareOptions: InitializeHandlerOptions & AbsoluteLocation = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getLoggerPlugin = (options: any): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  },\n});\n"],"mappings":";AAYA,OAAO,IAAMA,gBAAgB,GAAG,SAAAA,CAAA;EAAM,iBACpCC,IAAoC,EACpCC,OAAgC;IACG,iBACnCC,IAAqC;MAAA,OAAAC,SAAA;;;;;cAE7BC,UAAU,GAA6EH,OAAO,CAAAG,UAApF,EAAEC,WAAW,GAAgEJ,OAAO,CAAAI,WAAvE,EAAEC,uBAAuB,GAAuCL,OAAO,CAAAK,uBAA9C,EAAEC,MAAM,GAA+BN,OAAO,CAAAM,MAAtC,EAAEC,wBAAwB,GAAKP,OAAO,CAAAO,wBAAZ;cAEzE,qBAAMR,IAAI,CAACE,IAAI,CAAC;;cAA3BO,QAAQ,GAAGC,EAAA,CAAAC,IAAA,EAAgB;cAEjC,IAAI,CAACJ,MAAM,EAAE;gBACX,sBAAOE,QAAQ;;cAGjB,IAAI,OAAOF,MAAM,CAACK,IAAI,KAAK,UAAU,EAAE;gBAC/BC,EAAA,GAA0CJ,QAAQ,CAACK,MAAM,EAAvDC,SAAS,GAAAF,EAAA,CAAAE,SAAA,EAAKC,qBAAqB,GAAAC,MAAA,CAAAJ,EAAA,EAArC,aAAuC,CAAF;gBAC3CN,MAAM,CAACK,IAAI,CAAC;kBACVR,UAAU,EAAAA,UAAA;kBACVC,WAAW,EAAAA,WAAA;kBACXa,KAAK,EAAEZ,uBAAuB,CAACJ,IAAI,CAACgB,KAAK,CAAC;kBAC1CJ,MAAM,EAAEN,wBAAwB,CAACQ,qBAAqB,CAAC;kBACvDG,QAAQ,EAAEJ;iBACX,CAAC;;cAGJ,sBAAON,QAAQ;;;;KAChB;EAvBoC,CAuBpC;AA1BqC,CA0BrC;AAED,OAAO,IAAMW,uBAAuB,GAAgD;EAClFC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,CAAC,QAAQ,CAAC;EAChBC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE;CACX;AAED;AACA,OAAO,IAAMC,eAAe,GAAG,SAAAA,CAACC,OAAY;EAA0B,OAAC;IACrEC,YAAY,EAAE,SAAAA,CAACC,WAAW;MACxBA,WAAW,CAACC,GAAG,CAAC9B,gBAAgB,EAAE,EAAEqB,uBAAuB,CAAC;IAC9D;GACD;AAJqE,CAIpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}