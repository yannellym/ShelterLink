{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64ToArrayBuffer, gzipDecompressToString } from './utils';\nexport var unGzipBase64AsJson = function (gzipBase64) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var decodedArrayBuffer, objString, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (typeof gzipBase64 === 'undefined') return [2 /*return*/, undefined];\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n          decodedArrayBuffer = base64ToArrayBuffer(gzipBase64);\n          return [4 /*yield*/, gzipDecompressToString(decodedArrayBuffer)];\n        case 2:\n          objString = _a.sent();\n          return [2 /*return*/, JSON.parse(objString)];\n        case 3:\n          error_1 = _a.sent();\n          return [2 /*return*/, Promise.reject('unable to decode and decompress ' + error_1)];\n        case 4:\n          return [2 /*return*/];\n      }\n    });\n  });\n};","map":{"version":3,"names":["base64ToArrayBuffer","gzipDecompressToString","unGzipBase64AsJson","gzipBase64","__awaiter","undefined","decodedArrayBuffer","objString","_a","sent","JSON","parse","Promise","reject","error_1"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/interactions/src/Providers/AWSLexProviderHelper/commonUtils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { base64ToArrayBuffer, gzipDecompressToString } from './utils';\n\nexport const unGzipBase64AsJson = async (gzipBase64: string | undefined) => {\n\tif (typeof gzipBase64 === 'undefined') return undefined;\n\n\ttry {\n\t\tconst decodedArrayBuffer = base64ToArrayBuffer(gzipBase64);\n\n\t\tconst objString: string = await gzipDecompressToString(decodedArrayBuffer);\n\n\t\treturn JSON.parse(objString);\n\t} catch (error) {\n\t\treturn Promise.reject('unable to decode and decompress ' + error);\n\t}\n};\n"],"mappings":";AAAA;AACA;AACA,SAASA,mBAAmB,EAAEC,sBAAsB,QAAQ,SAAS;AAErE,OAAO,IAAMC,kBAAkB,GAAG,SAAAA,CAAOC,UAA8B;EAAA,OAAAC,SAAA;;;;;UACtE,IAAI,OAAOD,UAAU,KAAK,WAAW,EAAE,sBAAOE,SAAS;;;;UAGhDC,kBAAkB,GAAGN,mBAAmB,CAACG,UAAU,CAAC;UAEhC,qBAAMF,sBAAsB,CAACK,kBAAkB,CAAC;;UAApEC,SAAS,GAAWC,EAAA,CAAAC,IAAA,EAAgD;UAE1E,sBAAOC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;;;UAE5B,sBAAOK,OAAO,CAACC,MAAM,CAAC,kCAAkC,GAAGC,OAAK,CAAC;;;;;;CAElE"},"metadata":{},"sourceType":"module","externalDependencies":[]}