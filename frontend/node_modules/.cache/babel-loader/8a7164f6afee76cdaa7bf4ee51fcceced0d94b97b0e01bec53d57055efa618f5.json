{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 12; // Change this to the desired number of pets per page\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      const filters = Object.keys(selectedFilters).filter(key => selectedFilters[key] !== 'any').map(key => `${key}=${selectedFilters[key]}`).join('&');\n      const endpoint = `http://localhost:3002/api/petfinder?perPage=${itemsPerPage}&page=${currentPageRef.current}&${filters}`;\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      console.log('API Response:', data);\n      if (data && data.animals) {\n        setCachedData(data.animals);\n        setTotalPages(Math.ceil(data.pagination.total_count / itemsPerPage));\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters]);\n  const handlePageChange = page => {\n    currentPageRef.current = page;\n    updateSearchResults(); // Update search results based on cached data\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n    fetchPets();\n  };\n\n  // Function to update searchResults based on currentPage and cachedData\n  const updateSearchResults = () => {\n    const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const petsToDisplay = cachedData.slice(startIndex, endIndex);\n    setSearchResults(petsToDisplay);\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pet-card-container\",\n          children: /*#__PURE__*/_jsxDEV(PetCard, {\n            pet: pet,\n            addToFavorites: addToFavorites,\n            removeFromFavorites: removeFromFavorites,\n            isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-horizontal\",\n      children: [Array.from({\n        length: totalPagesToDisplay\n      }, (_, index) => {\n        const page = firstPage + index;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handlePageChange(page);\n          },\n          className: currentPageRef.current === page ? 'active' : '',\n          children: page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      }), lastPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePageChange(lastPage + 1);\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), totalPages > 1 && renderPaginationButtons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"+8z3zipEghC7Yl/B7VYm7IzKqso=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PetCard","Filter","Link","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","currentPageRef","itemsPerPage","minimumPets","cachedData","setCachedData","totalPages","setTotalPages","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchPets","filters","Object","keys","filter","key","map","join","endpoint","current","response","fetch","data","json","console","log","animals","Math","ceil","pagination","total_count","error","message","handlePageChange","page","updateSearchResults","handleFilterChange","newFilters","startIndex","endIndex","petsToDisplay","slice","renderPetCards","length","pet","className","children","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","renderPaginationButtons","visiblePageCount","totalPagesToDisplay","min","firstPage","max","floor","lastPage","Array","from","_","index","onClick","onFilterChange","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { Link } from 'react-router-dom';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 12; // Change this to the desired number of pets per page\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      const filters = Object.keys(selectedFilters)\n        .filter((key) => selectedFilters[key] !== 'any')\n        .map((key) => `${key}=${selectedFilters[key]}`)\n        .join('&');\n\n      const endpoint = `http://localhost:3002/api/petfinder?perPage=${itemsPerPage}&page=${currentPageRef.current}&${filters}`;\n      const response = await fetch(endpoint);\n      const data = await response.json();\n\n      console.log('API Response:', data);\n\n      if (data && data.animals) {\n        setCachedData(data.animals);\n        setTotalPages(Math.ceil(data.pagination.total_count / itemsPerPage));\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters]);\n\n  const handlePageChange = (page) => {\n    currentPageRef.current = page;\n    updateSearchResults(); // Update search results based on cached data\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n    fetchPets();\n  };\n\n  // Function to update searchResults based on currentPage and cachedData\n  const updateSearchResults = () => {\n    const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const petsToDisplay = cachedData.slice(startIndex, endIndex);\n\n    setSearchResults(petsToDisplay);\n  };\n\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map((pet) => (\n          <div key={pet.id} className=\"pet-card-container\">\n            <PetCard\n              pet={pet}\n              addToFavorites={addToFavorites}\n              removeFromFavorites={removeFromFavorites}\n              isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n            />\n          </div>\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n\n    return (\n      <div className=\"pagination-horizontal\">\n        {Array.from({ length: totalPagesToDisplay }, (_, index) => {\n          const page = firstPage + index;\n          return (\n            <button\n              key={index}\n              onClick={() => {\n                handlePageChange(page);\n              }}\n              className={currentPageRef.current === page ? 'active' : ''}\n            >\n              {page}\n            </button>\n          );\n        })}\n        {lastPage < totalPages && (\n          <button\n            onClick={() => {\n              handlePageChange(lastPage + 1);\n            }}\n          >\n            ...\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        {totalPages > 1 && renderPaginationButtons()}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}