{"ast":null,"code":"import { __extends } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { isInterpretTextInput } from '../Predictions';\nvar AbstractInterpretPredictionsProvider = /** @class */function (_super) {\n  __extends(AbstractInterpretPredictionsProvider, _super);\n  function AbstractInterpretPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AbstractInterpretPredictionsProvider.prototype.getCategory = function () {\n    return 'Interpret';\n  };\n  AbstractInterpretPredictionsProvider.prototype.interpret = function (input) {\n    if (isInterpretTextInput(input)) {\n      return this.interpretText(input);\n    }\n  };\n  AbstractInterpretPredictionsProvider.prototype.interpretText = function (input) {\n    throw new Error('interpretText is not implement by this provider');\n  };\n  return AbstractInterpretPredictionsProvider;\n}(AbstractPredictionsProvider);\nexport { AbstractInterpretPredictionsProvider };","map":{"version":3,"names":["AbstractPredictionsProvider","isInterpretTextInput","AbstractInterpretPredictionsProvider","_super","__extends","prototype","getCategory","interpret","input","interpretText","Error"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/predictions/src/types/Providers/AbstractInterpretPredictionsProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport {\n\tInterpretTextInput,\n\tInterpretTextOutput,\n\tisInterpretTextInput,\n} from '../Predictions';\n\nexport abstract class AbstractInterpretPredictionsProvider extends AbstractPredictionsProvider {\n\tgetCategory(): string {\n\t\treturn 'Interpret';\n\t}\n\n\tinterpret(input: InterpretTextInput): Promise<InterpretTextOutput> {\n\t\tif (isInterpretTextInput(input)) {\n\t\t\treturn this.interpretText(input);\n\t\t}\n\t}\n\n\tprotected interpretText(\n\t\tinput: InterpretTextInput\n\t): Promise<InterpretTextOutput> {\n\t\tthrow new Error('interpretText is not implement by this provider');\n\t}\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,2BAA2B,QAAQ,+BAA+B;AAC3E,SAGCC,oBAAoB,QACd,gBAAgB;AAEvB,IAAAC,oCAAA,0BAAAC,MAAA;EAAmEC,SAAA,CAAAF,oCAAA,EAAAC,MAAA;EAAnE,SAAAD,qCAAA;;EAgBA;EAfCA,oCAAA,CAAAG,SAAA,CAAAC,WAAW,GAAX;IACC,OAAO,WAAW;EACnB,CAAC;EAEDJ,oCAAA,CAAAG,SAAA,CAAAE,SAAS,GAAT,UAAUC,KAAyB;IAClC,IAAIP,oBAAoB,CAACO,KAAK,CAAC,EAAE;MAChC,OAAO,IAAI,CAACC,aAAa,CAACD,KAAK,CAAC;;EAElC,CAAC;EAESN,oCAAA,CAAAG,SAAA,CAAAI,aAAa,GAAvB,UACCD,KAAyB;IAEzB,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;EACnE,CAAC;EACF,OAAAR,oCAAC;AAAD,CAAC,CAhBkEF,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}