{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Category, ClientDevice, Credentials, getAmplifyUserAgent, InAppMessagingAction, PushNotificationAction, StorageHelper, transferKeyToUpperCase } from '@aws-amplify/core';\nimport { Cache } from '@aws-amplify/cache';\nimport { putEvents, updateEndpoint } from '@aws-amplify/core/internals/aws-clients/pinpoint';\nimport { v4 as uuid } from 'uuid';\nvar AWSPinpointProviderCommon = /** @class */function () {\n  function AWSPinpointProviderCommon(logger) {\n    var _this = this;\n    var _a;\n    this.config = {};\n    this.endpointInitialized = false;\n    this.initialized = false;\n    this.identifyUser = function (userId, userInfo) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var err_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this.initialized) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.init()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              _a.trys.push([2, 4,, 5]);\n              return [4 /*yield*/, this.updateEndpoint(userId, userInfo)];\n            case 3:\n              _a.sent();\n              return [3 /*break*/, 5];\n            case 4:\n              err_1 = _a.sent();\n              this.logger.error('Error identifying user', err_1);\n              throw err_1;\n            case 5:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.init = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, endpointId, storage, providerName, _b, err_2;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.config, endpointId = _a.endpointId, storage = _a.storage;\n              providerName = this.getProviderName();\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 6,, 7]);\n              if (!(typeof storage.sync === 'function')) return [3 /*break*/, 3];\n              return [4 /*yield*/, storage.sync()];\n            case 2:\n              _c.sent();\n              _c.label = 3;\n            case 3:\n              if (!!endpointId) return [3 /*break*/, 5];\n              _b = this.config;\n              return [4 /*yield*/, this.getEndpointId()];\n            case 4:\n              _b.endpointId = _c.sent();\n              _c.label = 5;\n            case 5:\n              this.initialized = true;\n              return [3 /*break*/, 7];\n            case 6:\n              err_2 = _c.sent();\n              this.logger.error(\"Failed to initialize \" + providerName, err_2);\n              return [3 /*break*/, 7];\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.getUserAgentValue = function () {\n      var customUserAgentDetails;\n      if (_this.getSubCategory() === 'PushNotification') {\n        customUserAgentDetails = {\n          category: Category.PushNotification,\n          action: PushNotificationAction.None\n        };\n      } else {\n        customUserAgentDetails = {\n          category: Category.InAppMessaging,\n          action: InAppMessagingAction.None\n        };\n      }\n      return getAmplifyUserAgent(customUserAgentDetails);\n    };\n    this.recordAnalyticsEvent = function (event) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b, appId, credentials, endpointId, region, input, err_3;\n        var _c, _d;\n        return __generator(this, function (_e) {\n          switch (_e.label) {\n            case 0:\n              // Update credentials\n              _a = this.config;\n              return [4 /*yield*/, this.getCredentials()];\n            case 1:\n              // Update credentials\n              _a.credentials = _e.sent();\n              // Assert required configuration properties to make `putEvents` request are present\n              this.assertNotEmptyConfiguration();\n              _b = this.config, appId = _b.appId, credentials = _b.credentials, endpointId = _b.endpointId, region = _b.region;\n              _e.label = 2;\n            case 2:\n              _e.trys.push([2, 4,, 5]);\n              input = {\n                ApplicationId: appId,\n                EventsRequest: {\n                  BatchItem: (_c = {}, _c[endpointId] = {\n                    Endpoint: {},\n                    Events: (_d = {}, _d[uuid()] = event, _d)\n                  }, _c)\n                }\n              };\n              this.logger.debug('recording analytics event');\n              return [4 /*yield*/, putEvents({\n                credentials: credentials,\n                region: region,\n                userAgentValue: this.getUserAgentValue()\n              }, input)];\n            case 3:\n              _e.sent();\n              return [3 /*break*/, 5];\n            case 4:\n              err_3 = _e.sent();\n              this.logger.error('Error recording analytics event', err_3);\n              throw err_3;\n            case 5:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.updateEndpoint = function (userId, userInfo) {\n      if (userId === void 0) {\n        userId = null;\n      }\n      if (userInfo === void 0) {\n        userInfo = null;\n      }\n      return __awaiter(_this, void 0, void 0, function () {\n        var credentials, credentialsUpdated, _a, appId, endpointId, _b, endpointInfo, region, _c, address, attributes, demographic, location_1, metrics, optOut, _d, appVersion, make, model, platform, version, input, err_4;\n        var _this = this;\n        var _e;\n        return __generator(this, function (_f) {\n          switch (_f.label) {\n            case 0:\n              return [4 /*yield*/, this.getCredentials()];\n            case 1:\n              credentials = _f.sent();\n              credentialsUpdated = !this.config.credentials || Object.keys(credentials).some(function (key) {\n                return credentials[key] !== _this.config.credentials[key];\n              });\n              // If endpoint is already initialized, and nothing else is changing, just early return\n              if (this.endpointInitialized && !credentialsUpdated && !userId && !userInfo) {\n                return [2 /*return*/];\n              }\n              // Update credentials\n              this.config.credentials = credentials;\n              // Assert required configuration properties to make `updateEndpoint` request are present\n              this.assertNotEmptyConfiguration();\n              _a = this.config, appId = _a.appId, endpointId = _a.endpointId, _b = _a.endpointInfo, endpointInfo = _b === void 0 ? {} : _b, region = _a.region;\n              _f.label = 2;\n            case 2:\n              _f.trys.push([2, 4,, 5]);\n              _c = userInfo !== null && userInfo !== void 0 ? userInfo : {}, address = _c.address, attributes = _c.attributes, demographic = _c.demographic, location_1 = _c.location, metrics = _c.metrics, optOut = _c.optOut;\n              _d = this.clientInfo, appVersion = _d.appVersion, make = _d.make, model = _d.model, platform = _d.platform, version = _d.version;\n              input = {\n                ApplicationId: appId,\n                EndpointId: endpointId,\n                EndpointRequest: {\n                  RequestId: uuid(),\n                  EffectiveDate: new Date().toISOString(),\n                  ChannelType: endpointInfo.channelType,\n                  Address: address !== null && address !== void 0 ? address : endpointInfo.address,\n                  Attributes: __assign(__assign({}, endpointInfo.attributes), attributes),\n                  Demographic: __assign({\n                    AppVersion: appVersion,\n                    Make: make,\n                    Model: model,\n                    ModelVersion: version,\n                    Platform: platform\n                  }, transferKeyToUpperCase(__assign(__assign({}, endpointInfo.demographic), demographic))),\n                  Location: transferKeyToUpperCase(__assign(__assign({}, endpointInfo.location), location_1)),\n                  Metrics: __assign(__assign({}, endpointInfo.metrics), metrics),\n                  OptOut: optOut !== null && optOut !== void 0 ? optOut : endpointInfo.optOut,\n                  User: {\n                    UserId: (_e = userId !== null && userId !== void 0 ? userId : endpointInfo.userId) !== null && _e !== void 0 ? _e : credentials.identityId,\n                    UserAttributes: attributes !== null && attributes !== void 0 ? attributes : endpointInfo.userAttributes\n                  }\n                }\n              };\n              this.logger.debug('updating endpoint');\n              return [4 /*yield*/, updateEndpoint({\n                credentials: credentials,\n                region: region,\n                userAgentValue: this.getUserAgentValue()\n              }, input)];\n            case 3:\n              _f.sent();\n              this.endpointInitialized = true;\n              return [3 /*break*/, 5];\n            case 4:\n              err_4 = _f.sent();\n              throw err_4;\n            case 5:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.getEndpointId = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var appId, cacheKey, cachedEndpointId, endpointId, ttl, expiration;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              appId = this.config.appId;\n              cacheKey = this.getSubCategory() === 'PushNotification' ? this.getProviderName() + \"_\" + appId : this.getSubCategory() + \":\" + this.getProviderName() + \":\" + appId;\n              return [4 /*yield*/, Cache.getItem(cacheKey)];\n            case 1:\n              cachedEndpointId = _a.sent();\n              // Found in cache, just return it\n              if (cachedEndpointId) {\n                return [2 /*return*/, cachedEndpointId];\n              }\n              endpointId = uuid();\n              ttl = 1000 * 60 * 60 * 24 * 365 * 100;\n              expiration = new Date().getTime() + ttl;\n              Cache.setItem(cacheKey, endpointId, {\n                expires: expiration,\n                priority: 1\n              });\n              return [2 /*return*/, endpointId];\n          }\n        });\n      });\n    };\n    this.getCredentials = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var credentials, err_5;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n              return [4 /*yield*/, Credentials.get()];\n            case 1:\n              credentials = _a.sent();\n              if (!credentials) {\n                this.logger.debug('no credentials found');\n                return [2 /*return*/, null];\n              }\n              return [2 /*return*/, Credentials.shear(credentials)];\n            case 2:\n              err_5 = _a.sent();\n              this.logger.error('Error getting credentials:', err_5);\n              return [2 /*return*/, null];\n            case 3:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.assertNotEmptyConfiguration = function () {\n      var _a = _this.config,\n        appId = _a.appId,\n        credentials = _a.credentials,\n        region = _a.region;\n      if (!appId || !credentials || !region) {\n        throw new Error('One or more of credentials, appId or region is not configured');\n      }\n    };\n    this.config = {\n      storage: new StorageHelper().getStorage()\n    };\n    this.clientInfo = (_a = ClientDevice.clientInfo()) !== null && _a !== void 0 ? _a : {};\n    this.logger = logger;\n  }\n  /**\n   * get the category of the plugin\n   */\n  AWSPinpointProviderCommon.prototype.getCategory = function () {\n    return AWSPinpointProviderCommon.category;\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AWSPinpointProviderCommon.prototype.getProviderName = function () {\n    return AWSPinpointProviderCommon.providerName;\n  };\n  AWSPinpointProviderCommon.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n    this.config = __assign(__assign({}, this.config), config);\n    this.logger.debug(\"configure \" + this.getProviderName() + this.getSubCategory() + \"Provider\", this.config);\n    return this.config;\n  };\n  AWSPinpointProviderCommon.category = 'Notifications';\n  AWSPinpointProviderCommon.providerName = 'AWSPinpoint';\n  return AWSPinpointProviderCommon;\n}();\nexport default AWSPinpointProviderCommon;","map":{"version":3,"names":["Category","ClientDevice","Credentials","getAmplifyUserAgent","InAppMessagingAction","PushNotificationAction","StorageHelper","transferKeyToUpperCase","Cache","putEvents","updateEndpoint","v4","uuid","AWSPinpointProviderCommon","logger","_this","config","endpointInitialized","initialized","identifyUser","userId","userInfo","__awaiter","init","_a","sent","error","err_1","endpointId","storage","providerName","getProviderName","sync","_c","_b","getEndpointId","err_2","getUserAgentValue","customUserAgentDetails","getSubCategory","category","PushNotification","action","None","InAppMessaging","recordAnalyticsEvent","event","getCredentials","credentials","_e","assertNotEmptyConfiguration","appId","region","input","ApplicationId","EventsRequest","BatchItem","Endpoint","Events","_d","debug","userAgentValue","err_3","_f","credentialsUpdated","Object","keys","some","key","endpointInfo","address","attributes","demographic","location_1","location","metrics","optOut","clientInfo","appVersion","make","model","platform","version","EndpointId","EndpointRequest","RequestId","EffectiveDate","Date","toISOString","ChannelType","channelType","Address","Attributes","__assign","Demographic","AppVersion","Make","Model","ModelVersion","Platform","Location","Metrics","OptOut","User","UserId","identityId","UserAttributes","userAttributes","err_4","cacheKey","getItem","cachedEndpointId","ttl","expiration","getTime","setItem","expires","priority","get","shear","err_5","Error","getStorage","prototype","getCategory","configure"],"sources":["../../../src/common/AWSPinpointProviderCommon/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}