{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageHelper } from '@aws-amplify/core';\n/**\n * Default cache config\n */\nexport var defaultConfig = {\n  keyPrefix: 'aws-amplify-cache',\n  capacityInBytes: 1048576,\n  itemMaxSize: 210000,\n  defaultTTL: 259200000,\n  defaultPriority: 5,\n  warningThreshold: 0.8,\n  // the storage helper will check if localStorage exists,\n  // if not, will use a in-memory object instead\n  storage: new StorageHelper().getStorage()\n};\n/**\n * return the byte size of the string\n * @param str\n */\nexport function getByteLength(str) {\n  var ret = 0;\n  ret = str.length;\n  for (var i = str.length; i >= 0; i -= 1) {\n    var charCode = str.charCodeAt(i);\n    if (charCode > 0x7f && charCode <= 0x7ff) {\n      ret += 1;\n    } else if (charCode > 0x7ff && charCode <= 0xffff) {\n      ret += 2;\n    }\n    // trail surrogate\n    if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n      i -= 1;\n    }\n  }\n  return ret;\n}\n/**\n * get current time\n */\nexport function getCurrTime() {\n  var currTime = new Date();\n  return currTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nexport function isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n  return _isInteger(value);\n}\nfunction _isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * provide an object as the in-memory cache\n */\nvar store = {};\nvar CacheObject = /** @class */function () {\n  function CacheObject() {}\n  CacheObject.clear = function () {\n    store = {};\n  };\n  CacheObject.getItem = function (key) {\n    return store[key] || null;\n  };\n  CacheObject.setItem = function (key, value) {\n    store[key] = value;\n  };\n  CacheObject.removeItem = function (key) {\n    delete store[key];\n  };\n  return CacheObject;\n}();\nexport { CacheObject };","map":{"version":3,"names":["StorageHelper","defaultConfig","keyPrefix","capacityInBytes","itemMaxSize","defaultTTL","defaultPriority","warningThreshold","storage","getStorage","getByteLength","str","ret","length","i","charCode","charCodeAt","getCurrTime","currTime","Date","getTime","isInteger","value","Number","_isInteger","isFinite","Math","floor","store","CacheObject","clear","getItem","key","setItem","removeItem"],"sources":["../../src/Utils/CacheUtils.ts"],"sourcesContent":[null],"mappings":"AAAA;AACA;AAGA,SAASA,aAAa,QAAQ,mBAAmB;AACjD;;;AAGA,OAAO,IAAMC,aAAa,GAAgB;EACzCC,SAAS,EAAE,mBAAmB;EAC9BC,eAAe,EAAE,OAAO;EACxBC,WAAW,EAAE,MAAM;EACnBC,UAAU,EAAE,SAAS;EACrBC,eAAe,EAAE,CAAC;EAClBC,gBAAgB,EAAE,GAAG;EACrB;EACA;EACAC,OAAO,EAAE,IAAIR,aAAa,EAAE,CAACS,UAAU;CACvC;AAED;;;;AAIA,OAAM,SAAUC,aAAaA,CAACC,GAAW;EACxC,IAAIC,GAAG,GAAW,CAAC;EACnBA,GAAG,GAAGD,GAAG,CAACE,MAAM;EAEhB,KAAK,IAAIC,CAAC,GAAGH,GAAG,CAACE,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IACxC,IAAMC,QAAQ,GAAWJ,GAAG,CAACK,UAAU,CAACF,CAAC,CAAC;IAC1C,IAAIC,QAAQ,GAAG,IAAI,IAAIA,QAAQ,IAAI,KAAK,EAAE;MACzCH,GAAG,IAAI,CAAC;KACR,MAAM,IAAIG,QAAQ,GAAG,KAAK,IAAIA,QAAQ,IAAI,MAAM,EAAE;MAClDH,GAAG,IAAI,CAAC;;IAET;IACA,IAAIG,QAAQ,IAAI,MAAM,IAAIA,QAAQ,IAAI,MAAM,EAAE;MAC7CD,CAAC,IAAI,CAAC;;;EAIR,OAAOF,GAAG;AACX;AAEA;;;AAGA,OAAM,SAAUK,WAAWA,CAAA;EAC1B,IAAMC,QAAQ,GAAG,IAAIC,IAAI,EAAE;EAC3B,OAAOD,QAAQ,CAACE,OAAO,EAAE;AAC1B;AAEA;;;AAGA,OAAM,SAAUC,SAASA,CAACC,KAAK;EAC9B,IAAIC,MAAM,CAACF,SAAS,EAAE;IACrB,OAAOE,MAAM,CAACF,SAAS,CAACC,KAAK,CAAC;;EAG/B,OAAOE,UAAU,CAACF,KAAK,CAAC;AACzB;AAEA,SAASE,UAAUA,CAACF,KAAK;EACxB,OACC,OAAOA,KAAK,KAAK,QAAQ,IAAIG,QAAQ,CAACH,KAAK,CAAC,IAAII,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC,KAAKA,KAAK;AAE7E;AAEA;;;AAGA,IAAIM,KAAK,GAAG,EAAE;AACd,IAAAC,WAAA;EAAA,SAAAA,YAAA,GAgBA;EAfQA,WAAA,CAAAC,KAAK,GAAZ;IACCF,KAAK,GAAG,EAAE;EACX,CAAC;EAEMC,WAAA,CAAAE,OAAO,GAAd,UAAeC,GAAW;IACzB,OAAOJ,KAAK,CAACI,GAAG,CAAC,IAAI,IAAI;EAC1B,CAAC;EAEMH,WAAA,CAAAI,OAAO,GAAd,UAAeD,GAAW,EAAEV,KAAa;IACxCM,KAAK,CAACI,GAAG,CAAC,GAAGV,KAAK;EACnB,CAAC;EAEMO,WAAA,CAAAK,UAAU,GAAjB,UAAkBF,GAAW;IAC5B,OAAOJ,KAAK,CAACI,GAAG,CAAC;EAClB,CAAC;EACF,OAAAH,WAAC;AAAD,CAAC,CAhBD"},"metadata":{},"sourceType":"module","externalDependencies":[]}