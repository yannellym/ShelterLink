{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  _s();\n  const location = useLocation();\n  const state = location.state;\n  const navigate = useNavigate(); // Define useNavigate\n  const [currentPage, setCurrentPage] = useState(1); // Current page state\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9;\n  const [loading, setLoading] = useState(true);\n\n  // Fetch function to retrieve data for the current page\n  const fetchPetsForCurrentPage = async (category, page) => {\n    // Add your fetching logic here (similar to the AllPetsPage component)\n  };\n  useEffect(() => {\n    // Initial data fetch when the component mounts\n    async function fetchData() {\n      const animals = await fetchPetsForCurrentPage(category, currentPage);\n      setCache(animals);\n      setLoading(false);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n  const pageButtons = Array.from({\n    length: buttonsToShow\n  }, (_, i) => startPage + i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-specific-pets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"search-results-title\",\n      children: \"Search Results for:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pet-type-title\",\n      children: [\"All \", petType, \"s in the \", searchText, \" area\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-card-container\",\n      children: petsToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-animals-message\",\n        children: \"No animals found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : petsToDisplay.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet,\n        addToFavorites: addToFavorites,\n        removeFromFavorites: removeFromFavorites,\n        isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), pageButtons.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(page),\n        className: currentPage === page ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === total_pages,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSpecificPets, \"azKh2Zog4uuGrDqr2URGwyr0tD0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LocationSpecificPets;\nexport default LocationSpecificPets;\nvar _c;\n$RefreshReg$(_c, \"LocationSpecificPets\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","PetCard","jsxDEV","_jsxDEV","LocationSpecificPets","favoritePets","addToFavorites","removeFromFavorites","_s","location","state","navigate","currentPage","setCurrentPage","cache","setCache","petsPerPage","otherAnimalTypes","buttonsToShow","loading","setLoading","fetchPetsForCurrentPage","category","page","fetchData","animals","window","scrollTo","top","behavior","handlePageChange","newPage","startPage","Math","max","floor","endPage","pageButtons","Array","from","length","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","petType","searchText","petsToDisplay","map","pet","isFavorite","some","favoritePet","id","onClick","handlePreviousPage","disabled","handleNextPage","total_pages","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\n\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  const location = useLocation();\n  const state = location.state;\n  const navigate = useNavigate(); // Define useNavigate\n  const [currentPage, setCurrentPage] = useState(1); // Current page state\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9;\n  const [loading, setLoading] = useState(true);\n\n  // Fetch function to retrieve data for the current page\n  const fetchPetsForCurrentPage = async (category, page) => {\n    // Add your fetching logic here (similar to the AllPetsPage component)\n  };\n\n  useEffect(() => {\n    // Initial data fetch when the component mounts\n    async function fetchData() {\n      const animals = await fetchPetsForCurrentPage(category, currentPage);\n      setCache(animals);\n      setLoading(false);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n  const pageButtons = Array.from({ length: buttonsToShow }, (_, i) => startPage + i);\n\n  return (\n    <div className=\"location-specific-pets\">\n      <h2 className=\"search-results-title\">Search Results for:</h2>\n      <h3 className=\"pet-type-title\">All {petType}s in the {searchText} area</h3>\n      <div className=\"pet-card-container\">\n        {petsToDisplay.length === 0 ? (\n          <p className=\"no-animals-message\">No animals found.</p>\n        ) : (\n          petsToDisplay.map((pet) => (\n            <PetCard\n              key={pet.id}\n              pet={pet}\n              addToFavorites={addToFavorites}\n              removeFromFavorites={removeFromFavorites}\n              isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n            />\n          ))\n        )}\n      </div>\n      <div className=\"pagination\">\n        <button onClick={handlePreviousPage} disabled={currentPage === 1}>\n          Previous Page\n        </button>\n        {pageButtons.map((page) => (\n          <button\n            key={page}\n            onClick={() => setCurrentPage(page)}\n            className={currentPage === page ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n        <button onClick={handleNextPage} disabled={currentPage === total_pages}>\n          Next Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationSpecificPets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}