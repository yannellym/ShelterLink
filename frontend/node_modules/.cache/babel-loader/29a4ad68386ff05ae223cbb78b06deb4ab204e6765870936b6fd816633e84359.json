{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger, Credentials, StorageHelper, Hub, parseAWSExports, StorageAction } from '@aws-amplify/core';\nimport { copyObject, getObject, getPresignedGetObjectUrl, headObject, deleteObject, listObjectsV2, SERVICE_NAME as S3_SERVICE_NAME } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT } from '../AwsClients/S3/utils';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { getPrefix, loadS3Config } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\nexport var AWSS3Provider = /** @class */function () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    var _this = this;\n    this._config = config ? config : {};\n    this._storage = new StorageHelper().getStorage();\n    Hub.listen('auth', function (data) {\n      var payload = data.payload;\n      if (payload.event === 'signOut' || payload.event === 'signIn') {\n        _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n      }\n    });\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n    return this._config;\n  };\n  AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n    var _a;\n    var s3Config = addTaskInput.s3Config,\n      emitter = addTaskInput.emitter,\n      key = addTaskInput.key,\n      file = addTaskInput.file,\n      params = addTaskInput.params;\n    var progressCallback = config.progressCallback,\n      completeCallback = config.completeCallback,\n      errorCallback = config.errorCallback,\n      track = (_a = config.track, _a === void 0 ? false : _a);\n    if (!(file instanceof Blob)) {\n      throw new Error(StorageErrorStrings.INVALID_BLOB);\n    }\n    emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          progressCallback(event);\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n      if (completeCallback) {\n        if (typeof completeCallback === 'function') {\n          completeCallback(event);\n        } else {\n          logger.warn('completeCallback should be a function, not a ' + typeof completeCallback);\n        }\n      }\n    });\n    emitter.on(TaskEvents.ERROR, function (err) {\n      if (errorCallback) {\n        if (typeof errorCallback === 'function') {\n          errorCallback(err);\n        } else {\n          logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n        }\n      }\n    });\n    // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n    // when its doing a final check with _listSingleFile function\n    var prefixPromise = Credentials.get().then(function (credentials) {\n      var cred = Credentials.shear(credentials);\n      return getPrefix(__assign(__assign({}, config), {\n        level: addTaskInput.accessLevel,\n        credentials: cred\n      }));\n    });\n    var task = new AWSS3UploadTask({\n      s3Config: s3Config,\n      file: file,\n      emitter: emitter,\n      level: addTaskInput.accessLevel,\n      storage: this._storage,\n      params: params,\n      prefixPromise: prefixPromise\n    });\n    dispatchStorageEvent(track, 'upload', {\n      method: 'put',\n      result: 'success'\n    }, null, \"Upload Task created successfully for \".concat(key));\n    // automatically start the upload task\n    task.resume();\n    return task;\n  };\n  /**\n   * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n   * different level or identityId (if source object's level is 'protected').\n   *\n   * @async\n   * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n   * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n   * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n   * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n   */\n  AWSS3Provider.prototype.copy = function (src, dest, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, srcLevel, srcIdentityId, srcKey, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, error_1;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _c.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            srcLevel = (_a = src.level, _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a), srcIdentityId = src.identityId, srcKey = src.key;\n            destLevel = (_b = dest.level, _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b), destKey = dest.key;\n            if (!srcKey || typeof srcKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_SRC_KEY);\n            }\n            if (!destKey || typeof destKey !== 'string') {\n              throw new Error(StorageErrorStrings.NO_DEST_KEY);\n            }\n            if (srcLevel !== 'protected' && srcIdentityId) {\n              logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \".concat(srcLevel));\n            }\n            srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), {\n              level: srcLevel\n            }), srcIdentityId && {\n              identityId: srcIdentityId\n            }));\n            destPrefix = this._prefix(__assign(__assign({}, opt), {\n              level: destLevel\n            }));\n            finalSrcKey = \"\".concat(bucket, \"/\").concat(srcPrefix).concat(srcKey);\n            finalDestKey = \"\".concat(destPrefix).concat(destKey);\n            logger.debug(\"copying \".concat(finalSrcKey, \" to \").concat(finalDestKey));\n            params = {\n              Bucket: bucket,\n              CopySource: finalSrcKey,\n              Key: finalDestKey,\n              // Copies over metadata like contentType as well\n              MetadataDirective: 'COPY'\n            };\n            if (cacheControl) params.CacheControl = cacheControl;\n            if (expires) params.Expires = expires;\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n            }\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n            if (SSEKMSKeyId) {\n              params.SSEKMSKeyId = SSEKMSKeyId;\n            }\n            if (acl) params.ACL = acl;\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, copyObject(loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.Copy\n            })), params)];\n          case 3:\n            _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'success'\n            }, null, \"Copy success from \".concat(srcKey, \" to \").concat(destKey));\n            return [2 /*return*/, {\n              key: destKey\n            }];\n          case 4:\n            error_1 = _c.sent();\n            dispatchStorageEvent(track, 'copy', {\n              method: 'copy',\n              result: 'failed'\n            }, null, \"Copy failed from \".concat(srcKey, \" to \").concat(destKey));\n            throw error_1;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, validateObjectExistence, prefix, final_key, emitter, s3Config, params, response, error_2, error_3, url, _b, _c, error_4;\n      var _d, _e;\n      return __generator(this, function (_f) {\n        switch (_f.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _f.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback, validateObjectExistence = (_d = opt.validateObjectExistence, _d === void 0 ? false : _d);\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            emitter = new events.EventEmitter();\n            s3Config = loadS3Config(__assign(__assign({}, opt), {\n              emitter: emitter,\n              storageAction: StorageAction.Get\n            }));\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n            if (!(download === true)) return [3 /*break*/, 5];\n            _f.label = 2;\n          case 2:\n            _f.trys.push([2, 4,, 5]);\n            if (progressCallback) {\n              if (typeof progressCallback === 'function') {\n                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                  progressCallback(progress);\n                });\n              } else {\n                logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n              }\n            }\n            return [4 /*yield*/, getObject(s3Config, params)];\n          case 3:\n            response = _f.sent();\n            emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \".concat(key));\n            return [2 /*return*/, response];\n          case 4:\n            error_2 = _f.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \".concat(error_2.message));\n            throw error_2;\n          case 5:\n            if (!validateObjectExistence) return [3 /*break*/, 9];\n            _f.label = 6;\n          case 6:\n            _f.trys.push([6, 8,, 9]);\n            return [4 /*yield*/, headObject(s3Config, params)];\n          case 7:\n            _f.sent();\n            return [3 /*break*/, 9];\n          case 8:\n            error_3 = _f.sent();\n            if (((_a = error_3.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n              dispatchStorageEvent(track, 'getSignedUrl', {\n                method: 'get',\n                result: 'failed'\n              }, null, \"\".concat(key, \" not found\"));\n            }\n            throw error_3;\n          case 9:\n            _f.trys.push([9, 12,, 13]);\n            _b = getPresignedGetObjectUrl;\n            _c = [__assign({}, s3Config)];\n            _e = {\n              expiration: expires || DEFAULT_PRESIGN_EXPIRATION\n            };\n            return [4 /*yield*/, s3Config.credentials()];\n          case 10:\n            return [4 /*yield*/, _b.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.credentials = _f.sent(), _e.signingRegion = s3Config.region, _e.signingService = S3_SERVICE_NAME, _e)])), params])];\n          case 11:\n            url = _f.sent();\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \".concat(url));\n            return [2 /*return*/, url];\n          case 12:\n            error_4 = _f.sent();\n            logger.warn('get signed url error', error_4);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \".concat(key));\n            throw error_4;\n          case 13:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Get Properties of the object\n   *\n   * @param {string} key - key of the object\n   * @param {S3ProviderGetPropertiesConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderGetPropertiesOutput>} - A promise resolves to contentType,\n   * contentLength, eTag, lastModified, metadata\n   */\n  AWSS3Provider.prototype.getProperties = function (key, config) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, prefix, final_key, s3Config, params, response, getPropertiesResponse, error_5;\n      var _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _c.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = (_b = opt.track, _b === void 0 ? false : _b), SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            logger.debug(\"getProperties \".concat(key, \" from \").concat(final_key));\n            s3Config = loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.GetProperties\n            }));\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            if (SSECustomerAlgorithm) {\n              params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n            }\n            if (SSECustomerKey) {\n              params.SSECustomerKey = SSECustomerKey;\n            }\n            if (SSECustomerKeyMD5) {\n              params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n            }\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, headObject(s3Config, params)];\n          case 3:\n            response = _c.sent();\n            getPropertiesResponse = {\n              contentLength: response.ContentLength,\n              contentType: response.ContentType,\n              eTag: response.ETag,\n              lastModified: response.LastModified,\n              metadata: response.Metadata\n            };\n            dispatchStorageEvent(track, 'getProperties', {\n              method: 'getProperties',\n              result: 'success'\n            }, null, \"getProperties successful for \".concat(key));\n            return [2 /*return*/, getPropertiesResponse];\n          case 4:\n            error_5 = _c.sent();\n            if (((_a = error_5.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n              dispatchStorageEvent(track, 'getProperties', {\n                method: 'getProperties',\n                result: 'failed'\n              }, null, \"\".concat(key, \" not found\"));\n            }\n            throw error_5;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param key - key of the object\n   * @param object - File to be put in Amazon S3 bucket\n   * @param [config] - Optional configuration for the underlying S3 command\n   * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n   * success.\n   */\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    var opt = Object.assign({}, this._config, config);\n    var bucket = opt.bucket,\n      track = opt.track,\n      progressCallback = opt.progressCallback,\n      level = opt.level,\n      resumable = opt.resumable;\n    var contentType = opt.contentType,\n      contentDisposition = opt.contentDisposition,\n      contentEncoding = opt.contentEncoding,\n      cacheControl = opt.cacheControl,\n      expires = opt.expires,\n      metadata = opt.metadata,\n      tagging = opt.tagging,\n      acl = opt.acl;\n    var serverSideEncryption = opt.serverSideEncryption,\n      SSECustomerAlgorithm = opt.SSECustomerAlgorithm,\n      SSECustomerKey = opt.SSECustomerKey,\n      SSECustomerKeyMD5 = opt.SSECustomerKeyMD5,\n      SSEKMSKeyId = opt.SSEKMSKeyId;\n    var type = contentType ? contentType : 'binary/octet-stream';\n    var params = {\n      Bucket: bucket,\n      Key: key,\n      Body: object,\n      ContentType: type\n    };\n    if (cacheControl) {\n      params.CacheControl = cacheControl;\n    }\n    if (contentDisposition) {\n      params.ContentDisposition = contentDisposition;\n    }\n    if (contentEncoding) {\n      params.ContentEncoding = contentEncoding;\n    }\n    if (expires) {\n      params.Expires = expires;\n    }\n    if (metadata) {\n      params.Metadata = metadata;\n    }\n    if (tagging) {\n      params.Tagging = tagging;\n    }\n    if (serverSideEncryption) {\n      params.ServerSideEncryption = serverSideEncryption;\n    }\n    if (SSECustomerAlgorithm) {\n      params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n    }\n    if (SSECustomerKey) {\n      params.SSECustomerKey = SSECustomerKey;\n    }\n    if (SSECustomerKeyMD5) {\n      params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n    }\n    if (SSEKMSKeyId) {\n      params.SSEKMSKeyId = SSEKMSKeyId;\n    }\n    var emitter = new events.EventEmitter();\n    var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n    if (acl) {\n      params.ACL = acl;\n    }\n    if (resumable === true) {\n      var s3Config = loadS3Config(__assign(__assign({}, opt), {\n        storageAction: StorageAction.Put\n      }));\n      var addTaskInput = {\n        bucket: bucket,\n        key: key,\n        s3Config: s3Config,\n        file: object,\n        emitter: emitter,\n        accessLevel: level,\n        params: params\n      };\n      // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n      return this.startResumableUpload(addTaskInput, config);\n    }\n    try {\n      if (progressCallback) {\n        if (typeof progressCallback === 'function') {\n          emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n            progressCallback(progress);\n          });\n        } else {\n          logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n        }\n      }\n      return uploader.upload().then(function (response) {\n        logger.debug('upload result', response);\n        dispatchStorageEvent(track, 'upload', {\n          method: 'put',\n          result: 'success'\n        }, null, \"Upload success for \".concat(key));\n        return {\n          key: key\n        };\n      });\n    } catch (error) {\n      logger.warn('error uploading', error);\n      dispatchStorageEvent(track, 'upload', {\n        method: 'put',\n        result: 'failed'\n      }, null, \"Error uploading \".concat(key));\n      throw error;\n    }\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n   */\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, params, s3Config, response, error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _a.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            s3Config = loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.Remove\n            }));\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, deleteObject(s3Config, params)];\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \".concat(key, \" successfully\"));\n            return [2 /*return*/, response];\n          case 4:\n            error_6 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \".concat(key, \" failed with \").concat(error_6));\n            throw error_6;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._list = function (params, opt, prefix) {\n    return __awaiter(this, void 0, void 0, function () {\n      var list, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            list = {\n              results: [],\n              hasNextToken: false\n            };\n            return [4 /*yield*/, listObjectsV2(loadS3Config(__assign(__assign({}, opt), {\n              storageAction: StorageAction.List\n            })), __assign({}, params))];\n          case 1:\n            response = _a.sent();\n            if (response && response.Contents) {\n              list.results = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n              list.nextToken = response.NextContinuationToken;\n              list.hasNextToken = response.IsTruncated;\n            }\n            return [2 /*return*/, list];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n   * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified\n   * and file size for all objects in path\n   */\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, pageSize, nextToken, prefix, final_path, list, MAX_PAGE_SIZE, listResult, params, error_7;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this._ensureCredentials()];\n          case 1:\n            credentialsOK = _c.sent();\n            if (!credentialsOK || !this._isWithCredentials(this._config)) {\n              throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n            }\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, pageSize = opt.pageSize, nextToken = opt.nextToken;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            logger.debug('list ' + path + ' from ' + final_path);\n            _c.label = 2;\n          case 2:\n            _c.trys.push([2, 10,, 11]);\n            list = {\n              results: [],\n              hasNextToken: false\n            };\n            MAX_PAGE_SIZE = 1000;\n            listResult = void 0;\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: MAX_PAGE_SIZE,\n              ContinuationToken: nextToken\n            };\n            params.ContinuationToken = nextToken;\n            if (!(pageSize === 'ALL')) return [3 /*break*/, 7];\n            _c.label = 3;\n          case 3:\n            return [4 /*yield*/, this._list(params, opt, prefix)];\n          case 4:\n            listResult = _c.sent();\n            (_a = list.results).push.apply(_a, __spreadArray([], __read(listResult.results), false));\n            if (listResult.nextToken) params.ContinuationToken = listResult.nextToken;\n            _c.label = 5;\n          case 5:\n            if (listResult.nextToken) return [3 /*break*/, 3];\n            _c.label = 6;\n          case 6:\n            return [3 /*break*/, 9];\n          case 7:\n            if (pageSize && pageSize <= MAX_PAGE_SIZE && typeof pageSize === 'number') params.MaxKeys = pageSize;else logger.warn(\"pageSize should be from 0 - \".concat(MAX_PAGE_SIZE, \".\"));\n            return [4 /*yield*/, this._list(params, opt, prefix)];\n          case 8:\n            listResult = _c.sent();\n            (_b = list.results).push.apply(_b, __spreadArray([], __read(listResult.results), false));\n            list.hasNextToken = listResult.hasNextToken;\n            list.nextToken = null !== null && null !== void 0 ? null : listResult.nextToken;\n            _c.label = 9;\n          case 9:\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, \"\".concat(list.results.length, \" items returned from list operation\"));\n            logger.debug('list', list);\n            return [2 /*return*/, list];\n          case 10:\n            error_7 = _c.sent();\n            logger.error('list InvalidArgument', error_7);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \".concat(error_7.message));\n            throw error_7;\n          case 11:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, cred, error_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, Credentials.get()];\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2 /*return*/, false];\n            cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            this._config.credentials = cred;\n            return [2 /*return*/, true];\n          case 2:\n            error_8 = _a.sent();\n            logger.warn('ensure credentials error', error_8);\n            return [2 /*return*/, false];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3Provider.prototype._isWithCredentials = function (config) {\n    return typeof config === 'object' && config.hasOwnProperty('credentials');\n  };\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n      level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n    switch (level) {\n      case 'private':\n        return privatePath;\n      case 'protected':\n        return protectedPath;\n      default:\n        return publicPath;\n    }\n  };\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spreadArray","to","from","pack","l","Array","slice","concat","ConsoleLogger","Logger","Credentials","StorageHelper","Hub","parseAWSExports","StorageAction","copyObject","getObject","getPresignedGetObjectUrl","headObject","deleteObject","listObjectsV2","SERVICE_NAME","S3_SERVICE_NAME","SEND_DOWNLOAD_PROGRESS_EVENT","SEND_UPLOAD_PROGRESS_EVENT","StorageErrorStrings","dispatchStorageEvent","getPrefix","loadS3Config","AWSS3ProviderManagedUpload","AWSS3UploadTask","TaskEvents","UPLOADS_STORAGE_KEY","events","logger","DEFAULT_STORAGE_LEVEL","DEFAULT_PRESIGN_EXPIRATION","AWSS3Provider","config","_this","_config","_storage","getStorage","listen","data","payload","event","removeItem","debug","getCategory","CATEGORY","getProviderName","PROVIDER_NAME","configure","amplifyConfig","Storage","bucket","startResumableUpload","addTaskInput","_a","s3Config","emitter","key","file","params","progressCallback","completeCallback","errorCallback","track","Blob","Error","INVALID_BLOB","on","UPLOAD_PROGRESS","warn","UPLOAD_COMPLETE","ERROR","err","prefixPromise","get","credentials","cred","shear","level","accessLevel","task","storage","method","resume","copy","src","dest","credentialsOK","opt","acl","cacheControl","expires","serverSideEncryption","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","srcLevel","srcIdentityId","srcKey","destLevel","destKey","srcPrefix","destPrefix","finalSrcKey","finalDestKey","error_1","_b","_c","_ensureCredentials","_isWithCredentials","NO_CREDENTIALS","identityId","NO_SRC_KEY","NO_DEST_KEY","_prefix","Bucket","CopySource","Key","MetadataDirective","CacheControl","Expires","ServerSideEncryption","ACL","storageAction","Copy","download","contentDisposition","contentEncoding","contentLanguage","contentType","validateObjectExistence","prefix","final_key","response","error_2","error_3","url","error_4","_d","_e","_f","EventEmitter","Get","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","progress","removeAllListeners","fileSize","Number","Body","message","$metadata","httpStatusCode","expiration","signingRegion","region","signingService","getProperties","getPropertiesResponse","error_5","GetProperties","contentLength","ContentLength","ContentType","eTag","ETag","lastModified","LastModified","metadata","Metadata","put","object","resumable","tagging","type","ContentDisposition","ContentEncoding","Tagging","uploader","Put","upload","remove","error_6","Remove","_list","list","results","hasNextToken","List","Contents","map","item","substr","size","Size","nextToken","NextContinuationToken","IsTruncated","path","pageSize","final_path","MAX_PAGE_SIZE","listResult","error_7","Prefix","MaxKeys","ContinuationToken","error_8","customPrefix","privatePath","private","undefined","protectedPath","protected","publicPath","public"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger, Credentials, StorageHelper, Hub, parseAWSExports, StorageAction, } from '@aws-amplify/core';\nimport { copyObject, getObject, getPresignedGetObjectUrl, headObject, deleteObject, listObjectsV2, SERVICE_NAME as S3_SERVICE_NAME, } from '../AwsClients/S3';\nimport { SEND_DOWNLOAD_PROGRESS_EVENT, SEND_UPLOAD_PROGRESS_EVENT, } from '../AwsClients/S3/utils';\nimport { StorageErrorStrings } from '../common/StorageErrorStrings';\nimport { dispatchStorageEvent } from '../common/StorageUtils';\nimport { getPrefix, loadS3Config, } from '../common/S3ClientUtils';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport { AWSS3UploadTask, TaskEvents } from './AWSS3UploadTask';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar DEFAULT_STORAGE_LEVEL = 'public';\nvar DEFAULT_PRESIGN_EXPIRATION = 900;\n/**\n * Provide storage methods to use AWS S3\n */\nexport var AWSS3Provider = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configurations\n     * @param {Object} config - Configuration object for storage\n     */\n    function AWSS3Provider(config) {\n        var _this = this;\n        this._config = config ? config : {};\n        this._storage = new StorageHelper().getStorage();\n        Hub.listen('auth', function (data) {\n            var payload = data.payload;\n            if (payload.event === 'signOut' || payload.event === 'signIn') {\n                _this._storage.removeItem(UPLOADS_STORAGE_KEY);\n            }\n        });\n        logger.debug('Storage Options', this._config);\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSS3Provider.prototype.getCategory = function () {\n        return AWSS3Provider.CATEGORY;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSS3Provider.prototype.getProviderName = function () {\n        return AWSS3Provider.PROVIDER_NAME;\n    };\n    /**\n     * Configure Storage part with aws configuration\n     * @param {Object} config - Configuration of the Storage\n     * @return {Object} - Current configuration\n     */\n    AWSS3Provider.prototype.configure = function (config) {\n        logger.debug('configure Storage', config);\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n        if (!this._config.bucket) {\n            logger.debug('Do not have bucket yet');\n        }\n        return this._config;\n    };\n    AWSS3Provider.prototype.startResumableUpload = function (addTaskInput, config) {\n        var _a;\n        var s3Config = addTaskInput.s3Config, emitter = addTaskInput.emitter, key = addTaskInput.key, file = addTaskInput.file, params = addTaskInput.params;\n        var progressCallback = config.progressCallback, completeCallback = config.completeCallback, errorCallback = config.errorCallback, track = (_a = config.track, _a === void 0 ? false : _a);\n        if (!(file instanceof Blob)) {\n            throw new Error(StorageErrorStrings.INVALID_BLOB);\n        }\n        emitter.on(TaskEvents.UPLOAD_PROGRESS, function (event) {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    progressCallback(event);\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.UPLOAD_COMPLETE, function (event) {\n            if (completeCallback) {\n                if (typeof completeCallback === 'function') {\n                    completeCallback(event);\n                }\n                else {\n                    logger.warn('completeCallback should be a function, not a ' +\n                        typeof completeCallback);\n                }\n            }\n        });\n        emitter.on(TaskEvents.ERROR, function (err) {\n            if (errorCallback) {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                else {\n                    logger.warn('errorCallback should be a function, not a ' + typeof errorCallback);\n                }\n            }\n        });\n        // we want to keep this function sync so we defer this promise to AWSS3UploadTask to resolve when it's needed\n        // when its doing a final check with _listSingleFile function\n        var prefixPromise = Credentials.get().then(function (credentials) {\n            var cred = Credentials.shear(credentials);\n            return getPrefix(__assign(__assign({}, config), { level: addTaskInput.accessLevel, credentials: cred }));\n        });\n        var task = new AWSS3UploadTask({\n            s3Config: s3Config,\n            file: file,\n            emitter: emitter,\n            level: addTaskInput.accessLevel,\n            storage: this._storage,\n            params: params,\n            prefixPromise: prefixPromise,\n        });\n        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload Task created successfully for \".concat(key));\n        // automatically start the upload task\n        task.resume();\n        return task;\n    };\n    /**\n     * Copy an object from a source object to a new object within the same bucket. Can optionally copy files across\n     * different level or identityId (if source object's level is 'protected').\n     *\n     * @async\n     * @param {S3CopySource} src - Key and optionally access level and identityId of the source object.\n     * @param {S3CopyDestination} dest - Key and optionally access level of the destination object.\n     * @param {S3ProviderCopyConfig} [config] - Optional configuration for s3 commands.\n     * @return {Promise<S3ProviderCopyOutput>} The key of the copied object.\n     */\n    AWSS3Provider.prototype.copy = function (src, dest, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, acl, bucket, cacheControl, expires, track, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, srcLevel, srcIdentityId, srcKey, destLevel, destKey, srcPrefix, destPrefix, finalSrcKey, finalDestKey, params, error_1;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        acl = opt.acl, bucket = opt.bucket, cacheControl = opt.cacheControl, expires = opt.expires, track = opt.track, serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        srcLevel = (_a = src.level, _a === void 0 ? DEFAULT_STORAGE_LEVEL : _a), srcIdentityId = src.identityId, srcKey = src.key;\n                        destLevel = (_b = dest.level, _b === void 0 ? DEFAULT_STORAGE_LEVEL : _b), destKey = dest.key;\n                        if (!srcKey || typeof srcKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_SRC_KEY);\n                        }\n                        if (!destKey || typeof destKey !== 'string') {\n                            throw new Error(StorageErrorStrings.NO_DEST_KEY);\n                        }\n                        if (srcLevel !== 'protected' && srcIdentityId) {\n                            logger.warn(\"You may copy files from another user if the source level is \\\"protected\\\", currently it's \".concat(srcLevel));\n                        }\n                        srcPrefix = this._prefix(__assign(__assign(__assign({}, opt), { level: srcLevel }), (srcIdentityId && { identityId: srcIdentityId })));\n                        destPrefix = this._prefix(__assign(__assign({}, opt), { level: destLevel }));\n                        finalSrcKey = \"\".concat(bucket, \"/\").concat(srcPrefix).concat(srcKey);\n                        finalDestKey = \"\".concat(destPrefix).concat(destKey);\n                        logger.debug(\"copying \".concat(finalSrcKey, \" to \").concat(finalDestKey));\n                        params = {\n                            Bucket: bucket,\n                            CopySource: finalSrcKey,\n                            Key: finalDestKey,\n                            // Copies over metadata like contentType as well\n                            MetadataDirective: 'COPY',\n                        };\n                        if (cacheControl)\n                            params.CacheControl = cacheControl;\n                        if (expires)\n                            params.Expires = expires;\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                        }\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (SSEKMSKeyId) {\n                            params.SSEKMSKeyId = SSEKMSKeyId;\n                        }\n                        if (acl)\n                            params.ACL = acl;\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, copyObject(loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.Copy })), params)];\n                    case 3:\n                        _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'success',\n                        }, null, \"Copy success from \".concat(srcKey, \" to \").concat(destKey));\n                        return [2 /*return*/, {\n                                key: destKey,\n                            }];\n                    case 4:\n                        error_1 = _c.sent();\n                        dispatchStorageEvent(track, 'copy', {\n                            method: 'copy',\n                            result: 'failed',\n                        }, null, \"Copy failed from \".concat(srcKey, \" to \").concat(destKey));\n                        throw error_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype.get = function (key, config) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, progressCallback, validateObjectExistence, prefix, final_key, emitter, s3Config, params, response, error_2, error_3, url, _b, _c, error_4;\n            var _d, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _f.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, progressCallback = opt.progressCallback, validateObjectExistence = (_d = opt.validateObjectExistence, _d === void 0 ? false : _d);\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        emitter = new events.EventEmitter();\n                        s3Config = loadS3Config(__assign(__assign({}, opt), { emitter: emitter, storageAction: StorageAction.Get }));\n                        logger.debug('get ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n                        if (cacheControl)\n                            params.ResponseCacheControl = cacheControl;\n                        if (contentDisposition)\n                            params.ResponseContentDisposition = contentDisposition;\n                        if (contentEncoding)\n                            params.ResponseContentEncoding = contentEncoding;\n                        if (contentLanguage)\n                            params.ResponseContentLanguage = contentLanguage;\n                        if (contentType)\n                            params.ResponseContentType = contentType;\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        if (!(download === true)) return [3 /*break*/, 5];\n                        _f.label = 2;\n                    case 2:\n                        _f.trys.push([2, 4, , 5]);\n                        if (progressCallback) {\n                            if (typeof progressCallback === 'function') {\n                                emitter.on(SEND_DOWNLOAD_PROGRESS_EVENT, function (progress) {\n                                    progressCallback(progress);\n                                });\n                            }\n                            else {\n                                logger.warn('progressCallback should be a function, not a ' +\n                                    typeof progressCallback);\n                            }\n                        }\n                        return [4 /*yield*/, getObject(s3Config, params)];\n                    case 3:\n                        response = _f.sent();\n                        emitter.removeAllListeners(SEND_DOWNLOAD_PROGRESS_EVENT);\n                        dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, {\n                            fileSize: Number(response.Body['size'] || response.Body['length']),\n                        }, \"Download success for \".concat(key));\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_2 = _f.sent();\n                        dispatchStorageEvent(track, 'download', {\n                            method: 'get',\n                            result: 'failed',\n                        }, null, \"Download failed with \".concat(error_2.message));\n                        throw error_2;\n                    case 5:\n                        if (!validateObjectExistence) return [3 /*break*/, 9];\n                        _f.label = 6;\n                    case 6:\n                        _f.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, headObject(s3Config, params)];\n                    case 7:\n                        _f.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        error_3 = _f.sent();\n                        if (((_a = error_3.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n                            dispatchStorageEvent(track, 'getSignedUrl', {\n                                method: 'get',\n                                result: 'failed',\n                            }, null, \"\".concat(key, \" not found\"));\n                        }\n                        throw error_3;\n                    case 9:\n                        _f.trys.push([9, 12, , 13]);\n                        _b = getPresignedGetObjectUrl;\n                        _c = [__assign({}, s3Config)];\n                        _e = { expiration: expires || DEFAULT_PRESIGN_EXPIRATION };\n                        return [4 /*yield*/, s3Config.credentials()];\n                    case 10: return [4 /*yield*/, _b.apply(void 0, [__assign.apply(void 0, _c.concat([(_e.credentials = _f.sent(), _e.signingRegion = s3Config.region, _e.signingService = S3_SERVICE_NAME, _e)])), params])];\n                    case 11:\n                        url = _f.sent();\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, \"Signed URL: \".concat(url));\n                        return [2 /*return*/, url];\n                    case 12:\n                        error_4 = _f.sent();\n                        logger.warn('get signed url error', error_4);\n                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, \"Could not get a signed URL for \".concat(key));\n                        throw error_4;\n                    case 13: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get Properties of the object\n     *\n     * @param {string} key - key of the object\n     * @param {S3ProviderGetPropertiesConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderGetPropertiesOutput>} - A promise resolves to contentType,\n     * contentLength, eTag, lastModified, metadata\n     */\n    AWSS3Provider.prototype.getProperties = function (key, config) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, prefix, final_key, s3Config, params, response, getPropertiesResponse, error_5;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = (_b = opt.track, _b === void 0 ? false : _b), SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        logger.debug(\"getProperties \".concat(key, \" from \").concat(final_key));\n                        s3Config = loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.GetProperties }));\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        if (SSECustomerAlgorithm) {\n                            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                        }\n                        if (SSECustomerKey) {\n                            params.SSECustomerKey = SSECustomerKey;\n                        }\n                        if (SSECustomerKeyMD5) {\n                            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                        }\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, headObject(s3Config, params)];\n                    case 3:\n                        response = _c.sent();\n                        getPropertiesResponse = {\n                            contentLength: response.ContentLength,\n                            contentType: response.ContentType,\n                            eTag: response.ETag,\n                            lastModified: response.LastModified,\n                            metadata: response.Metadata,\n                        };\n                        dispatchStorageEvent(track, 'getProperties', { method: 'getProperties', result: 'success' }, null, \"getProperties successful for \".concat(key));\n                        return [2 /*return*/, getPropertiesResponse];\n                    case 4:\n                        error_5 = _c.sent();\n                        if (((_a = error_5.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 404) {\n                            dispatchStorageEvent(track, 'getProperties', {\n                                method: 'getProperties',\n                                result: 'failed',\n                            }, null, \"\".concat(key, \" not found\"));\n                        }\n                        throw error_5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Put a file in S3 bucket specified to configure method\n     * @param key - key of the object\n     * @param object - File to be put in Amazon S3 bucket\n     * @param [config] - Optional configuration for the underlying S3 command\n     * @return an instance of AWSS3UploadTask or a promise that resolves to an object with the new object's key on\n     * success.\n     */\n    AWSS3Provider.prototype.put = function (key, object, config) {\n        var opt = Object.assign({}, this._config, config);\n        var bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback, level = opt.level, resumable = opt.resumable;\n        var contentType = opt.contentType, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n        var serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n        var type = contentType ? contentType : 'binary/octet-stream';\n        var params = {\n            Bucket: bucket,\n            Key: key,\n            Body: object,\n            ContentType: type,\n        };\n        if (cacheControl) {\n            params.CacheControl = cacheControl;\n        }\n        if (contentDisposition) {\n            params.ContentDisposition = contentDisposition;\n        }\n        if (contentEncoding) {\n            params.ContentEncoding = contentEncoding;\n        }\n        if (expires) {\n            params.Expires = expires;\n        }\n        if (metadata) {\n            params.Metadata = metadata;\n        }\n        if (tagging) {\n            params.Tagging = tagging;\n        }\n        if (serverSideEncryption) {\n            params.ServerSideEncryption = serverSideEncryption;\n        }\n        if (SSECustomerAlgorithm) {\n            params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n        }\n        if (SSECustomerKey) {\n            params.SSECustomerKey = SSECustomerKey;\n        }\n        if (SSECustomerKeyMD5) {\n            params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n        }\n        if (SSEKMSKeyId) {\n            params.SSEKMSKeyId = SSEKMSKeyId;\n        }\n        var emitter = new events.EventEmitter();\n        var uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n        if (acl) {\n            params.ACL = acl;\n        }\n        if (resumable === true) {\n            var s3Config = loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.Put }));\n            var addTaskInput = {\n                bucket: bucket,\n                key: key,\n                s3Config: s3Config,\n                file: object,\n                emitter: emitter,\n                accessLevel: level,\n                params: params,\n            };\n            // explicitly asserting the type here as Typescript could not infer that resumable is of type true\n            return this.startResumableUpload(addTaskInput, config);\n        }\n        try {\n            if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                    emitter.on(SEND_UPLOAD_PROGRESS_EVENT, function (progress) {\n                        progressCallback(progress);\n                    });\n                }\n                else {\n                    logger.warn('progressCallback should be a function, not a ' +\n                        typeof progressCallback);\n                }\n            }\n            return uploader.upload().then(function (response) {\n                logger.debug('upload result', response);\n                dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload success for \".concat(key));\n                return { key: key };\n            });\n        }\n        catch (error) {\n            logger.warn('error uploading', error);\n            dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, \"Error uploading \".concat(key));\n            throw error;\n        }\n    };\n    /**\n     * Remove the object for specified key\n     * @param {string} key - key of the object\n     * @param {S3ProviderRemoveConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderRemoveOutput>} - Promise resolves upon successful removal of the object\n     */\n    AWSS3Provider.prototype.remove = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, prefix, final_key, params, s3Config, response, error_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        logger.debug('remove ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        s3Config = loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.Remove }));\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, deleteObject(s3Config, params)];\n                    case 3:\n                        response = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, \"Deleted \".concat(key, \" successfully\"));\n                        return [2 /*return*/, response];\n                    case 4:\n                        error_6 = _a.sent();\n                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, \"Deletion of \".concat(key, \" failed with \").concat(error_6));\n                        throw error_6;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._list = function (params, opt, prefix) {\n        return __awaiter(this, void 0, void 0, function () {\n            var list, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        list = {\n                            results: [],\n                            hasNextToken: false,\n                        };\n                        return [4 /*yield*/, listObjectsV2(loadS3Config(__assign(__assign({}, opt), { storageAction: StorageAction.List })), __assign({}, params))];\n                    case 1:\n                        response = _a.sent();\n                        if (response && response.Contents) {\n                            list.results = response.Contents.map(function (item) {\n                                return {\n                                    key: item.Key.substr(prefix.length),\n                                    eTag: item.ETag,\n                                    lastModified: item.LastModified,\n                                    size: item.Size,\n                                };\n                            });\n                            list.nextToken = response.NextContinuationToken;\n                            list.hasNextToken = response.IsTruncated;\n                        }\n                        return [2 /*return*/, list];\n                }\n            });\n        });\n    };\n    /**\n     * List bucket objects relative to the level and prefix specified\n     * @param {string} path - the path that contains objects\n     * @param {S3ProviderListConfig} [config] - Optional configuration for the underlying S3 command\n     * @return {Promise<S3ProviderListOutput>} - Promise resolves to list of keys, eTags, lastModified\n     * and file size for all objects in path\n     */\n    AWSS3Provider.prototype.list = function (path, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, pageSize, nextToken, prefix, final_path, list, MAX_PAGE_SIZE, listResult, params, error_7;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK || !this._isWithCredentials(this._config)) {\n                            throw new Error(StorageErrorStrings.NO_CREDENTIALS);\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, pageSize = opt.pageSize, nextToken = opt.nextToken;\n                        prefix = this._prefix(opt);\n                        final_path = prefix + path;\n                        logger.debug('list ' + path + ' from ' + final_path);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 10, , 11]);\n                        list = {\n                            results: [],\n                            hasNextToken: false,\n                        };\n                        MAX_PAGE_SIZE = 1000;\n                        listResult = void 0;\n                        params = {\n                            Bucket: bucket,\n                            Prefix: final_path,\n                            MaxKeys: MAX_PAGE_SIZE,\n                            ContinuationToken: nextToken,\n                        };\n                        params.ContinuationToken = nextToken;\n                        if (!(pageSize === 'ALL')) return [3 /*break*/, 7];\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, this._list(params, opt, prefix)];\n                    case 4:\n                        listResult = _c.sent();\n                        (_a = list.results).push.apply(_a, __spreadArray([], __read(listResult.results), false));\n                        if (listResult.nextToken)\n                            params.ContinuationToken = listResult.nextToken;\n                        _c.label = 5;\n                    case 5:\n                        if (listResult.nextToken) return [3 /*break*/, 3];\n                        _c.label = 6;\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        if (pageSize &&\n                            pageSize <= MAX_PAGE_SIZE &&\n                            typeof pageSize === 'number')\n                            params.MaxKeys = pageSize;\n                        else\n                            logger.warn(\"pageSize should be from 0 - \".concat(MAX_PAGE_SIZE, \".\"));\n                        return [4 /*yield*/, this._list(params, opt, prefix)];\n                    case 8:\n                        listResult = _c.sent();\n                        (_b = list.results).push.apply(_b, __spreadArray([], __read(listResult.results), false));\n                        list.hasNextToken = listResult.hasNextToken;\n                        list.nextToken = null !== null && null !== void 0 ? null : listResult.nextToken;\n                        _c.label = 9;\n                    case 9:\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, \"\".concat(list.results.length, \" items returned from list operation\"));\n                        logger.debug('list', list);\n                        return [2 /*return*/, list];\n                    case 10:\n                        error_7 = _c.sent();\n                        logger.error('list InvalidArgument', error_7);\n                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, \"Listing items failed: \".concat(error_7.message));\n                        throw error_7;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._ensureCredentials = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, cred, error_8;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, false];\n                        cred = Credentials.shear(credentials);\n                        logger.debug('set credentials for storage', cred);\n                        this._config.credentials = cred;\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_8 = _a.sent();\n                        logger.warn('ensure credentials error', error_8);\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3Provider.prototype._isWithCredentials = function (config) {\n        return typeof config === 'object' && config.hasOwnProperty('credentials');\n    };\n    AWSS3Provider.prototype._prefix = function (config) {\n        var credentials = config.credentials, level = config.level;\n        var customPrefix = config.customPrefix || {};\n        var identityId = config.identityId || credentials.identityId;\n        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') +\n            identityId +\n            '/';\n        var protectedPath = (customPrefix.protected !== undefined\n            ? customPrefix.protected\n            : 'protected/') +\n            identityId +\n            '/';\n        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n        switch (level) {\n            case 'private':\n                return privatePath;\n            case 'protected':\n                return protectedPath;\n            default:\n                return publicPath;\n        }\n    };\n    AWSS3Provider.CATEGORY = 'Storage';\n    AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n    return AWSS3Provider;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}