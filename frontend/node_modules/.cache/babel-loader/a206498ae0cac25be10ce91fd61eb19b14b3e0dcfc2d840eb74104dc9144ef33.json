{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nconst fetchAnimalsByCategory = async category => {\n  _s();\n  let endpoint;\n  if (category === \"dog\" || category === \"cat\") {\n    // First API call for \"dog\" or \"cat\"\n    endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}`;\n  } else if (category === \"other\") {\n    // Second API call for \"other\" category\n    // Fetch animals for each type in the \"other\" category\n    const animalPromises = otherAnimalTypes.map(animalType => {\n      return fetch(`http://localhost:3002/api/petfinder?type=${animalType}&limit=${petsPerPage}`).then(response => response.json());\n    });\n    const animalData = await Promise.all(animalPromises);\n\n    // Merge the arrays of animals from different types\n    const mergedAnimals = animalData.flatMap(data => data.animals);\n    endpoint = mergedAnimals;\n  }\n  try {\n    if (endpoint) {\n      if (Array.isArray(endpoint)) {\n        // If endpoint is an array, we have already fetched animals for the \"other\" category\n        return endpoint.filter(animal => animal && animal.photos.length > 0);\n      } else {\n        // Fetch animals for \"dog\" or \"cat\"\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.animals) {\n          return data.animals.filter(animal => animal.photos.length > 0);\n        }\n      }\n    }\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n  }\n  return [];\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n  const pageButtons = Array.from({\n    length: buttonsToShow\n  }, (_, i) => startPage + i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: cache.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), pageButtons.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        className: currentPage === page ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(fetchAnimalsByCategory, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default AllPetsPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","fetchAnimalsByCategory","category","_s","endpoint","petsPerPage","animalPromises","otherAnimalTypes","map","animalType","fetch","then","response","json","animalData","Promise","all","mergedAnimals","flatMap","data","animals","Array","isArray","filter","animal","photos","error","console","message","fetchData","currentPage","window","scrollTo","top","behavior","handlePageChange","newPage","setCurrentPage","startPage","max","buttonsToShow","endPage","pageButtons","from","_","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","loading","cache","pet","id","onClick","disabled","page","AllPetsPage"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nconst fetchAnimalsByCategory = async (category) => {\n  let endpoint;\n\n  if (category === \"dog\" || category === \"cat\") {\n    // First API call for \"dog\" or \"cat\"\n    endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}`;\n  } else if (category === \"other\") {\n    // Second API call for \"other\" category\n    // Fetch animals for each type in the \"other\" category\n    const animalPromises = otherAnimalTypes.map(animalType => {\n      return fetch(`http://localhost:3002/api/petfinder?type=${animalType}&limit=${petsPerPage}`)\n        .then(response => response.json());\n    });\n\n    const animalData = await Promise.all(animalPromises);\n\n    // Merge the arrays of animals from different types\n    const mergedAnimals = animalData.flatMap(data => data.animals);\n\n    endpoint = mergedAnimals;\n  }\n\n  try {\n    if (endpoint) {\n      if (Array.isArray(endpoint)) {\n        // If endpoint is an array, we have already fetched animals for the \"other\" category\n        return endpoint.filter(animal => animal && animal.photos.length > 0);\n      } else {\n        // Fetch animals for \"dog\" or \"cat\"\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.animals) {\n          return data.animals.filter((animal) => animal.photos.length > 0);\n        }\n      }\n    }\n  } catch (error) {\n    console.error('Error fetching data:', error.message);\n  }\n  \n  return [];\n\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n\n  const pageButtons = Array.from({ length: buttonsToShow }, (_, i) => startPage + i);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {cache.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      )}\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        {pageButtons.map((page) => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={currentPage === page ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}