{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimalTypeDetails({\n  animalType\n}) {\n  _s();\n  const [typeData, setTypeData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Define the endpoint for fetching information about the specific animal type\n    const endpoint = `https://api.petfinder.com/v2/types/${animalType}`;\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.type) {\n          setTypeData(data.type);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching animal type data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [animalType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: typeData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Coats:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: typeData.coats.map(coat => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: coat\n        }, coat, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Colors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: typeData.colors.map(color => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: color\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Genders:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: typeData.genders.map(gender => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: gender\n        }, gender, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimalTypeDetails, \"QkIgR83TVTTlP9YVXOPjqlZGhSw=\");\n_c = AnimalTypeDetails;\nexport default AnimalTypeDetails;\nvar _c;\n$RefreshReg$(_c, \"AnimalTypeDetails\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnimalTypeDetails","animalType","_s","typeData","setTypeData","loading","setLoading","endpoint","fetchData","response","fetch","data","json","type","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","coats","map","coat","colors","color","genders","gender","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction AnimalTypeDetails({ animalType }) {\n  const [typeData, setTypeData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Define the endpoint for fetching information about the specific animal type\n    const endpoint = `https://api.petfinder.com/v2/types/${animalType}`;\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        if (data && data.type) {\n          setTypeData(data.type);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching animal type data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [animalType]);\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          <h2>{typeData.name}</h2>\n          <h3>Coats:</h3>\n          <ul>\n            {typeData.coats.map((coat) => (\n              <li key={coat}>{coat}</li>\n            ))}\n          </ul>\n          <h3>Colors:</h3>\n          <ul>\n            {typeData.colors.map((color) => (\n              <li key={color}>{color}</li>\n            ))}\n          </ul>\n          <h3>Genders:</h3>\n          <ul>\n            {typeData.genders.map((gender) => (\n              <li key={gender}>{gender}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AnimalTypeDetails;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}