{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Logger } from '@aws-amplify/core';\nimport { createMultipartUpload, uploadPart, listObjectsV2, listParts, completeMultipartUpload, abortMultipartUpload } from '../AwsClients/S3';\nimport { isCancelError, CANCELED_ERROR_MESSAGE } from '../AwsClients/S3/utils';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE } from '../common/S3ClientUtils';\nimport { byteLength, isFile } from '../common/StorageUtils';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nvar logger = new Logger('AWSS3UploadTask');\nexport var AWSS3UploadTaskState;\n(function (AWSS3UploadTaskState) {\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"INIT\"] = 0] = \"INIT\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"IN_PROGRESS\"] = 1] = \"IN_PROGRESS\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"PAUSED\"] = 2] = \"PAUSED\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n  AWSS3UploadTaskState[AWSS3UploadTaskState[\"COMPLETED\"] = 4] = \"COMPLETED\";\n})(AWSS3UploadTaskState || (AWSS3UploadTaskState = {}));\nexport var TaskEvents;\n(function (TaskEvents) {\n  TaskEvents[\"CANCEL\"] = \"cancel\";\n  TaskEvents[\"UPLOAD_COMPLETE\"] = \"uploadComplete\";\n  TaskEvents[\"UPLOAD_PROGRESS\"] = \"uploadPartProgress\";\n  TaskEvents[\"ERROR\"] = \"error\";\n})(TaskEvents || (TaskEvents = {}));\nfunction comparePartNumber(a, b) {\n  return a.PartNumber - b.PartNumber;\n}\nvar AWSS3UploadTask = /** @class */function () {\n  function AWSS3UploadTask(_a) {\n    var s3Config = _a.s3Config,\n      file = _a.file,\n      emitter = _a.emitter,\n      storage = _a.storage,\n      params = _a.params,\n      level = _a.level,\n      prefixPromise = _a.prefixPromise;\n    this.queueSize = DEFAULT_QUEUE_SIZE;\n    this.partSize = DEFAULT_PART_SIZE;\n    this.inProgress = [];\n    this.completedParts = [];\n    this.queued = [];\n    this.bytesUploaded = 0;\n    this.totalBytes = 0;\n    this.state = AWSS3UploadTaskState.INIT;\n    this.prefixPromise = prefixPromise;\n    this.s3Config = s3Config;\n    this.storage = storage;\n    this.storageSync = Promise.resolve();\n    if (typeof this.storage['sync'] === 'function') {\n      this.storageSync = this.storage['sync']();\n    }\n    this.params = params;\n    this.file = file;\n    this.totalBytes = this.file.size;\n    this.bytesUploaded = 0;\n    this.emitter = emitter;\n    this.queued = [];\n    this.fileId = this._getFileId(level);\n    this._validateParams();\n    // event emitter will re-throw an error if an event emits an error unless there's a listener, attaching a no-op\n    // function to it unless user adds their own onError callback\n    this.emitter.on(TaskEvents.ERROR, function () {});\n  }\n  Object.defineProperty(AWSS3UploadTask.prototype, \"percent\", {\n    get: function () {\n      return this.bytesUploaded / this.totalBytes * 100;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AWSS3UploadTask.prototype, \"isInProgress\", {\n    get: function () {\n      return this.state === AWSS3UploadTaskState.IN_PROGRESS;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  AWSS3UploadTask.prototype._listSingleFile = function (_a) {\n    var key = _a.key,\n      bucket = _a.bucket;\n    return __awaiter(this, void 0, void 0, function () {\n      var objectKeyPrefix, _b, Contents, obj;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.prefixPromise];\n          case 1:\n            objectKeyPrefix = _c.sent();\n            return [4 /*yield*/, listObjectsV2(this.s3Config, {\n              Bucket: bucket,\n              Prefix: objectKeyPrefix + key\n            })];\n          case 2:\n            _b = _c.sent().Contents, Contents = _b === void 0 ? [] : _b;\n            obj = Contents.find(function (o) {\n              return o.Key === \"\".concat(objectKeyPrefix).concat(key);\n            });\n            return [2 /*return*/, obj];\n        }\n      });\n    });\n  };\n  AWSS3UploadTask.prototype._getFileId = function (level) {\n    // We should check if it's a File first because File is also instance of a Blob\n    if (isFile(this.file)) {\n      return [this.file.name, this.file.lastModified, this.file.size, this.file.type, this.params.Bucket, level, this.params.Key].join('-');\n    } else {\n      return [this.file.size, this.file.type, this.params.Bucket, level, this.params.Key].join('-');\n    }\n  };\n  AWSS3UploadTask.prototype._findCachedUploadParts = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var uploadRequests, cachedUploadFileData, _a, Parts, _b, _c;\n      var _d;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            return [4 /*yield*/, this._listCachedUploadTasks()];\n          case 1:\n            uploadRequests = _e.sent();\n            if (Object.keys(uploadRequests).length === 0 || !Object.prototype.hasOwnProperty.call(uploadRequests, this.fileId)) {\n              return [2 /*return*/, {\n                parts: [],\n                uploadId: null\n              }];\n            }\n            cachedUploadFileData = uploadRequests[this.fileId];\n            cachedUploadFileData.lastTouched = Date.now();\n            this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n            _b = listParts;\n            _c = [this.s3Config];\n            _d = {\n              Bucket: this.params.Bucket\n            };\n            return [4 /*yield*/, this.prefixPromise];\n          case 2:\n            return [4 /*yield*/, _b.apply(void 0, _c.concat([(_d.Key = _e.sent() + this.params.Key, _d.UploadId = cachedUploadFileData.uploadId, _d)]))];\n          case 3:\n            _a = _e.sent().Parts, Parts = _a === void 0 ? [] : _a;\n            return [2 /*return*/, {\n              parts: Parts,\n              uploadId: cachedUploadFileData.uploadId\n            }];\n        }\n      });\n    });\n  };\n  AWSS3UploadTask.prototype._emitEvent = function (event, payload) {\n    this.emitter.emit(event, payload);\n  };\n  AWSS3UploadTask.prototype._validateParams = function () {\n    if (this.totalBytes > MAX_OBJECT_SIZE) {\n      throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytes, \" Bytes\"));\n    }\n  };\n  AWSS3UploadTask.prototype._listCachedUploadTasks = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var tasks;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.storageSync];\n          case 1:\n            _a.sent();\n            tasks = this.storage.getItem(UPLOADS_STORAGE_KEY) || '{}';\n            return [2 /*return*/, JSON.parse(tasks)];\n        }\n      });\n    });\n  };\n  AWSS3UploadTask.prototype._cache = function (fileMetadata) {\n    return __awaiter(this, void 0, void 0, function () {\n      var uploadRequests;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._listCachedUploadTasks()];\n          case 1:\n            uploadRequests = _a.sent();\n            uploadRequests[this.fileId] = fileMetadata;\n            this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._isCached = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = (_a = Object.prototype.hasOwnProperty).call;\n            return [4 /*yield*/, this._listCachedUploadTasks()];\n          case 1:\n            return [2 /*return*/, _b.apply(_a, [_c.sent(), this.fileId])];\n        }\n      });\n    });\n  };\n  AWSS3UploadTask.prototype._removeFromCache = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var uploadRequests;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._listCachedUploadTasks()];\n          case 1:\n            uploadRequests = _a.sent();\n            delete uploadRequests[this.fileId];\n            this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._onPartUploadCompletion = function (_a) {\n    var eTag = _a.eTag,\n      partNumber = _a.partNumber,\n      chunk = _a.chunk;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        this.completedParts.push({\n          ETag: eTag,\n          PartNumber: partNumber\n        });\n        this.bytesUploaded += byteLength(chunk);\n        this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n          loaded: this.bytesUploaded,\n          total: this.totalBytes\n        });\n        // Remove the completed item from the inProgress array\n        this.inProgress = this.inProgress.filter(function (job) {\n          return job.uploadPartInput.PartNumber !== partNumber;\n        });\n        if (this.queued.length && this.state !== AWSS3UploadTaskState.PAUSED) this._startNextPart();\n        if (this._isDone()) this._completeUpload();\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._completeUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, err_1;\n      var _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _d.trys.push([0, 4,, 5]);\n            _a = completeMultipartUpload;\n            _b = [this.s3Config];\n            _c = {\n              Bucket: this.params.Bucket\n            };\n            return [4 /*yield*/, this.prefixPromise];\n          case 1:\n            return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.Key = _d.sent() + this.params.Key, _c.UploadId = this.uploadId, _c.MultipartUpload = {\n              // Parts are not always completed in order, we need to manually sort them\n              Parts: __spreadArray([], __read(this.completedParts), false).sort(comparePartNumber)\n            }, _c)]))];\n          case 2:\n            _d.sent();\n            return [4 /*yield*/, this._verifyFileSize()];\n          case 3:\n            _d.sent();\n            this._emitEvent(TaskEvents.UPLOAD_COMPLETE, {\n              key: this.params.Key\n            });\n            this._removeFromCache();\n            this.state = AWSS3UploadTaskState.COMPLETED;\n            return [3 /*break*/, 5];\n          case 4:\n            err_1 = _d.sent();\n            logger.error('error completing upload', err_1);\n            this._emitEvent(TaskEvents.ERROR, err_1);\n            return [3 /*break*/, 5];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._makeUploadPartRequest = function (input, abortSignal) {\n    return __awaiter(this, void 0, void 0, function () {\n      var res, _a, _b, _c, err_2;\n      var _d;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _e.trys.push([0, 4,, 5]);\n            _a = uploadPart;\n            _b = [__assign(__assign({}, this.s3Config), {\n              abortSignal: abortSignal\n            })];\n            _c = [__assign({}, input)];\n            _d = {};\n            return [4 /*yield*/, this.prefixPromise];\n          case 1:\n            return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent() + this.params.Key, _d)]))]))];\n          case 2:\n            res = _e.sent();\n            return [4 /*yield*/, this._onPartUploadCompletion({\n              eTag: res.ETag,\n              partNumber: input.PartNumber,\n              chunk: input.Body\n            })];\n          case 3:\n            _e.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            err_2 = _e.sent();\n            if (this.state === AWSS3UploadTaskState.PAUSED) {\n              logger.log('upload paused');\n            } else if (this.state === AWSS3UploadTaskState.CANCELLED) {\n              logger.log('upload aborted');\n            } else {\n              logger.error('error starting next part of upload: ', err_2);\n            }\n            // xhr transfer handlers' cancel will also throw an error, however we don't need to emit an event in that case as it's an\n            // expected behavior\n            if (!isCancelError(err_2) && err_2.message !== CANCELED_ERROR_MESSAGE) {\n              this._emitEvent(TaskEvents.ERROR, err_2);\n              this.pause();\n            }\n            return [3 /*break*/, 5];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._startNextPart = function () {\n    if (this.queued.length > 0 && this.state !== AWSS3UploadTaskState.PAUSED) {\n      var abortController = new AbortController();\n      var nextPart = this.queued.shift();\n      this.inProgress.push({\n        uploadPartInput: nextPart,\n        s3Request: this._makeUploadPartRequest(nextPart, abortController.signal),\n        abortController: abortController\n      });\n    }\n  };\n  /**\n   * Verify on S3 side that the file size matches the one on the client side.\n   *\n   * @async\n   * @throws throws an error if the file size does not match between local copy of the file and the file on s3.\n   */\n  AWSS3UploadTask.prototype._verifyFileSize = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var valid, obj, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, this._listSingleFile({\n              key: this.params.Key,\n              bucket: this.params.Bucket\n            })];\n          case 1:\n            obj = _a.sent();\n            valid = Boolean(obj && obj.Size === this.file.size);\n            return [3 /*break*/, 3];\n          case 2:\n            e_1 = _a.sent();\n            logger.log('Could not get file on s3 for size matching: ', e_1);\n            // Don't gate verification on auth or other errors\n            // unrelated to file size verification\n            return [2 /*return*/];\n          case 3:\n            if (!valid) {\n              throw new Error('File size does not match between local file and file on s3');\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype._isDone = function () {\n    return !this.queued.length && !this.inProgress.length && this.bytesUploaded === this.totalBytes;\n  };\n  AWSS3UploadTask.prototype._createParts = function () {\n    var size = this.file.size;\n    var parts = [];\n    for (var bodyStart = 0; bodyStart < size;) {\n      var bodyEnd = Math.min(bodyStart + this.partSize, size);\n      parts.push({\n        Body: this.file.slice(bodyStart, bodyEnd),\n        Key: this.params.Key,\n        Bucket: this.params.Bucket,\n        PartNumber: parts.length + 1,\n        UploadId: this.uploadId\n      });\n      bodyStart += this.partSize;\n    }\n    return parts;\n  };\n  AWSS3UploadTask.prototype._initCachedUploadParts = function (cachedParts) {\n    this.bytesUploaded += cachedParts.reduce(function (acc, part) {\n      return acc + part.Size;\n    }, 0);\n    // Find the set of part numbers that have already been uploaded\n    var uploadedPartNumSet = new Set(cachedParts.map(function (part) {\n      return part.PartNumber;\n    }));\n    this.queued = this.queued.filter(function (part) {\n      return !uploadedPartNumSet.has(part.PartNumber);\n    });\n    this.completedParts = cachedParts.map(function (part) {\n      return {\n        PartNumber: part.PartNumber,\n        ETag: part.ETag\n      };\n    });\n    this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n      loaded: this.bytesUploaded,\n      total: this.totalBytes\n    });\n  };\n  AWSS3UploadTask.prototype._initMultipartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res, _a, _b, _c;\n      var _d;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _a = createMultipartUpload;\n            _b = [this.s3Config];\n            _c = [__assign({}, this.params)];\n            _d = {};\n            return [4 /*yield*/, this.prefixPromise];\n          case 1:\n            return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = _e.sent() + this.params.Key, _d)]))]))];\n          case 2:\n            res = _e.sent();\n            this._cache({\n              uploadId: res.UploadId,\n              lastTouched: Date.now(),\n              bucket: this.params.Bucket,\n              key: this.params.Key,\n              fileName: this.file instanceof File ? this.file.name : ''\n            });\n            return [2 /*return*/, res.UploadId];\n        }\n      });\n    });\n  };\n  AWSS3UploadTask.prototype._initializeUploadTask = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, parts, uploadId, uploadId, err_3;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            this.state = AWSS3UploadTaskState.IN_PROGRESS;\n            this.partSize = calculatePartSize(this.totalBytes);\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 7,, 8]);\n            return [4 /*yield*/, this._isCached()];\n          case 2:\n            if (!_b.sent()) return [3 /*break*/, 4];\n            return [4 /*yield*/, this._findCachedUploadParts()];\n          case 3:\n            _a = _b.sent(), parts = _a.parts, uploadId = _a.uploadId;\n            this.uploadId = uploadId;\n            this.queued = this._createParts();\n            this._initCachedUploadParts(parts);\n            if (this._isDone()) {\n              this._completeUpload();\n            } else {\n              this._startUpload();\n            }\n            return [3 /*break*/, 6];\n          case 4:\n            if (!!this.uploadId) return [3 /*break*/, 6];\n            return [4 /*yield*/, this._initMultipartUpload()];\n          case 5:\n            uploadId = _b.sent();\n            this.uploadId = uploadId;\n            this.queued = this._createParts();\n            this._startUpload();\n            _b.label = 6;\n          case 6:\n            return [3 /*break*/, 8];\n          case 7:\n            err_3 = _b.sent();\n            if (!isCancelError(err_3)) {\n              logger.error('Error initializing the upload task', err_3);\n              this._emitEvent(TaskEvents.ERROR, err_3);\n            }\n            return [3 /*break*/, 8];\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  AWSS3UploadTask.prototype.resume = function () {\n    if (this.state === AWSS3UploadTaskState.CANCELLED) {\n      logger.warn('This task has already been cancelled');\n    } else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n      logger.warn('This task has already been completed');\n    } else if (this.state === AWSS3UploadTaskState.IN_PROGRESS) {\n      logger.warn('Upload task already in progress');\n      // first time running resume, find any cached parts on s3 or start a new multipart upload request before\n      // starting the upload\n    } else if (!this.uploadId) {\n      this._initializeUploadTask();\n    } else {\n      this._startUpload();\n    }\n  };\n  AWSS3UploadTask.prototype._startUpload = function () {\n    this.state = AWSS3UploadTaskState.IN_PROGRESS;\n    for (var i = 0; i < this.queueSize; i++) {\n      this._startNextPart();\n    }\n  };\n  AWSS3UploadTask.prototype._cancel = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, err_4;\n      var _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            if (!(this.state === AWSS3UploadTaskState.CANCELLED)) return [3 /*break*/, 1];\n            logger.warn('This task has already been cancelled');\n            return [2 /*return*/, false];\n          case 1:\n            if (!(this.state === AWSS3UploadTaskState.COMPLETED)) return [3 /*break*/, 2];\n            logger.warn('This task has already been completed');\n            return [2 /*return*/, false];\n          case 2:\n            this.pause();\n            this.queued = [];\n            this.completedParts = [];\n            this.bytesUploaded = 0;\n            this.state = AWSS3UploadTaskState.CANCELLED;\n            _d.label = 3;\n          case 3:\n            _d.trys.push([3, 7,, 8]);\n            _a = abortMultipartUpload;\n            _b = [this.s3Config];\n            _c = {\n              Bucket: this.params.Bucket\n            };\n            return [4 /*yield*/, this.prefixPromise];\n          case 4:\n            return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.Key = _d.sent() + this.params.Key, _c.UploadId = this.uploadId, _c)]))];\n          case 5:\n            _d.sent();\n            return [4 /*yield*/, this._removeFromCache()];\n          case 6:\n            _d.sent();\n            return [2 /*return*/, true];\n          case 7:\n            err_4 = _d.sent();\n            logger.error('Error cancelling upload task', err_4);\n            return [2 /*return*/, false];\n          case 8:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * pause this particular upload task\n   **/\n  AWSS3UploadTask.prototype.pause = function () {\n    var _a;\n    if (this.state === AWSS3UploadTaskState.CANCELLED) {\n      logger.warn('This task has already been cancelled');\n    } else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n      logger.warn('This task has already been completed');\n    } else if (this.state === AWSS3UploadTaskState.PAUSED) {\n      logger.warn('This task is already paused');\n    }\n    this.state = AWSS3UploadTaskState.PAUSED;\n    // Abort the part request immediately\n    // Add the inProgress parts back to pending\n    var removedInProgressReq = this.inProgress.splice(0, this.inProgress.length);\n    removedInProgressReq.forEach(function (req) {\n      req.abortController.abort();\n    });\n    // Put all removed in progress parts back into the queue\n    (_a = this.queued).unshift.apply(_a, __spreadArray([], __read(removedInProgressReq.map(function (req) {\n      return req.uploadPartInput;\n    })), false));\n  };\n  return AWSS3UploadTask;\n}();\nexport { AWSS3UploadTask };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spreadArray","to","from","pack","l","Array","slice","concat","Logger","createMultipartUpload","uploadPart","listObjectsV2","listParts","completeMultipartUpload","abortMultipartUpload","isCancelError","CANCELED_ERROR_MESSAGE","calculatePartSize","DEFAULT_PART_SIZE","DEFAULT_QUEUE_SIZE","MAX_OBJECT_SIZE","byteLength","isFile","UPLOADS_STORAGE_KEY","logger","AWSS3UploadTaskState","TaskEvents","comparePartNumber","a","b","PartNumber","AWSS3UploadTask","_a","s3Config","file","emitter","storage","params","level","prefixPromise","queueSize","partSize","inProgress","completedParts","queued","bytesUploaded","totalBytes","state","INIT","storageSync","size","fileId","_getFileId","_validateParams","on","ERROR","defineProperty","get","enumerable","configurable","IN_PROGRESS","_listSingleFile","key","bucket","objectKeyPrefix","_b","Contents","obj","_c","Bucket","Prefix","find","Key","name","lastModified","type","join","_findCachedUploadParts","uploadRequests","cachedUploadFileData","Parts","_d","_e","_listCachedUploadTasks","keys","parts","uploadId","lastTouched","Date","now","setItem","JSON","stringify","UploadId","_emitEvent","event","payload","emit","Error","tasks","getItem","parse","_cache","fileMetadata","_isCached","_removeFromCache","_onPartUploadCompletion","eTag","partNumber","chunk","ETag","UPLOAD_PROGRESS","loaded","total","filter","job","uploadPartInput","PAUSED","_startNextPart","_isDone","_completeUpload","err_1","MultipartUpload","sort","_verifyFileSize","UPLOAD_COMPLETE","COMPLETED","_makeUploadPartRequest","input","abortSignal","res","err_2","Body","log","CANCELLED","message","pause","abortController","AbortController","nextPart","shift","s3Request","signal","valid","e_1","Boolean","Size","_createParts","bodyStart","bodyEnd","Math","min","_initCachedUploadParts","cachedParts","reduce","acc","part","uploadedPartNumSet","Set","map","has","_initMultipartUpload","fileName","File","_initializeUploadTask","err_3","_startUpload","resume","warn","_cancel","err_4","removedInProgressReq","splice","forEach","req","abort","unshift"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3UploadTask.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { Logger } from '@aws-amplify/core';\nimport { createMultipartUpload, uploadPart, listObjectsV2, listParts, completeMultipartUpload, abortMultipartUpload, } from '../AwsClients/S3';\nimport { isCancelError, CANCELED_ERROR_MESSAGE } from '../AwsClients/S3/utils';\nimport { calculatePartSize, DEFAULT_PART_SIZE, DEFAULT_QUEUE_SIZE, MAX_OBJECT_SIZE, } from '../common/S3ClientUtils';\nimport { byteLength, isFile } from '../common/StorageUtils';\nimport { UPLOADS_STORAGE_KEY } from '../common/StorageConstants';\nvar logger = new Logger('AWSS3UploadTask');\nexport var AWSS3UploadTaskState;\n(function (AWSS3UploadTaskState) {\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"INIT\"] = 0] = \"INIT\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"IN_PROGRESS\"] = 1] = \"IN_PROGRESS\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"PAUSED\"] = 2] = \"PAUSED\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"CANCELLED\"] = 3] = \"CANCELLED\";\n    AWSS3UploadTaskState[AWSS3UploadTaskState[\"COMPLETED\"] = 4] = \"COMPLETED\";\n})(AWSS3UploadTaskState || (AWSS3UploadTaskState = {}));\nexport var TaskEvents;\n(function (TaskEvents) {\n    TaskEvents[\"CANCEL\"] = \"cancel\";\n    TaskEvents[\"UPLOAD_COMPLETE\"] = \"uploadComplete\";\n    TaskEvents[\"UPLOAD_PROGRESS\"] = \"uploadPartProgress\";\n    TaskEvents[\"ERROR\"] = \"error\";\n})(TaskEvents || (TaskEvents = {}));\nfunction comparePartNumber(a, b) {\n    return a.PartNumber - b.PartNumber;\n}\nvar AWSS3UploadTask = /** @class */ (function () {\n    function AWSS3UploadTask(_a) {\n        var s3Config = _a.s3Config, file = _a.file, emitter = _a.emitter, storage = _a.storage, params = _a.params, level = _a.level, prefixPromise = _a.prefixPromise;\n        this.queueSize = DEFAULT_QUEUE_SIZE;\n        this.partSize = DEFAULT_PART_SIZE;\n        this.inProgress = [];\n        this.completedParts = [];\n        this.queued = [];\n        this.bytesUploaded = 0;\n        this.totalBytes = 0;\n        this.state = AWSS3UploadTaskState.INIT;\n        this.prefixPromise = prefixPromise;\n        this.s3Config = s3Config;\n        this.storage = storage;\n        this.storageSync = Promise.resolve();\n        if (typeof this.storage['sync'] === 'function') {\n            this.storageSync = this.storage['sync']();\n        }\n        this.params = params;\n        this.file = file;\n        this.totalBytes = this.file.size;\n        this.bytesUploaded = 0;\n        this.emitter = emitter;\n        this.queued = [];\n        this.fileId = this._getFileId(level);\n        this._validateParams();\n        // event emitter will re-throw an error if an event emits an error unless there's a listener, attaching a no-op\n        // function to it unless user adds their own onError callback\n        this.emitter.on(TaskEvents.ERROR, function () { });\n    }\n    Object.defineProperty(AWSS3UploadTask.prototype, \"percent\", {\n        get: function () {\n            return (this.bytesUploaded / this.totalBytes) * 100;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AWSS3UploadTask.prototype, \"isInProgress\", {\n        get: function () {\n            return this.state === AWSS3UploadTaskState.IN_PROGRESS;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AWSS3UploadTask.prototype._listSingleFile = function (_a) {\n        var key = _a.key, bucket = _a.bucket;\n        return __awaiter(this, void 0, void 0, function () {\n            var objectKeyPrefix, _b, Contents, obj;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.prefixPromise];\n                    case 1:\n                        objectKeyPrefix = _c.sent();\n                        return [4 /*yield*/, listObjectsV2(this.s3Config, {\n                                Bucket: bucket,\n                                Prefix: objectKeyPrefix + key,\n                            })];\n                    case 2:\n                        _b = (_c.sent()).Contents, Contents = _b === void 0 ? [] : _b;\n                        obj = Contents.find(function (o) { return o.Key === \"\".concat(objectKeyPrefix).concat(key); });\n                        return [2 /*return*/, obj];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._getFileId = function (level) {\n        // We should check if it's a File first because File is also instance of a Blob\n        if (isFile(this.file)) {\n            return [\n                this.file.name,\n                this.file.lastModified,\n                this.file.size,\n                this.file.type,\n                this.params.Bucket,\n                level,\n                this.params.Key,\n            ].join('-');\n        }\n        else {\n            return [\n                this.file.size,\n                this.file.type,\n                this.params.Bucket,\n                level,\n                this.params.Key,\n            ].join('-');\n        }\n    };\n    AWSS3UploadTask.prototype._findCachedUploadParts = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var uploadRequests, cachedUploadFileData, _a, Parts, _b, _c;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0: return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1:\n                        uploadRequests = _e.sent();\n                        if (Object.keys(uploadRequests).length === 0 ||\n                            !Object.prototype.hasOwnProperty.call(uploadRequests, this.fileId)) {\n                            return [2 /*return*/, { parts: [], uploadId: null }];\n                        }\n                        cachedUploadFileData = uploadRequests[this.fileId];\n                        cachedUploadFileData.lastTouched = Date.now();\n                        this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n                        _b = listParts;\n                        _c = [this.s3Config];\n                        _d = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 2: return [4 /*yield*/, _b.apply(void 0, _c.concat([(_d.Key = (_e.sent()) + this.params.Key,\n                                _d.UploadId = cachedUploadFileData.uploadId,\n                                _d)]))];\n                    case 3:\n                        _a = (_e.sent()).Parts, Parts = _a === void 0 ? [] : _a;\n                        return [2 /*return*/, {\n                                parts: Parts,\n                                uploadId: cachedUploadFileData.uploadId,\n                            }];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._emitEvent = function (event, payload) {\n        this.emitter.emit(event, payload);\n    };\n    AWSS3UploadTask.prototype._validateParams = function () {\n        if (this.totalBytes > MAX_OBJECT_SIZE) {\n            throw new Error(\"File size bigger than S3 Object limit of 5TB, got \".concat(this.totalBytes, \" Bytes\"));\n        }\n    };\n    AWSS3UploadTask.prototype._listCachedUploadTasks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var tasks;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.storageSync];\n                    case 1:\n                        _a.sent();\n                        tasks = this.storage.getItem(UPLOADS_STORAGE_KEY) || '{}';\n                        return [2 /*return*/, JSON.parse(tasks)];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._cache = function (fileMetadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var uploadRequests;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1:\n                        uploadRequests = _a.sent();\n                        uploadRequests[this.fileId] = fileMetadata;\n                        this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._isCached = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = Object.prototype.hasOwnProperty).call;\n                        return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent(), this.fileId])];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._removeFromCache = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var uploadRequests;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._listCachedUploadTasks()];\n                    case 1:\n                        uploadRequests = _a.sent();\n                        delete uploadRequests[this.fileId];\n                        this.storage.setItem(UPLOADS_STORAGE_KEY, JSON.stringify(uploadRequests));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._onPartUploadCompletion = function (_a) {\n        var eTag = _a.eTag, partNumber = _a.partNumber, chunk = _a.chunk;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                this.completedParts.push({\n                    ETag: eTag,\n                    PartNumber: partNumber,\n                });\n                this.bytesUploaded += byteLength(chunk);\n                this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n                    loaded: this.bytesUploaded,\n                    total: this.totalBytes,\n                });\n                // Remove the completed item from the inProgress array\n                this.inProgress = this.inProgress.filter(function (job) { return job.uploadPartInput.PartNumber !== partNumber; });\n                if (this.queued.length && this.state !== AWSS3UploadTaskState.PAUSED)\n                    this._startNextPart();\n                if (this._isDone())\n                    this._completeUpload();\n                return [2 /*return*/];\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._completeUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, err_1;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _d.trys.push([0, 4, , 5]);\n                        _a = completeMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.Key = (_d.sent()) + this.params.Key,\n                                _c.UploadId = this.uploadId,\n                                _c.MultipartUpload = {\n                                    // Parts are not always completed in order, we need to manually sort them\n                                    Parts: __spreadArray([], __read(this.completedParts), false).sort(comparePartNumber),\n                                },\n                                _c)]))];\n                    case 2:\n                        _d.sent();\n                        return [4 /*yield*/, this._verifyFileSize()];\n                    case 3:\n                        _d.sent();\n                        this._emitEvent(TaskEvents.UPLOAD_COMPLETE, {\n                            key: this.params.Key,\n                        });\n                        this._removeFromCache();\n                        this.state = AWSS3UploadTaskState.COMPLETED;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_1 = _d.sent();\n                        logger.error('error completing upload', err_1);\n                        this._emitEvent(TaskEvents.ERROR, err_1);\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._makeUploadPartRequest = function (input, abortSignal) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, _c, err_2;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 4, , 5]);\n                        _a = uploadPart;\n                        _b = [__assign(__assign({}, this.s3Config), { abortSignal: abortSignal })];\n                        _c = [__assign({}, input)];\n                        _d = {};\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = (_e.sent()) + this.params.Key, _d)]))]))];\n                    case 2:\n                        res = _e.sent();\n                        return [4 /*yield*/, this._onPartUploadCompletion({\n                                eTag: res.ETag,\n                                partNumber: input.PartNumber,\n                                chunk: input.Body,\n                            })];\n                    case 3:\n                        _e.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_2 = _e.sent();\n                        if (this.state === AWSS3UploadTaskState.PAUSED) {\n                            logger.log('upload paused');\n                        }\n                        else if (this.state === AWSS3UploadTaskState.CANCELLED) {\n                            logger.log('upload aborted');\n                        }\n                        else {\n                            logger.error('error starting next part of upload: ', err_2);\n                        }\n                        // xhr transfer handlers' cancel will also throw an error, however we don't need to emit an event in that case as it's an\n                        // expected behavior\n                        if (!isCancelError(err_2) && err_2.message !== CANCELED_ERROR_MESSAGE) {\n                            this._emitEvent(TaskEvents.ERROR, err_2);\n                            this.pause();\n                        }\n                        return [3 /*break*/, 5];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._startNextPart = function () {\n        if (this.queued.length > 0 && this.state !== AWSS3UploadTaskState.PAUSED) {\n            var abortController = new AbortController();\n            var nextPart = this.queued.shift();\n            this.inProgress.push({\n                uploadPartInput: nextPart,\n                s3Request: this._makeUploadPartRequest(nextPart, abortController.signal),\n                abortController: abortController,\n            });\n        }\n    };\n    /**\n     * Verify on S3 side that the file size matches the one on the client side.\n     *\n     * @async\n     * @throws throws an error if the file size does not match between local copy of the file and the file on s3.\n     */\n    AWSS3UploadTask.prototype._verifyFileSize = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var valid, obj, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this._listSingleFile({\n                                key: this.params.Key,\n                                bucket: this.params.Bucket,\n                            })];\n                    case 1:\n                        obj = _a.sent();\n                        valid = Boolean(obj && obj.Size === this.file.size);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        e_1 = _a.sent();\n                        logger.log('Could not get file on s3 for size matching: ', e_1);\n                        // Don't gate verification on auth or other errors\n                        // unrelated to file size verification\n                        return [2 /*return*/];\n                    case 3:\n                        if (!valid) {\n                            throw new Error('File size does not match between local file and file on s3');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._isDone = function () {\n        return (!this.queued.length &&\n            !this.inProgress.length &&\n            this.bytesUploaded === this.totalBytes);\n    };\n    AWSS3UploadTask.prototype._createParts = function () {\n        var size = this.file.size;\n        var parts = [];\n        for (var bodyStart = 0; bodyStart < size;) {\n            var bodyEnd = Math.min(bodyStart + this.partSize, size);\n            parts.push({\n                Body: this.file.slice(bodyStart, bodyEnd),\n                Key: this.params.Key,\n                Bucket: this.params.Bucket,\n                PartNumber: parts.length + 1,\n                UploadId: this.uploadId,\n            });\n            bodyStart += this.partSize;\n        }\n        return parts;\n    };\n    AWSS3UploadTask.prototype._initCachedUploadParts = function (cachedParts) {\n        this.bytesUploaded += cachedParts.reduce(function (acc, part) { return acc + part.Size; }, 0);\n        // Find the set of part numbers that have already been uploaded\n        var uploadedPartNumSet = new Set(cachedParts.map(function (part) { return part.PartNumber; }));\n        this.queued = this.queued.filter(function (part) { return !uploadedPartNumSet.has(part.PartNumber); });\n        this.completedParts = cachedParts.map(function (part) { return ({\n            PartNumber: part.PartNumber,\n            ETag: part.ETag,\n        }); });\n        this._emitEvent(TaskEvents.UPLOAD_PROGRESS, {\n            loaded: this.bytesUploaded,\n            total: this.totalBytes,\n        });\n    };\n    AWSS3UploadTask.prototype._initMultipartUpload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, _a, _b, _c;\n            var _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = createMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = [__assign({}, this.params)];\n                        _d = {};\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 1: return [4 /*yield*/, _a.apply(void 0, _b.concat([__assign.apply(void 0, _c.concat([(_d.Key = (_e.sent()) + this.params.Key, _d)]))]))];\n                    case 2:\n                        res = _e.sent();\n                        this._cache({\n                            uploadId: res.UploadId,\n                            lastTouched: Date.now(),\n                            bucket: this.params.Bucket,\n                            key: this.params.Key,\n                            fileName: this.file instanceof File ? this.file.name : '',\n                        });\n                        return [2 /*return*/, res.UploadId];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype._initializeUploadTask = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, parts, uploadId, uploadId, err_3;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.state = AWSS3UploadTaskState.IN_PROGRESS;\n                        this.partSize = calculatePartSize(this.totalBytes);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 7, , 8]);\n                        return [4 /*yield*/, this._isCached()];\n                    case 2:\n                        if (!_b.sent()) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._findCachedUploadParts()];\n                    case 3:\n                        _a = _b.sent(), parts = _a.parts, uploadId = _a.uploadId;\n                        this.uploadId = uploadId;\n                        this.queued = this._createParts();\n                        this._initCachedUploadParts(parts);\n                        if (this._isDone()) {\n                            this._completeUpload();\n                        }\n                        else {\n                            this._startUpload();\n                        }\n                        return [3 /*break*/, 6];\n                    case 4:\n                        if (!!this.uploadId) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._initMultipartUpload()];\n                    case 5:\n                        uploadId = _b.sent();\n                        this.uploadId = uploadId;\n                        this.queued = this._createParts();\n                        this._startUpload();\n                        _b.label = 6;\n                    case 6: return [3 /*break*/, 8];\n                    case 7:\n                        err_3 = _b.sent();\n                        if (!isCancelError(err_3)) {\n                            logger.error('Error initializing the upload task', err_3);\n                            this._emitEvent(TaskEvents.ERROR, err_3);\n                        }\n                        return [3 /*break*/, 8];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSS3UploadTask.prototype.resume = function () {\n        if (this.state === AWSS3UploadTaskState.CANCELLED) {\n            logger.warn('This task has already been cancelled');\n        }\n        else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n            logger.warn('This task has already been completed');\n        }\n        else if (this.state === AWSS3UploadTaskState.IN_PROGRESS) {\n            logger.warn('Upload task already in progress');\n            // first time running resume, find any cached parts on s3 or start a new multipart upload request before\n            // starting the upload\n        }\n        else if (!this.uploadId) {\n            this._initializeUploadTask();\n        }\n        else {\n            this._startUpload();\n        }\n    };\n    AWSS3UploadTask.prototype._startUpload = function () {\n        this.state = AWSS3UploadTaskState.IN_PROGRESS;\n        for (var i = 0; i < this.queueSize; i++) {\n            this._startNextPart();\n        }\n    };\n    AWSS3UploadTask.prototype._cancel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, err_4;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!(this.state === AWSS3UploadTaskState.CANCELLED)) return [3 /*break*/, 1];\n                        logger.warn('This task has already been cancelled');\n                        return [2 /*return*/, false];\n                    case 1:\n                        if (!(this.state === AWSS3UploadTaskState.COMPLETED)) return [3 /*break*/, 2];\n                        logger.warn('This task has already been completed');\n                        return [2 /*return*/, false];\n                    case 2:\n                        this.pause();\n                        this.queued = [];\n                        this.completedParts = [];\n                        this.bytesUploaded = 0;\n                        this.state = AWSS3UploadTaskState.CANCELLED;\n                        _d.label = 3;\n                    case 3:\n                        _d.trys.push([3, 7, , 8]);\n                        _a = abortMultipartUpload;\n                        _b = [this.s3Config];\n                        _c = {\n                            Bucket: this.params.Bucket\n                        };\n                        return [4 /*yield*/, this.prefixPromise];\n                    case 4: return [4 /*yield*/, _a.apply(void 0, _b.concat([(_c.Key = (_d.sent()) + this.params.Key,\n                                _c.UploadId = this.uploadId,\n                                _c)]))];\n                    case 5:\n                        _d.sent();\n                        return [4 /*yield*/, this._removeFromCache()];\n                    case 6:\n                        _d.sent();\n                        return [2 /*return*/, true];\n                    case 7:\n                        err_4 = _d.sent();\n                        logger.error('Error cancelling upload task', err_4);\n                        return [2 /*return*/, false];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * pause this particular upload task\n     **/\n    AWSS3UploadTask.prototype.pause = function () {\n        var _a;\n        if (this.state === AWSS3UploadTaskState.CANCELLED) {\n            logger.warn('This task has already been cancelled');\n        }\n        else if (this.state === AWSS3UploadTaskState.COMPLETED) {\n            logger.warn('This task has already been completed');\n        }\n        else if (this.state === AWSS3UploadTaskState.PAUSED) {\n            logger.warn('This task is already paused');\n        }\n        this.state = AWSS3UploadTaskState.PAUSED;\n        // Abort the part request immediately\n        // Add the inProgress parts back to pending\n        var removedInProgressReq = this.inProgress.splice(0, this.inProgress.length);\n        removedInProgressReq.forEach(function (req) {\n            req.abortController.abort();\n        });\n        // Put all removed in progress parts back into the queue\n        (_a = this.queued).unshift.apply(_a, __spreadArray([], __read(removedInProgressReq.map(function (req) { return req.uploadPartInput; })), false));\n    };\n    return AWSS3UploadTask;\n}());\nexport { AWSS3UploadTask };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}