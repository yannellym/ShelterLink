{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  _s();\n  const location = useLocation();\n  const state = location.state;\n\n  // Define the currentPage state at the top level\n  const [currentPage, setCurrentPage] = useState(1);\n  const [petsToDisplay, setPetsToDisplay] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [maxPage, setMaxPage] = useState(9); // Max page to show page numbers for\n\n  // Function to fetch pets for the current page\n  const fetchPetsForCurrentPage = async page => {\n    // Replace the URL with your API endpoint\n    const endpoint = `http://localhost:3002/api/petfinder?type=${state.petType}&limit=100&page=${page}`;\n    try {\n      const response = await fetch(endpoint);\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.animals && data.animals.length > 0) {\n        const startIndex = (page - 1) * 20;\n        const endIndex = startIndex + 20;\n        const pets = data.animals.slice(startIndex, endIndex);\n        return pets;\n      } else {\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      return [];\n    }\n  };\n\n  // Function to handle moving to a different page\n  const handlePageChange = async newPage => {\n    if (newPage >= 1 && newPage <= maxPage) {\n      setCurrentPage(newPage);\n      setLoading(true);\n      const pets = await fetchPetsForCurrentPage(newPage);\n      setPetsToDisplay(pets);\n      setLoading(false);\n    }\n  };\n\n  // Function to handle updating max page\n  const updateMaxPage = () => {\n    if (currentPage === maxPage) {\n      setMaxPage(maxPage + 10); // Increase max page by 10 when approaching the current max page\n    }\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, [state.petType, currentPage]);\n  useEffect(() => {\n    updateMaxPage();\n  }, [currentPage, maxPage]);\n\n  // Create an array of page numbers\n  const pageNumbers = Array.from({\n    length: maxPage\n  }, (_, i) => i + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-specific-pets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"search-results-title\",\n      children: \"Search Results for:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pet-type-title\",\n      children: [\"All \", state.petType, \"s in the \", state.searchText, \" area\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-card-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : petsToDisplay.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-animals-message\",\n        children: \"No animals found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : petsToDisplay.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet,\n        addToFavorites: addToFavorites,\n        removeFromFavorites: removeFromFavorites,\n        isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-numbers\",\n        children: pageNumbers.map(pageNumber => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePageChange(pageNumber),\n          className: currentPage === pageNumber ? 'active' : '',\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: petsToDisplay.length < 20,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSpecificPets, \"tNAVh0Wz/R+cJAJMl3EFpJ2+QYY=\", false, function () {\n  return [useLocation];\n});\n_c = LocationSpecificPets;\nexport default LocationSpecificPets;\nvar _c;\n$RefreshReg$(_c, \"LocationSpecificPets\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","PetCard","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","LocationSpecificPets","favoritePets","addToFavorites","removeFromFavorites","_s","location","state","currentPage","setCurrentPage","petsToDisplay","setPetsToDisplay","loading","setLoading","maxPage","setMaxPage","fetchPetsForCurrentPage","page","endpoint","petType","response","fetch","ok","Error","status","data","json","animals","startIndex","endIndex","pets","slice","error","console","message","handlePageChange","newPage","updateMaxPage","pageNumbers","Array","from","_","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchText","map","pet","isFavorite","some","favoritePet","id","onClick","disabled","pageNumber","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/LocationSpecificPets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  const location = useLocation();\n  const state = location.state;\n\n  // Define the currentPage state at the top level\n  const [currentPage, setCurrentPage] = useState(1);\n  const [petsToDisplay, setPetsToDisplay] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [maxPage, setMaxPage] = useState(9); // Max page to show page numbers for\n\n  // Function to fetch pets for the current page\n  const fetchPetsForCurrentPage = async (page) => {\n    // Replace the URL with your API endpoint\n    const endpoint = `http://localhost:3002/api/petfinder?type=${state.petType}&limit=100&page=${page}`;\n\n    try {\n      const response = await fetch(endpoint);\n      if (!response.ok) {\n        throw new Error(`Request failed with status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      if (data.animals && data.animals.length > 0) {\n        const startIndex = (page - 1) * 20;\n        const endIndex = startIndex + 20;\n        const pets = data.animals.slice(startIndex, endIndex);\n        return pets;\n      } else {\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      return [];\n    }\n  };\n\n  // Function to handle moving to a different page\n  const handlePageChange = async (newPage) => {\n    if (newPage >= 1 && newPage <= maxPage) {\n      setCurrentPage(newPage);\n      setLoading(true);\n      const pets = await fetchPetsForCurrentPage(newPage);\n      setPetsToDisplay(pets);\n      setLoading(false);\n    }\n  };\n\n  // Function to handle updating max page\n  const updateMaxPage = () => {\n    if (currentPage === maxPage) {\n      setMaxPage(maxPage + 10); // Increase max page by 10 when approaching the current max page\n    }\n  };\n\n  useEffect(() => {\n    handlePageChange(currentPage);\n  }, [state.petType, currentPage]);\n\n  useEffect(() => {\n    updateMaxPage();\n  }, [currentPage, maxPage]);\n\n  // Create an array of page numbers\n  const pageNumbers = Array.from({ length: maxPage }, (_, i) => i + 1);\n\n  return (\n    <div className=\"location-specific-pets\">\n      <h2 className=\"search-results-title\">Search Results for:</h2>\n      <h3 className=\"pet-type-title\">All {state.petType}s in the {state.searchText} area</h3>\n      <div className=\"pet-card-container\">\n        {loading ? (\n          <p className=\"loading\">Loading...</p>\n        ) : petsToDisplay.length === 0 ? (\n          <p className=\"no-animals-message\">No animals found.</p>\n        ) : (\n          petsToDisplay.map((pet) => (\n            <PetCard\n              key={pet.id}\n              pet={pet}\n              addToFavorites={addToFavorites}\n              removeFromFavorites={removeFromFavorites}\n              isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n            />\n          ))\n        )}\n      </div>\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous Page\n        </button>\n        <div className=\"page-numbers\">\n          {pageNumbers.map((pageNumber) => (\n            <button\n              key={pageNumber}\n              onClick={() => handlePageChange(pageNumber)}\n              className={currentPage === pageNumber ? 'active' : ''}\n            >\n              {pageNumber}\n            </button>\n          ))}\n        </div>\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n          disabled={petsToDisplay.length < 20}\n        >\n          Next Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LocationSpecificPets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}