{"ast":null,"code":"'use strict';\n\nconst mapObj = require('map-obj');\nconst camelCase = require('camelcase');\nconst QuickLru = require('quick-lru');\nconst has = (array, key) => array.some(x => {\n  if (typeof x === 'string') {\n    return x === key;\n  }\n  x.lastIndex = 0;\n  return x.test(key);\n});\nconst cache = new QuickLru({\n  maxSize: 100000\n});\n\n// Reproduces behavior from `map-obj`\nconst isObject = value => typeof value === 'object' && value !== null && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\nconst camelCaseConvert = (input, options) => {\n  if (!isObject(input)) {\n    return input;\n  }\n  options = {\n    deep: false,\n    pascalCase: false,\n    ...options\n  };\n  const {\n    exclude,\n    pascalCase,\n    stopPaths,\n    deep\n  } = options;\n  const stopPathsSet = new Set(stopPaths);\n  const makeMapper = parentPath => (key, value) => {\n    if (deep && isObject(value)) {\n      const path = parentPath === undefined ? key : `${parentPath}.${key}`;\n      if (!stopPathsSet.has(path)) {\n        value = mapObj(value, makeMapper(path));\n      }\n    }\n    if (!(exclude && has(exclude, key))) {\n      const cacheKey = pascalCase ? `${key}_` : key;\n      if (cache.has(cacheKey)) {\n        key = cache.get(cacheKey);\n      } else {\n        const ret = camelCase(key, {\n          pascalCase\n        });\n        if (key.length < 100) {\n          // Prevent abuse\n          cache.set(cacheKey, ret);\n        }\n        key = ret;\n      }\n    }\n    return [key, value];\n  };\n  return mapObj(input, makeMapper(undefined));\n};\nmodule.exports = (input, options) => {\n  if (Array.isArray(input)) {\n    return Object.keys(input).map(key => camelCaseConvert(input[key], options));\n  }\n  return camelCaseConvert(input, options);\n};","map":{"version":3,"names":["mapObj","require","camelCase","QuickLru","has","array","key","some","x","lastIndex","test","cache","maxSize","isObject","value","RegExp","Error","Date","camelCaseConvert","input","options","deep","pascalCase","exclude","stopPaths","stopPathsSet","Set","makeMapper","parentPath","path","undefined","cacheKey","get","ret","length","set","module","exports","Array","isArray","Object","keys","map"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/camelcase-keys/index.js"],"sourcesContent":["'use strict';\nconst mapObj = require('map-obj');\nconst camelCase = require('camelcase');\nconst QuickLru = require('quick-lru');\n\nconst has = (array, key) => array.some(x => {\n\tif (typeof x === 'string') {\n\t\treturn x === key;\n\t}\n\n\tx.lastIndex = 0;\n\treturn x.test(key);\n});\n\nconst cache = new QuickLru({maxSize: 100000});\n\n// Reproduces behavior from `map-obj`\nconst isObject = value =>\n\ttypeof value === 'object' &&\n\tvalue !== null &&\n\t!(value instanceof RegExp) &&\n\t!(value instanceof Error) &&\n\t!(value instanceof Date);\n\nconst camelCaseConvert = (input, options) => {\n\tif (!isObject(input)) {\n\t\treturn input;\n\t}\n\n\toptions = {\n\t\tdeep: false,\n\t\tpascalCase: false,\n\t\t...options\n\t};\n\n\tconst {exclude, pascalCase, stopPaths, deep} = options;\n\n\tconst stopPathsSet = new Set(stopPaths);\n\n\tconst makeMapper = parentPath => (key, value) => {\n\t\tif (deep && isObject(value)) {\n\t\t\tconst path = parentPath === undefined ? key : `${parentPath}.${key}`;\n\n\t\t\tif (!stopPathsSet.has(path)) {\n\t\t\t\tvalue = mapObj(value, makeMapper(path));\n\t\t\t}\n\t\t}\n\n\t\tif (!(exclude && has(exclude, key))) {\n\t\t\tconst cacheKey = pascalCase ? `${key}_` : key;\n\n\t\t\tif (cache.has(cacheKey)) {\n\t\t\t\tkey = cache.get(cacheKey);\n\t\t\t} else {\n\t\t\t\tconst ret = camelCase(key, {pascalCase});\n\n\t\t\t\tif (key.length < 100) { // Prevent abuse\n\t\t\t\t\tcache.set(cacheKey, ret);\n\t\t\t\t}\n\n\t\t\t\tkey = ret;\n\t\t\t}\n\t\t}\n\n\t\treturn [key, value];\n\t};\n\n\treturn mapObj(input, makeMapper(undefined));\n};\n\nmodule.exports = (input, options) => {\n\tif (Array.isArray(input)) {\n\t\treturn Object.keys(input).map(key => camelCaseConvert(input[key], options));\n\t}\n\n\treturn camelCaseConvert(input, options);\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAW,CAAC;AACtC,MAAME,QAAQ,GAAGF,OAAO,CAAC,WAAW,CAAC;AAErC,MAAMG,GAAG,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAKD,KAAK,CAACE,IAAI,CAACC,CAAC,IAAI;EAC3C,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;IAC1B,OAAOA,CAAC,KAAKF,GAAG;EACjB;EAEAE,CAAC,CAACC,SAAS,GAAG,CAAC;EACf,OAAOD,CAAC,CAACE,IAAI,CAACJ,GAAG,CAAC;AACnB,CAAC,CAAC;AAEF,MAAMK,KAAK,GAAG,IAAIR,QAAQ,CAAC;EAACS,OAAO,EAAE;AAAM,CAAC,CAAC;;AAE7C;AACA,MAAMC,QAAQ,GAAGC,KAAK,IACrB,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACd,EAAEA,KAAK,YAAYC,MAAM,CAAC,IAC1B,EAAED,KAAK,YAAYE,KAAK,CAAC,IACzB,EAAEF,KAAK,YAAYG,IAAI,CAAC;AAEzB,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;EAC5C,IAAI,CAACP,QAAQ,CAACM,KAAK,CAAC,EAAE;IACrB,OAAOA,KAAK;EACb;EAEAC,OAAO,GAAG;IACTC,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,KAAK;IACjB,GAAGF;EACJ,CAAC;EAED,MAAM;IAACG,OAAO;IAAED,UAAU;IAAEE,SAAS;IAAEH;EAAI,CAAC,GAAGD,OAAO;EAEtD,MAAMK,YAAY,GAAG,IAAIC,GAAG,CAACF,SAAS,CAAC;EAEvC,MAAMG,UAAU,GAAGC,UAAU,IAAI,CAACtB,GAAG,EAAEQ,KAAK,KAAK;IAChD,IAAIO,IAAI,IAAIR,QAAQ,CAACC,KAAK,CAAC,EAAE;MAC5B,MAAMe,IAAI,GAAGD,UAAU,KAAKE,SAAS,GAAGxB,GAAG,GAAI,GAAEsB,UAAW,IAAGtB,GAAI,EAAC;MAEpE,IAAI,CAACmB,YAAY,CAACrB,GAAG,CAACyB,IAAI,CAAC,EAAE;QAC5Bf,KAAK,GAAGd,MAAM,CAACc,KAAK,EAAEa,UAAU,CAACE,IAAI,CAAC,CAAC;MACxC;IACD;IAEA,IAAI,EAAEN,OAAO,IAAInB,GAAG,CAACmB,OAAO,EAAEjB,GAAG,CAAC,CAAC,EAAE;MACpC,MAAMyB,QAAQ,GAAGT,UAAU,GAAI,GAAEhB,GAAI,GAAE,GAAGA,GAAG;MAE7C,IAAIK,KAAK,CAACP,GAAG,CAAC2B,QAAQ,CAAC,EAAE;QACxBzB,GAAG,GAAGK,KAAK,CAACqB,GAAG,CAACD,QAAQ,CAAC;MAC1B,CAAC,MAAM;QACN,MAAME,GAAG,GAAG/B,SAAS,CAACI,GAAG,EAAE;UAACgB;QAAU,CAAC,CAAC;QAExC,IAAIhB,GAAG,CAAC4B,MAAM,GAAG,GAAG,EAAE;UAAE;UACvBvB,KAAK,CAACwB,GAAG,CAACJ,QAAQ,EAAEE,GAAG,CAAC;QACzB;QAEA3B,GAAG,GAAG2B,GAAG;MACV;IACD;IAEA,OAAO,CAAC3B,GAAG,EAAEQ,KAAK,CAAC;EACpB,CAAC;EAED,OAAOd,MAAM,CAACmB,KAAK,EAAEQ,UAAU,CAACG,SAAS,CAAC,CAAC;AAC5C,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAG,CAAClB,KAAK,EAAEC,OAAO,KAAK;EACpC,IAAIkB,KAAK,CAACC,OAAO,CAACpB,KAAK,CAAC,EAAE;IACzB,OAAOqB,MAAM,CAACC,IAAI,CAACtB,KAAK,CAAC,CAACuB,GAAG,CAACpC,GAAG,IAAIY,gBAAgB,CAACC,KAAK,CAACb,GAAG,CAAC,EAAEc,OAAO,CAAC,CAAC;EAC5E;EAEA,OAAOF,gBAAgB,CAACC,KAAK,EAAEC,OAAO,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}