{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  _s();\n  const location = useLocation();\n  const state = location.state;\n  const navigate = useNavigate(); // Define useNavigate\n  const [currentPage, setCurrentPage] = useState(1); // Current page state\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9;\n  const [loading, setLoading] = useState(true);\n\n  // Fetch function to retrieve data for the current page\n  const fetchPetsForCurrentPage = async (category, page) => {\n    // Add your fetching logic here (similar to the AllPetsPage component)\n  };\n  useEffect(() => {\n    // Initial data fetch when the component mounts\n    async function fetchData() {\n      const animals = await fetchPetsForCurrentPage(category, currentPage);\n      setCache(animals);\n      setLoading(false);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n  const pageButtons = Array.from({\n    length: buttonsToShow\n  }, (_, i) => startPage + i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n          value: searchText,\n          onChange: setSearchText,\n          onSelect: handleSelect,\n          searchOptions: searchOptions,\n          children: ({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps({\n                placeholder: 'Enter zipcode, city, or state',\n                className: 'search-input',\n                onClick: handleInputClick\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocomplete-dropdown-container\",\n              children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 31\n              }, this), suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n                ...getSuggestionItemProps(suggestion),\n                className: \"suggestion-item\",\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), showLocationMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `location-button ${locationButtonClicked ? 'blue-border' : ''}`,\n              onClick: handleShareLocation,\n              children: \"Share Location \\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: petType,\n        onChange: e => setPetType(e.target.value),\n        className: \"search-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select pet type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dog\",\n          children: \"Dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat\",\n          children: \"Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"horse\",\n          children: \"Horse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bird\",\n          children: \"Bird\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"barnyard\",\n          children: \"Barnyard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/location-specific-pets\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSpecificPets, \"azKh2Zog4uuGrDqr2URGwyr0tD0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = LocationSpecificPets;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"LocationSpecificPets\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","PetCard","jsxDEV","_jsxDEV","LocationSpecificPets","favoritePets","addToFavorites","removeFromFavorites","_s","location","state","navigate","currentPage","setCurrentPage","cache","setCache","petsPerPage","otherAnimalTypes","buttonsToShow","loading","setLoading","fetchPetsForCurrentPage","category","page","fetchData","animals","window","scrollTo","top","behavior","handlePageChange","newPage","startPage","Math","max","floor","endPage","pageButtons","Array","from","length","_","i","className","children","PlacesAutocomplete","value","searchText","onChange","setSearchText","onSelect","handleSelect","searchOptions","getInputProps","suggestions","getSuggestionItemProps","placeholder","onClick","handleInputClick","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","description","showLocationMessage","locationButtonClicked","handleShareLocation","petType","e","setPetType","target","Link","to","handleSearch","_c","SearchBar","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport PetCard from './PetCard';\nimport '../styles/LocationSpecificPets.css';\n\nconst LocationSpecificPets = ({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) => {\n  const location = useLocation();\n  const state = location.state;\n  const navigate = useNavigate(); // Define useNavigate\n  const [currentPage, setCurrentPage] = useState(1); // Current page state\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9;\n  const [loading, setLoading] = useState(true);\n\n  // Fetch function to retrieve data for the current page\n  const fetchPetsForCurrentPage = async (category, page) => {\n    // Add your fetching logic here (similar to the AllPetsPage component)\n  };\n\n  useEffect(() => {\n    // Initial data fetch when the component mounts\n    async function fetchData() {\n      const animals = await fetchPetsForCurrentPage(category, currentPage);\n      setCache(animals);\n      setLoading(false);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = startPage + buttonsToShow - 1;\n  const pageButtons = Array.from({ length: buttonsToShow }, (_, i) => startPage + i);\n\n  return (\n    <div className=\"search-bar\">\n      <div className=\"search-container\">\n        <div className=\"search-input-container\">\n          <PlacesAutocomplete\n            value={searchText}\n            onChange={setSearchText}\n            onSelect={handleSelect}\n            searchOptions={searchOptions}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <input\n                  {...getInputProps({\n                    placeholder: 'Enter zipcode, city, or state',\n                    className: 'search-input',\n                    onClick: handleInputClick,\n                  })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => (\n                    <div\n                      {...getSuggestionItemProps(suggestion)}\n                      className=\"suggestion-item\"\n                    >\n                      {suggestion.description}\n                    </div>\n                  ))}\n                </div>\n                {showLocationMessage && (\n                  <button\n                  className={`location-button ${locationButtonClicked ? 'blue-border' : ''}`}\n                  onClick={handleShareLocation}\n                  >\n                  Share Location 📍\n\n                </button>\n                \n                )}\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n        <select\n          value={petType}\n          onChange={(e) => setPetType(e.target.value)}\n          className=\"search-select\"\n        >\n          <option value=\"\">Select pet type</option>\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"horse\">Horse</option>\n          <option value=\"bird\">Bird</option>\n          <option value=\"barnyard\">Barnyard</option>\n        </select>\n        <Link to=\"/location-specific-pets\">\n          <button className=\"search-button\" onClick={handleSearch} >Search</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}