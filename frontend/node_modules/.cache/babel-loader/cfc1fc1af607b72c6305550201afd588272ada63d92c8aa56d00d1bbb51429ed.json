{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\nimport { Signer, Credentials } from '@aws-amplify/core';\nvar SERVICE_NAME = 'iotdevicegateway';\nvar AWSIoTProvider = /** @class */function (_super) {\n  __extends(AWSIoTProvider, _super);\n  function AWSIoTProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return _super.call(this, options) || this;\n  }\n  Object.defineProperty(AWSIoTProvider.prototype, \"region\", {\n    get: function () {\n      return this.options['aws_pubsub_region'];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  AWSIoTProvider.prototype.getProviderName = function () {\n    return 'AWSIoTProvider';\n  };\n  Object.defineProperty(AWSIoTProvider.prototype, \"endpoint\", {\n    get: function () {\n      var _this = this;\n      return function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var endpoint, serviceInfo, _a, access_key, secret_key, session_token, result;\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                endpoint = this.options.aws_pubsub_endpoint;\n                serviceInfo = {\n                  service: SERVICE_NAME,\n                  region: this.region\n                };\n                return [4 /*yield*/, Credentials.get()];\n              case 1:\n                _a = _b.sent(), access_key = _a.accessKeyId, secret_key = _a.secretAccessKey, session_token = _a.sessionToken;\n                result = Signer.signUrl(endpoint, {\n                  access_key: access_key,\n                  secret_key: secret_key,\n                  session_token: session_token\n                }, serviceInfo);\n                return [2 /*return*/, result];\n            }\n          });\n        });\n      }();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AWSIoTProvider;\n}(MqttOverWSProvider);\nexport { AWSIoTProvider };","map":{"version":3,"names":["MqttOverWSProvider","Signer","Credentials","SERVICE_NAME","AWSIoTProvider","_super","__extends","options","call","Object","defineProperty","prototype","get","getProviderName","_this","__awaiter","endpoint","aws_pubsub_endpoint","serviceInfo","service","region","_a","_b","sent","access_key","accessKeyId","secret_key","secretAccessKey","session_token","sessionToken","result","signUrl"],"sources":["../../src/Providers/AWSIotProvider.ts"],"sourcesContent":[null],"mappings":";AAAA;AACA;AACA,SAASA,kBAAkB,QAA6B,sBAAsB;AAC9E,SAASC,MAAM,EAAEC,WAAW,QAAQ,mBAAmB;AAEvD,IAAMC,YAAY,GAAG,kBAAkB;AAOvC,IAAAC,cAAA,0BAAAC,MAAA;EAAoCC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EACnC,SAAAD,eAAYG,OAAmC;IAAnC,IAAAA,OAAA;MAAAA,OAAA,KAAmC;IAAA;WAC9CF,MAAA,CAAAG,IAAA,OAAMD,OAAO,CAAC;EACf;EAEAE,MAAA,CAAAC,cAAA,CAAcN,cAAA,CAAAO,SAAA,UAAM;SAApB,SAAAC,CAAA;MACC,OAAO,IAAI,CAACL,OAAO,CAAC,mBAAmB,CAAC;IACzC,CAAC;;;;EAEMH,cAAA,CAAAO,SAAA,CAAAE,eAAe,GAAtB;IACC,OAAO,gBAAgB;EACxB,CAAC;EAEDJ,MAAA,CAAAC,cAAA,CAAcN,cAAA,CAAAO,SAAA,YAAQ;SAAtB,SAAAC,CAAA;MAAA,IAAAE,KAAA;MACC,OAAQ;QAAA,OAAAC,SAAA,CAAAD,KAAA;;;;;gBACDE,QAAQ,GAAG,IAAI,CAACT,OAAO,CAACU,mBAAmB;gBAE3CC,WAAW,GAAG;kBACnBC,OAAO,EAAEhB,YAAY;kBACrBiB,MAAM,EAAE,IAAI,CAACA;iBACb;gBAKG,qBAAMlB,WAAW,CAACU,GAAG,EAAE;;gBAJrBS,EAAA,GAIFC,EAAA,CAAAC,IAAA,EAAuB,EAHbC,UAAU,GAAAH,EAAA,CAAAI,WAAA,EACNC,UAAU,GAAAL,EAAA,CAAAM,eAAA,EACbC,aAAa,GAAAP,EAAA,CAAAQ,YAAA;gBAGtBC,MAAM,GAAG7B,MAAM,CAAC8B,OAAO,CAC5Bf,QAAQ,EACR;kBAAEQ,UAAU,EAAAA,UAAA;kBAAEE,UAAU,EAAAA,UAAA;kBAAEE,aAAa,EAAAA;gBAAA,CAAE,EACzCV,WAAW,CACX;gBAED,sBAAOY,MAAM;;;;OACb,CAAC,CAAE;IACL,CAAC;;;;EACF,OAAA1B,cAAC;AAAD,CAAC,CApCmCJ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}