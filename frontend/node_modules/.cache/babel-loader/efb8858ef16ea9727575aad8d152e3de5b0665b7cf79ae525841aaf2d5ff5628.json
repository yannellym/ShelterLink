{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/PetCard.css';\nimport { useNavigate, Link } from 'react-router-dom';\nimport coming_soon from \"../images/coming_soon.png\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetCard = ({\n  pet,\n  addToFavorites,\n  removeFromFavorites,\n  isFavorite\n}) => {\n  _s();\n  const [favorited, setFavorited] = useState(isFavorite);\n  const handleToggleFavorite = () => {\n    setFavorited(!favorited);\n    if (favorited) {\n      removeFromFavorites(pet.id);\n    } else {\n      addToFavorites(pet);\n    }\n  };\n  const handleMoreInfoClick = () => {\n    // Create the URL for the new window, including the 'petData' query parameter\n    const moreInfoUrl = `/pet-details/${pet.id}?petData=${encodeURIComponent(JSON.stringify(pet))}`;\n\n    // Open the new window with the generated URL\n    const newWindow = window.open(moreInfoUrl, '_blank');\n\n    // Check if the new window was successfully opened\n    if (newWindow) {\n      // If opened successfully, focus on the new window\n      newWindow.focus();\n    } else {\n      // If the new window couldn't be opened (likely due to a pop-up blocker), show an alert\n      alert('Please allow pop-ups for this site to view more details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/pet-details/${pet.id}?petData=${encodeURIComponent(JSON.stringify(pet))}`,\n    children: \"q\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(PetCard, \"8DIienGcyV3r6HqN3LKXOvqSMkg=\");\n_c = PetCard;\nexport default PetCard;\nvar _c;\n$RefreshReg$(_c, \"PetCard\");","map":{"version":3,"names":["React","useState","useNavigate","Link","coming_soon","FontAwesomeIcon","faHeart","jsxDEV","_jsxDEV","PetCard","pet","addToFavorites","removeFromFavorites","isFavorite","_s","favorited","setFavorited","handleToggleFavorite","id","handleMoreInfoClick","moreInfoUrl","encodeURIComponent","JSON","stringify","newWindow","window","open","focus","alert","to","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/PetCard.css';\nimport { useNavigate, Link } from 'react-router-dom';\nimport coming_soon from \"../images/coming_soon.png\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart} from '@fortawesome/free-solid-svg-icons';\n\nconst PetCard = ({ pet, addToFavorites, removeFromFavorites, isFavorite }) => {\n  const [favorited, setFavorited] = useState(isFavorite);\n\n  const handleToggleFavorite = () => {\n    setFavorited(!favorited);\n    if (favorited) {\n      removeFromFavorites(pet.id);\n    } else {\n      addToFavorites(pet);\n    }\n  };\n\n  const handleMoreInfoClick = () => {\n    // Create the URL for the new window, including the 'petData' query parameter\n    const moreInfoUrl = `/pet-details/${pet.id}?petData=${encodeURIComponent(JSON.stringify(pet))}`;\n  \n    // Open the new window with the generated URL\n    const newWindow = window.open(moreInfoUrl, '_blank');\n  \n    // Check if the new window was successfully opened\n    if (newWindow) {\n      // If opened successfully, focus on the new window\n      newWindow.focus();\n    } else {\n      // If the new window couldn't be opened (likely due to a pop-up blocker), show an alert\n      alert('Please allow pop-ups for this site to view more details.');\n    }\n  };\n  \n  return (\n    <Link to={`/pet-details/${pet.id}?petData=${encodeURIComponent(JSON.stringify(pet))}`}>\n    q\n    </Link>\n  );\n};\n\nexport default PetCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAC;EAAEC,GAAG;EAAEC,cAAc;EAAEC,mBAAmB;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAACY,UAAU,CAAC;EAEtD,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjCD,YAAY,CAAC,CAACD,SAAS,CAAC;IACxB,IAAIA,SAAS,EAAE;MACbH,mBAAmB,CAACF,GAAG,CAACQ,EAAE,CAAC;IAC7B,CAAC,MAAM;MACLP,cAAc,CAACD,GAAG,CAAC;IACrB;EACF,CAAC;EAED,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,MAAMC,WAAW,GAAI,gBAAeV,GAAG,CAACQ,EAAG,YAAWG,kBAAkB,CAACC,IAAI,CAACC,SAAS,CAACb,GAAG,CAAC,CAAE,EAAC;;IAE/F;IACA,MAAMc,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACN,WAAW,EAAE,QAAQ,CAAC;;IAEpD;IACA,IAAII,SAAS,EAAE;MACb;MACAA,SAAS,CAACG,KAAK,CAAC,CAAC;IACnB,CAAC,MAAM;MACL;MACAC,KAAK,CAAC,0DAA0D,CAAC;IACnE;EACF,CAAC;EAED,oBACEpB,OAAA,CAACL,IAAI;IAAC0B,EAAE,EAAG,gBAAenB,GAAG,CAACQ,EAAG,YAAWG,kBAAkB,CAACC,IAAI,CAACC,SAAS,CAACb,GAAG,CAAC,CAAE,EAAE;IAAAoB,QAAA,EAAC;EAEvF;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEX,CAAC;AAACpB,EAAA,CAlCIL,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}