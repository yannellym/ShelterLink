{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __values } from \"tslib\";\nvar DoubleLinkedNode = /** @class */function () {\n  function DoubleLinkedNode(keyVal) {\n    this.key = keyVal ? keyVal : '';\n    this.prevNode = null;\n    this.nextNode = null;\n  }\n  return DoubleLinkedNode;\n}();\n/**\n * double linked list plus a hash table inside\n * each key in the cache stored as a node in the list\n * recently visited node will be rotated to the head\n * so the Last Recently Visited node will be at the tail\n *\n * @member head - dummy head of the linked list\n * @member tail - dummy tail of the linked list\n * @member hashtable - the hashtable which maps cache key to list node\n * @member length - length of the list\n */\nvar CacheList = /** @class */function () {\n  /**\n   * initialization\n   */\n  function CacheList() {\n    this.head = new DoubleLinkedNode();\n    this.tail = new DoubleLinkedNode();\n    this.hashtable = {};\n    this.length = 0;\n    this.head.nextNode = this.tail;\n    this.tail.prevNode = this.head;\n  }\n  /**\n   * insert node to the head of the list\n   *\n   * @param node\n   */\n  CacheList.prototype.insertNodeToHead = function (node) {\n    var tmp = this.head.nextNode;\n    this.head.nextNode = node;\n    node.nextNode = tmp;\n    node.prevNode = this.head;\n    tmp.prevNode = node;\n    this.length = this.length + 1;\n  };\n  /**\n   * remove node\n   *\n   * @param node\n   */\n  CacheList.prototype.removeNode = function (node) {\n    node.prevNode.nextNode = node.nextNode;\n    node.nextNode.prevNode = node.prevNode;\n    node.prevNode = null;\n    node.nextNode = null;\n    this.length = this.length - 1;\n  };\n  /**\n   * @return true if list is empty\n   */\n  CacheList.prototype.isEmpty = function () {\n    return this.length === 0;\n  };\n  /**\n   * refresh node so it is rotated to the head\n   *\n   * @param key - key of the node\n   */\n  CacheList.prototype.refresh = function (key) {\n    var node = this.hashtable[key];\n    this.removeNode(node);\n    this.insertNodeToHead(node);\n  };\n  /**\n   * insert new node to the head and add it in the hashtable\n   *\n   * @param key - the key of the node\n   */\n  CacheList.prototype.insertItem = function (key) {\n    var node = new DoubleLinkedNode(key);\n    this.hashtable[key] = node;\n    this.insertNodeToHead(node);\n  };\n  /**\n   * @return the LAST Recently Visited key\n   */\n  CacheList.prototype.getLastItem = function () {\n    return this.tail.prevNode.key;\n  };\n  /**\n   * remove the cache key from the list and hashtable\n   * @param key - the key of the node\n   */\n  CacheList.prototype.removeItem = function (key) {\n    var removedItem = this.hashtable[key];\n    this.removeNode(removedItem);\n    delete this.hashtable[key];\n  };\n  /**\n   * @return length of the list\n   */\n  CacheList.prototype.getSize = function () {\n    return this.length;\n  };\n  /**\n   * @return true if the key is in the hashtable\n   * @param key\n   */\n  CacheList.prototype.containsKey = function (key) {\n    return key in this.hashtable;\n  };\n  /**\n   * clean up the list and hashtable\n   */\n  CacheList.prototype.clearList = function () {\n    var e_1, _a;\n    try {\n      for (var _b = __values(Object.keys(this.hashtable)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var key = _c.value;\n        if (this.hashtable.hasOwnProperty(key)) {\n          delete this.hashtable[key];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    this.head.nextNode = this.tail;\n    this.tail.prevNode = this.head;\n    this.length = 0;\n  };\n  /**\n   * @return all keys in the hashtable\n   */\n  CacheList.prototype.getKeys = function () {\n    return Object.keys(this.hashtable);\n  };\n  /**\n   * mainly for test\n   *\n   * @param key\n   * @return true if key is the head node\n   */\n  CacheList.prototype.isHeadNode = function (key) {\n    var node = this.hashtable[key];\n    return node.prevNode === this.head;\n  };\n  /**\n   * mainly for test\n   *\n   * @param key\n   * @return true if key is the tail node\n   */\n  CacheList.prototype.isTailNode = function (key) {\n    var node = this.hashtable[key];\n    return node.nextNode === this.tail;\n  };\n  return CacheList;\n}();\nexport default CacheList;","map":{"version":3,"names":["DoubleLinkedNode","keyVal","key","prevNode","nextNode","CacheList","head","tail","hashtable","length","prototype","insertNodeToHead","node","tmp","removeNode","isEmpty","refresh","insertItem","getLastItem","removeItem","removedItem","getSize","containsKey","clearList","_b","__values","Object","keys","_c","next","done","value","hasOwnProperty","getKeys","isHeadNode","isTailNode"],"sources":["../../src/Utils/CacheList.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}