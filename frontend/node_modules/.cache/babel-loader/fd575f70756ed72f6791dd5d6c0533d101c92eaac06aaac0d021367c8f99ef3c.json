{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/AllPetsPage.css'; // You can create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllPetsPage({\n  match\n}) {\n  _s();\n  const {\n    petType\n  } = match.params;\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Define the API endpoint based on the selected petType\n    let endpoint = '';\n    if (petType === 'dogs') {\n      endpoint = 'https://api.petfinder.com/v2/types/dog';\n    } else if (petType === 'cats') {\n      endpoint = 'https://api.petfinder.com/v2/types/'; // Replace with the actual endpoint for fetching cats\n    } else if (petType === 'other-animals') {\n      endpoint = 'http://localhost:3002/api/fetch-other-animals-endpoint'; // Replace with the actual endpoint for fetching other animals\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.pets) {\n          setPets(data.pets);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(`Error fetching ${petType} data:`, error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [petType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${petType.charAt(0).toUpperCase() + petType.slice(1)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: pets.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"2YMerw+dyisv+D8lTSrRi9EomCE=\");\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AllPetsPage","match","_s","petType","params","pets","setPets","loading","setLoading","endpoint","fetchData","response","fetch","data","json","error","console","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","name","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/AllPetsPage.css'; // You can create a CSS file for styling\n\nfunction AllPetsPage({ match }) {\n  const { petType } = match.params;\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Define the API endpoint based on the selected petType\n    let endpoint = '';\n\n    if (petType === 'dogs') {\n      endpoint = 'https://api.petfinder.com/v2/types/dog'\n    } else if (petType === 'cats') {\n      endpoint = 'https://api.petfinder.com/v2/types/'; // Replace with the actual endpoint for fetching cats\n    } else if (petType === 'other-animals') {\n      endpoint = 'http://localhost:3002/api/fetch-other-animals-endpoint'; // Replace with the actual endpoint for fetching other animals\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        if (data && data.pets) {\n          setPets(data.pets);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error(`Error fetching ${petType} data:`, error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [petType]);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${petType.charAt(0).toUpperCase() + petType.slice(1)}`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {pets.map((pet) => (\n            <div key={pet.id}>\n              <h3>{pet.name}</h3>\n              {/* Display other pet information */}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,QAAQ,GAAG,EAAE;IAEjB,IAAIN,OAAO,KAAK,MAAM,EAAE;MACtBM,QAAQ,GAAG,wCAAwC;IACrD,CAAC,MAAM,IAAIN,OAAO,KAAK,MAAM,EAAE;MAC7BM,QAAQ,GAAG,qCAAqC,CAAC,CAAC;IACpD,CAAC,MAAM,IAAIN,OAAO,KAAK,eAAe,EAAE;MACtCM,QAAQ,GAAG,wDAAwD,CAAC,CAAC;IACvE;;IAEA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;QACtC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,IAAIA,IAAI,CAACR,IAAI,EAAE;UACrBC,OAAO,CAACO,IAAI,CAACR,IAAI,CAAC;UAClBG,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAE,kBAAiBZ,OAAQ,QAAO,EAAEY,KAAK,CAAC;QACvDP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BnB,OAAA;MAAAmB,QAAA,EAAM,OAAMf,OAAO,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGjB,OAAO,CAACkB,KAAK,CAAC,CAAC,CAAE;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACrElB,OAAO,gBACNR,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB1B,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBb,IAAI,CAACqB,GAAG,CAAEC,GAAG,iBACZ5B,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,EAAKS,GAAG,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADXE,GAAG,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CApDQF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAsDpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}