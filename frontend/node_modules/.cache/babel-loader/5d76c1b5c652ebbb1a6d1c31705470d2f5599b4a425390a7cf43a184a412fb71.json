{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"dog\", \"cat\", \"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9; // Number of buttons to show at once\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    const start = (page - 1) * petsPerPage;\n    const end = start + petsPerPage;\n\n    // Fetch animals for the specified category\n    const animalPromises = otherAnimalTypes.map(async animalType => {\n      const endpoint = `http://localhost:3002/api/petfinder?type=${animalType}&limit=${end}`;\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        if (data && data.animals) {\n          return data.animals.slice(start, end).filter(animal => animal.photos.length > 0);\n        }\n      } catch (error) {\n        console.error(`Error fetching data for ${animalType}:`, error.message);\n      }\n      return [];\n    });\n    try {\n      const animalResponses = await Promise.all(animalPromises);\n      const mergedAnimals = animalResponses.flat();\n      setCache(mergedAnimals);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = Math.min(startPage + buttonsToShow - 1, otherAnimalTypes.length);\n  const pageButtons = Array.from({\n    length: endPage - startPage + 1\n  }, (_, i) => startPage + i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: cache.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), pageButtons.map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(page),\n        className: currentPage === page ? 'active' : '',\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === endPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"ZI7uaPeuqINtAeXCvtnrefX/dFg=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","AllPetsPage","_s","category","loading","setLoading","currentPage","setCurrentPage","cache","setCache","petsPerPage","otherAnimalTypes","buttonsToShow","fetchAnimalsByCategory","page","start","end","animalPromises","map","animalType","endpoint","response","fetch","data","json","animals","slice","filter","animal","photos","error","console","message","animalResponses","Promise","all","mergedAnimals","flat","fetchData","window","scrollTo","top","behavior","handlePageChange","newPage","startPage","max","endPage","min","pageButtons","Array","from","_","className","children","charAt","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","pet","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cache, setCache] = useState([]);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"dog\", \"cat\", \"horse\", \"bird\", \"barnyard\"];\n  const buttonsToShow = 9; // Number of buttons to show at once\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    const start = (page - 1) * petsPerPage;\n    const end = start + petsPerPage;\n\n    // Fetch animals for the specified category\n    const animalPromises = otherAnimalTypes.map(async animalType => {\n      const endpoint = `http://localhost:3002/api/petfinder?type=${animalType}&limit=${end}`;\n\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        if (data && data.animals) {\n          return data.animals.slice(start, end).filter(animal => animal.photos.length > 0);\n        }\n      } catch (error) {\n        console.error(`Error fetching data for ${animalType}:`, error.message);\n      }\n\n      return [];\n    });\n\n    try {\n      const animalResponses = await Promise.all(animalPromises);\n      const mergedAnimals = animalResponses.flat();\n      setCache(mergedAnimals);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  // Calculate the range of page buttons to display\n  const startPage = Math.max(1, currentPage - Math.floor(buttonsToShow / 2));\n  const endPage = Math.min(startPage + buttonsToShow - 1, otherAnimalTypes.length);\n\n  const pageButtons = Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {cache.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      )}\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        {pageButtons.map((page) => (\n          <button\n            key={page}\n            onClick={() => handlePageChange(page)}\n            className={currentPage === page ? 'active' : ''}\n          >\n            {page}\n          </button>\n        ))}\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n          disabled={currentPage === endPage}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}