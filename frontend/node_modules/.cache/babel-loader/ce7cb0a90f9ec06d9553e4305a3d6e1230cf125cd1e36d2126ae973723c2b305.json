{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport { isCancelError } from './AwsClients/S3/utils';\nimport { AWSS3UploadTask } from './providers/AWSS3UploadTask';\nvar logger = new Logger('StorageClass');\nvar loggerStorageInstance = new Logger('Storage'); // Logging relating to Storage instance management\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */function () {\n  /**\n   * Initialize Storage\n   * @param {Object} config - Configuration object for storage\n   */\n  function Storage() {\n    this._config = {};\n    this._pluggables = [];\n    this._abortControllerMap = new WeakMap();\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n  Storage.prototype.getModuleName = function () {\n    return 'Storage';\n  };\n  /**\n   * add plugin into Storage category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  Storage.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Storage\n   * @param {Object} config - Configuration object for storage\n   * @return {Object} - Current configuration\n   */\n  Storage.prototype.configure = function (config) {\n    var _this = this;\n    var _a;\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    var storageConfig = (_a = amplifyConfig.Storage) !== null && _a !== void 0 ? _a : {};\n    var defaultProviderConfigKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'ContentMD5', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey',\n    // TODO(AllanZhengYP): remove in V6.\n    'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n    var hasDefaultProviderConfigKeys = function (config) {\n      return Object.keys(config).find(function (key) {\n        return defaultProviderConfigKeys.includes(key);\n      });\n    };\n    if (hasDefaultProviderConfigKeys(storageConfig) && !storageConfig[DEFAULT_PROVIDER]) {\n      storageConfig[DEFAULT_PROVIDER] = {};\n    }\n    Object.entries(storageConfig).forEach(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n      if (key && defaultProviderConfigKeys.includes(key) && value !== undefined) {\n        storageConfig[DEFAULT_PROVIDER][key] = value;\n        delete storageConfig[key];\n      }\n    });\n    // only update new values for each provider\n    Object.keys(storageConfig).forEach(function (providerName) {\n      if (typeof storageConfig[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), storageConfig[providerName]);\n      }\n    });\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n    return this._config;\n  };\n  Storage.prototype.getAbortController = function () {\n    return new AbortController();\n  };\n  Storage.prototype.updateRequestToBeCancellable = function (request, abortController) {\n    this._abortControllerMap.set(request, abortController);\n  };\n  Storage.prototype.isUploadTask = function (x) {\n    return typeof x !== 'undefined' && typeof x['pause'] === 'function' && typeof x['resume'] === 'function';\n  };\n  Storage.prototype.cancel = function (request, message) {\n    if (request instanceof AWSS3UploadTask) {\n      return request._cancel();\n    }\n    var abortController = this._abortControllerMap.get(request);\n    if (abortController) {\n      // TODO: [v6] clean up the aborted promise in the weak map.\n      // Not doing it yet to avoid breaking changes when users may abort a request twice.\n      abortController.abort(message);\n    } else {\n      logger.debug('The request does not map to any cancel token');\n    }\n  };\n  Storage.prototype.copy = function (src, dest, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var abortController = this.getAbortController();\n    if (typeof plugin.copy !== 'function') {\n      return Promise.reject(\".copy is not implemented on provider \".concat(plugin.getProviderName()));\n    }\n    var responsePromise = plugin.copy(src, dest, __assign(__assign({}, config), {\n      abortSignal: abortController.signal\n    }));\n    this.updateRequestToBeCancellable(responsePromise, abortController);\n    return responsePromise;\n  };\n  Storage.prototype.get = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var abortController = this.getAbortController();\n    var responsePromise = plugin.get(key, __assign(__assign({}, config), {\n      abortSignal: abortController.signal\n    }));\n    this.updateRequestToBeCancellable(responsePromise, abortController);\n    return responsePromise;\n  };\n  Storage.prototype.isCancelError = function (error) {\n    return isCancelError(error);\n  };\n  Storage.prototype.getProperties = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      throw new Error('No plugin found with providerName');\n    }\n    var abortController = this.getAbortController();\n    if (typeof plugin.getProperties !== 'function') {\n      return Promise.reject(\".getProperties is not implemented on provider \".concat(plugin.getProviderName()));\n    }\n    var responsePromise = plugin === null || plugin === void 0 ? void 0 : plugin.getProperties(key, __assign({}, config));\n    this.updateRequestToBeCancellable(responsePromise, abortController);\n    return responsePromise;\n  };\n  Storage.prototype.put = function (key, object, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var abortController = this.getAbortController();\n    var response = plugin.put(key, object, __assign(__assign({}, config), {\n      abortSignal: abortController.signal\n    }));\n    if (!this.isUploadTask(response)) {\n      this.updateRequestToBeCancellable(response, abortController);\n    }\n    return response;\n  };\n  Storage.prototype.remove = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return plugin.remove(key, config);\n  };\n  Storage.prototype.list = function (path, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return plugin.list(path, config);\n  };\n  return Storage;\n}();\nexport { Storage };\n/**\n * Configure & register Storage singleton instance.\n */\nvar _instance = null;\nvar getInstance = function () {\n  if (_instance) {\n    return _instance;\n  }\n  loggerStorageInstance.debug('Create Storage Instance, debug');\n  _instance = new Storage();\n  _instance.vault = new Storage();\n  var old_configure = _instance.configure;\n  _instance.configure = function (options) {\n    loggerStorageInstance.debug('storage configure called');\n    var vaultConfig = __assign({}, old_configure.call(_instance, options));\n    // set level private for each provider for the vault\n    Object.keys(vaultConfig).forEach(function (providerName) {\n      if (typeof vaultConfig[providerName] !== 'string') {\n        vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), {\n          level: 'private'\n        });\n      }\n    });\n    loggerStorageInstance.debug('storage vault configure called');\n    _instance.vault.configure(vaultConfig);\n  };\n  return _instance;\n};\nexport var StorageInstance = getInstance();\nAmplify.register(StorageInstance);","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","Amplify","ConsoleLogger","Logger","parseAWSExports","AWSS3Provider","isCancelError","AWSS3UploadTask","logger","loggerStorageInstance","DEFAULT_PROVIDER","Storage","_config","_pluggables","_abortControllerMap","WeakMap","debug","get","bind","put","remove","list","getModuleName","addPluggable","pluggable","getCategory","config","configure","getProviderName","getPluggable","providerName","find","undefined","removePluggable","filter","_this","_a","amplifyConfig","storageConfig","defaultProviderConfigKeys","hasDefaultProviderConfigKeys","keys","key","includes","entries","forEach","_b","getAbortController","AbortController","updateRequestToBeCancellable","request","abortController","set","isUploadTask","x","cancel","message","_cancel","abort","copy","src","dest","provider","plugin","Promise","reject","concat","responsePromise","abortSignal","signal","getProperties","Error","object","response","path","_instance","getInstance","vault","old_configure","options","vaultConfig","level","StorageInstance","register"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/storage/lib-esm/Storage.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports, } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport { isCancelError } from './AwsClients/S3/utils';\nimport { AWSS3UploadTask } from './providers/AWSS3UploadTask';\nvar logger = new Logger('StorageClass');\nvar loggerStorageInstance = new Logger('Storage'); // Logging relating to Storage instance management\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */ (function () {\n    /**\n     * Initialize Storage\n     * @param {Object} config - Configuration object for storage\n     */\n    function Storage() {\n        this._config = {};\n        this._pluggables = [];\n        this._abortControllerMap = new WeakMap();\n        logger.debug('Storage Options', this._config);\n        this.get = this.get.bind(this);\n        this.put = this.put.bind(this);\n        this.remove = this.remove.bind(this);\n        this.list = this.list.bind(this);\n    }\n    Storage.prototype.getModuleName = function () {\n        return 'Storage';\n    };\n    /**\n     * add plugin into Storage category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    Storage.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Storage') {\n            this._pluggables.push(pluggable);\n            var config = {};\n            config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    Storage.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            return null;\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    Storage.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Storage\n     * @param {Object} config - Configuration object for storage\n     * @return {Object} - Current configuration\n     */\n    Storage.prototype.configure = function (config) {\n        var _this = this;\n        var _a;\n        logger.debug('configure Storage');\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        var storageConfig = (_a = amplifyConfig.Storage) !== null && _a !== void 0 ? _a : {};\n        var defaultProviderConfigKeys = [\n            'bucket',\n            'region',\n            'level',\n            'track',\n            'customPrefix',\n            'ContentMD5',\n            'serverSideEncryption',\n            'SSECustomerAlgorithm',\n            'SSECustomerKey',\n            // TODO(AllanZhengYP): remove in V6.\n            'SSECustomerKeyMD5',\n            'SSEKMSKeyId',\n        ];\n        var hasDefaultProviderConfigKeys = function (config) {\n            return Object.keys(config).find(function (key) { return defaultProviderConfigKeys.includes(key); });\n        };\n        if (hasDefaultProviderConfigKeys(storageConfig) &&\n            !storageConfig[DEFAULT_PROVIDER]) {\n            storageConfig[DEFAULT_PROVIDER] = {};\n        }\n        Object.entries(storageConfig).forEach(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key &&\n                defaultProviderConfigKeys.includes(key) &&\n                value !== undefined) {\n                storageConfig[DEFAULT_PROVIDER][key] = value;\n                delete storageConfig[key];\n            }\n        });\n        // only update new values for each provider\n        Object.keys(storageConfig).forEach(function (providerName) {\n            if (typeof storageConfig[providerName] !== 'string') {\n                _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), storageConfig[providerName]);\n            }\n        });\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSS3Provider());\n        }\n        return this._config;\n    };\n    Storage.prototype.getAbortController = function () {\n        return new AbortController();\n    };\n    Storage.prototype.updateRequestToBeCancellable = function (request, abortController) {\n        this._abortControllerMap.set(request, abortController);\n    };\n    Storage.prototype.isUploadTask = function (x) {\n        return (typeof x !== 'undefined' &&\n            typeof x['pause'] === 'function' &&\n            typeof x['resume'] === 'function');\n    };\n    Storage.prototype.cancel = function (request, message) {\n        if (request instanceof AWSS3UploadTask) {\n            return request._cancel();\n        }\n        var abortController = this._abortControllerMap.get(request);\n        if (abortController) {\n            // TODO: [v6] clean up the aborted promise in the weak map.\n            // Not doing it yet to avoid breaking changes when users may abort a request twice.\n            abortController.abort(message);\n        }\n        else {\n            logger.debug('The request does not map to any cancel token');\n        }\n    };\n    Storage.prototype.copy = function (src, dest, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var abortController = this.getAbortController();\n        if (typeof plugin.copy !== 'function') {\n            return Promise.reject(\".copy is not implemented on provider \".concat(plugin.getProviderName()));\n        }\n        var responsePromise = plugin.copy(src, dest, __assign(__assign({}, config), { abortSignal: abortController.signal }));\n        this.updateRequestToBeCancellable(responsePromise, abortController);\n        return responsePromise;\n    };\n    Storage.prototype.get = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var abortController = this.getAbortController();\n        var responsePromise = plugin.get(key, __assign(__assign({}, config), { abortSignal: abortController.signal }));\n        this.updateRequestToBeCancellable(responsePromise, abortController);\n        return responsePromise;\n    };\n    Storage.prototype.isCancelError = function (error) {\n        return isCancelError(error);\n    };\n    Storage.prototype.getProperties = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            throw new Error('No plugin found with providerName');\n        }\n        var abortController = this.getAbortController();\n        if (typeof plugin.getProperties !== 'function') {\n            return Promise.reject(\".getProperties is not implemented on provider \".concat(plugin.getProviderName()));\n        }\n        var responsePromise = plugin === null || plugin === void 0 ? void 0 : plugin.getProperties(key, __assign({}, config));\n        this.updateRequestToBeCancellable(responsePromise, abortController);\n        return responsePromise;\n    };\n    Storage.prototype.put = function (key, object, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var abortController = this.getAbortController();\n        var response = plugin.put(key, object, __assign(__assign({}, config), { abortSignal: abortController.signal }));\n        if (!this.isUploadTask(response)) {\n            this.updateRequestToBeCancellable(response, abortController);\n        }\n        return response;\n    };\n    Storage.prototype.remove = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return plugin.remove(key, config);\n    };\n    Storage.prototype.list = function (path, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return plugin.list(path, config);\n    };\n    return Storage;\n}());\nexport { Storage };\n/**\n * Configure & register Storage singleton instance.\n */\nvar _instance = null;\nvar getInstance = function () {\n    if (_instance) {\n        return _instance;\n    }\n    loggerStorageInstance.debug('Create Storage Instance, debug');\n    _instance = new Storage();\n    _instance.vault = new Storage();\n    var old_configure = _instance.configure;\n    _instance.configure = function (options) {\n        loggerStorageInstance.debug('storage configure called');\n        var vaultConfig = __assign({}, old_configure.call(_instance, options));\n        // set level private for each provider for the vault\n        Object.keys(vaultConfig).forEach(function (providerName) {\n            if (typeof vaultConfig[providerName] !== 'string') {\n                vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), { level: 'private' });\n            }\n        });\n        loggerStorageInstance.debug('storage vault configure called');\n        _instance.vault.configure(vaultConfig);\n    };\n    return _instance;\n};\nexport var StorageInstance = getInstance();\nAmplify.register(StorageInstance);\n"],"mappings":"AAAA;AACA;AACA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,IAAIO,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAET,CAAC,EAAE;EAClD,IAAIU,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIF,CAAC,CAACE,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOD,CAAC;EAChB,IAAIV,CAAC,GAAGW,CAAC,CAACJ,IAAI,CAACG,CAAC,CAAC;IAAEI,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACf,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACa,CAAC,GAAGd,CAAC,CAACiB,IAAI,CAAC,CAAC,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKP,CAAC,GAAGX,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEW,CAAC,CAACJ,IAAI,CAACP,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAIgB,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACD,SAASO,OAAO,EAAEC,aAAa,IAAIC,MAAM,EAAEC,eAAe,QAAS,mBAAmB;AACtF,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,IAAIC,MAAM,GAAG,IAAIL,MAAM,CAAC,cAAc,CAAC;AACvC,IAAIM,qBAAqB,GAAG,IAAIN,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACnD,IAAIO,gBAAgB,GAAG,OAAO;AAC9B;AACA;AACA;AACA,IAAIC,OAAO,GAAG,aAAe,YAAY;EACrC;AACJ;AACA;AACA;EACI,SAASA,OAAOA,CAAA,EAAG;IACf,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;IACjB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,mBAAmB,GAAG,IAAIC,OAAO,CAAC,CAAC;IACxCP,MAAM,CAACQ,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACJ,OAAO,CAAC;IAC7C,IAAI,CAACK,GAAG,GAAG,IAAI,CAACA,GAAG,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACC,GAAG,GAAG,IAAI,CAACA,GAAG,CAACD,IAAI,CAAC,IAAI,CAAC;IAC9B,IAAI,CAACE,MAAM,GAAG,IAAI,CAACA,MAAM,CAACF,IAAI,CAAC,IAAI,CAAC;IACpC,IAAI,CAACG,IAAI,GAAG,IAAI,CAACA,IAAI,CAACH,IAAI,CAAC,IAAI,CAAC;EACpC;EACAP,OAAO,CAAC3B,SAAS,CAACsC,aAAa,GAAG,YAAY;IAC1C,OAAO,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;EACIX,OAAO,CAAC3B,SAAS,CAACuC,YAAY,GAAG,UAAUC,SAAS,EAAE;IAClD,IAAIA,SAAS,IAAIA,SAAS,CAACC,WAAW,CAAC,CAAC,KAAK,SAAS,EAAE;MACpD,IAAI,CAACZ,WAAW,CAACf,IAAI,CAAC0B,SAAS,CAAC;MAChC,IAAIE,MAAM,GAAG,CAAC,CAAC;MACfA,MAAM,GAAGF,SAAS,CAACG,SAAS,CAAC,IAAI,CAACf,OAAO,CAACY,SAAS,CAACI,eAAe,CAAC,CAAC,CAAC,CAAC;MACvE,OAAOF,MAAM;IACjB;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACIf,OAAO,CAAC3B,SAAS,CAAC6C,YAAY,GAAG,UAAUC,YAAY,EAAE;IACrD,IAAIN,SAAS,GAAG,IAAI,CAACX,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKE,YAAY;IAAE,CAAC,CAAC;IACpH,IAAIN,SAAS,KAAKQ,SAAS,EAAE;MACzBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAEc,YAAY,CAAC;MAC/D,OAAO,IAAI;IACf,CAAC,MAEG,OAAON,SAAS;EACxB,CAAC;EACD;AACJ;AACA;AACA;EACIb,OAAO,CAAC3B,SAAS,CAACiD,eAAe,GAAG,UAAUH,YAAY,EAAE;IACxD,IAAI,CAACjB,WAAW,GAAG,IAAI,CAACA,WAAW,CAACqB,MAAM,CAAC,UAAUV,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKE,YAAY;IAAE,CAAC,CAAC;IACzH;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACInB,OAAO,CAAC3B,SAAS,CAAC2C,SAAS,GAAG,UAAUD,MAAM,EAAE;IAC5C,IAAIS,KAAK,GAAG,IAAI;IAChB,IAAIC,EAAE;IACN5B,MAAM,CAACQ,KAAK,CAAC,mBAAmB,CAAC;IACjC,IAAI,CAACU,MAAM,EACP,OAAO,IAAI,CAACd,OAAO;IACvB,IAAIyB,aAAa,GAAGjC,eAAe,CAACsB,MAAM,CAAC;IAC3C,IAAIY,aAAa,GAAG,CAACF,EAAE,GAAGC,aAAa,CAAC1B,OAAO,MAAM,IAAI,IAAIyB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;IACpF,IAAIG,yBAAyB,GAAG,CAC5B,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,OAAO,EACP,cAAc,EACd,YAAY,EACZ,sBAAsB,EACtB,sBAAsB,EACtB,gBAAgB;IAChB;IACA,mBAAmB,EACnB,aAAa,CAChB;IACD,IAAIC,4BAA4B,GAAG,SAAAA,CAAUd,MAAM,EAAE;MACjD,OAAOnD,MAAM,CAACkE,IAAI,CAACf,MAAM,CAAC,CAACK,IAAI,CAAC,UAAUW,GAAG,EAAE;QAAE,OAAOH,yBAAyB,CAACI,QAAQ,CAACD,GAAG,CAAC;MAAE,CAAC,CAAC;IACvG,CAAC;IACD,IAAIF,4BAA4B,CAACF,aAAa,CAAC,IAC3C,CAACA,aAAa,CAAC5B,gBAAgB,CAAC,EAAE;MAClC4B,aAAa,CAAC5B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACxC;IACAnC,MAAM,CAACqE,OAAO,CAACN,aAAa,CAAC,CAACO,OAAO,CAAC,UAAUT,EAAE,EAAE;MAChD,IAAIU,EAAE,GAAG1D,MAAM,CAACgD,EAAE,EAAE,CAAC,CAAC;QAAEM,GAAG,GAAGI,EAAE,CAAC,CAAC,CAAC;QAAE/C,KAAK,GAAG+C,EAAE,CAAC,CAAC,CAAC;MAClD,IAAIJ,GAAG,IACHH,yBAAyB,CAACI,QAAQ,CAACD,GAAG,CAAC,IACvC3C,KAAK,KAAKiC,SAAS,EAAE;QACrBM,aAAa,CAAC5B,gBAAgB,CAAC,CAACgC,GAAG,CAAC,GAAG3C,KAAK;QAC5C,OAAOuC,aAAa,CAACI,GAAG,CAAC;MAC7B;IACJ,CAAC,CAAC;IACF;IACAnE,MAAM,CAACkE,IAAI,CAACH,aAAa,CAAC,CAACO,OAAO,CAAC,UAAUf,YAAY,EAAE;MACvD,IAAI,OAAOQ,aAAa,CAACR,YAAY,CAAC,KAAK,QAAQ,EAAE;QACjDK,KAAK,CAACvB,OAAO,CAACkB,YAAY,CAAC,GAAGxD,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6D,KAAK,CAACvB,OAAO,CAACkB,YAAY,CAAC,CAAC,EAAEQ,aAAa,CAACR,YAAY,CAAC,CAAC;MAClH;IACJ,CAAC,CAAC;IACF,IAAI,CAACjB,WAAW,CAACgC,OAAO,CAAC,UAAUrB,SAAS,EAAE;MAC1CA,SAAS,CAACG,SAAS,CAACQ,KAAK,CAACvB,OAAO,CAACY,SAAS,CAACI,eAAe,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC;IACF,IAAI,IAAI,CAACf,WAAW,CAAC/B,MAAM,KAAK,CAAC,EAAE;MAC/B,IAAI,CAACyC,YAAY,CAAC,IAAIlB,aAAa,CAAC,CAAC,CAAC;IAC1C;IACA,OAAO,IAAI,CAACO,OAAO;EACvB,CAAC;EACDD,OAAO,CAAC3B,SAAS,CAAC+D,kBAAkB,GAAG,YAAY;IAC/C,OAAO,IAAIC,eAAe,CAAC,CAAC;EAChC,CAAC;EACDrC,OAAO,CAAC3B,SAAS,CAACiE,4BAA4B,GAAG,UAAUC,OAAO,EAAEC,eAAe,EAAE;IACjF,IAAI,CAACrC,mBAAmB,CAACsC,GAAG,CAACF,OAAO,EAAEC,eAAe,CAAC;EAC1D,CAAC;EACDxC,OAAO,CAAC3B,SAAS,CAACqE,YAAY,GAAG,UAAUC,CAAC,EAAE;IAC1C,OAAQ,OAAOA,CAAC,KAAK,WAAW,IAC5B,OAAOA,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,IAChC,OAAOA,CAAC,CAAC,QAAQ,CAAC,KAAK,UAAU;EACzC,CAAC;EACD3C,OAAO,CAAC3B,SAAS,CAACuE,MAAM,GAAG,UAAUL,OAAO,EAAEM,OAAO,EAAE;IACnD,IAAIN,OAAO,YAAY3C,eAAe,EAAE;MACpC,OAAO2C,OAAO,CAACO,OAAO,CAAC,CAAC;IAC5B;IACA,IAAIN,eAAe,GAAG,IAAI,CAACrC,mBAAmB,CAACG,GAAG,CAACiC,OAAO,CAAC;IAC3D,IAAIC,eAAe,EAAE;MACjB;MACA;MACAA,eAAe,CAACO,KAAK,CAACF,OAAO,CAAC;IAClC,CAAC,MACI;MACDhD,MAAM,CAACQ,KAAK,CAAC,8CAA8C,CAAC;IAChE;EACJ,CAAC;EACDL,OAAO,CAAC3B,SAAS,CAAC2E,IAAI,GAAG,UAAUC,GAAG,EAAEC,IAAI,EAAEnC,MAAM,EAAE;IAClD,IAAIoC,QAAQ,GAAG,CAACpC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoC,QAAQ,KAAKpD,gBAAgB;IACpG,IAAIqD,MAAM,GAAG,IAAI,CAAClD,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKkC,QAAQ;IAAE,CAAC,CAAC;IAC7G,IAAIC,MAAM,KAAK/B,SAAS,EAAE;MACtBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAE8C,QAAQ,CAAC;MAC3D,OAAOE,OAAO,CAACC,MAAM,CAAC,6CAA6C,CAAC;IACxE;IACA,IAAId,eAAe,GAAG,IAAI,CAACJ,kBAAkB,CAAC,CAAC;IAC/C,IAAI,OAAOgB,MAAM,CAACJ,IAAI,KAAK,UAAU,EAAE;MACnC,OAAOK,OAAO,CAACC,MAAM,CAAC,uCAAuC,CAACC,MAAM,CAACH,MAAM,CAACnC,eAAe,CAAC,CAAC,CAAC,CAAC;IACnG;IACA,IAAIuC,eAAe,GAAGJ,MAAM,CAACJ,IAAI,CAACC,GAAG,EAAEC,IAAI,EAAEvF,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEoD,MAAM,CAAC,EAAE;MAAE0C,WAAW,EAAEjB,eAAe,CAACkB;IAAO,CAAC,CAAC,CAAC;IACrH,IAAI,CAACpB,4BAA4B,CAACkB,eAAe,EAAEhB,eAAe,CAAC;IACnE,OAAOgB,eAAe;EAC1B,CAAC;EACDxD,OAAO,CAAC3B,SAAS,CAACiC,GAAG,GAAG,UAAUyB,GAAG,EAAEhB,MAAM,EAAE;IAC3C,IAAIoC,QAAQ,GAAG,CAACpC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoC,QAAQ,KAAKpD,gBAAgB;IACpG,IAAIqD,MAAM,GAAG,IAAI,CAAClD,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKkC,QAAQ;IAAE,CAAC,CAAC;IAC7G,IAAIC,MAAM,KAAK/B,SAAS,EAAE;MACtBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAE8C,QAAQ,CAAC;MAC3D,OAAOE,OAAO,CAACC,MAAM,CAAC,6CAA6C,CAAC;IACxE;IACA,IAAId,eAAe,GAAG,IAAI,CAACJ,kBAAkB,CAAC,CAAC;IAC/C,IAAIoB,eAAe,GAAGJ,MAAM,CAAC9C,GAAG,CAACyB,GAAG,EAAEpE,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEoD,MAAM,CAAC,EAAE;MAAE0C,WAAW,EAAEjB,eAAe,CAACkB;IAAO,CAAC,CAAC,CAAC;IAC9G,IAAI,CAACpB,4BAA4B,CAACkB,eAAe,EAAEhB,eAAe,CAAC;IACnE,OAAOgB,eAAe;EAC1B,CAAC;EACDxD,OAAO,CAAC3B,SAAS,CAACsB,aAAa,GAAG,UAAUN,KAAK,EAAE;IAC/C,OAAOM,aAAa,CAACN,KAAK,CAAC;EAC/B,CAAC;EACDW,OAAO,CAAC3B,SAAS,CAACsF,aAAa,GAAG,UAAU5B,GAAG,EAAEhB,MAAM,EAAE;IACrD,IAAIoC,QAAQ,GAAG,CAACpC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoC,QAAQ,KAAKpD,gBAAgB;IACpG,IAAIqD,MAAM,GAAG,IAAI,CAAClD,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKkC,QAAQ;IAAE,CAAC,CAAC;IAC7G,IAAIC,MAAM,KAAK/B,SAAS,EAAE;MACtBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAE8C,QAAQ,CAAC;MAC3D,MAAM,IAAIS,KAAK,CAAC,mCAAmC,CAAC;IACxD;IACA,IAAIpB,eAAe,GAAG,IAAI,CAACJ,kBAAkB,CAAC,CAAC;IAC/C,IAAI,OAAOgB,MAAM,CAACO,aAAa,KAAK,UAAU,EAAE;MAC5C,OAAON,OAAO,CAACC,MAAM,CAAC,gDAAgD,CAACC,MAAM,CAACH,MAAM,CAACnC,eAAe,CAAC,CAAC,CAAC,CAAC;IAC5G;IACA,IAAIuC,eAAe,GAAGJ,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACO,aAAa,CAAC5B,GAAG,EAAEpE,QAAQ,CAAC,CAAC,CAAC,EAAEoD,MAAM,CAAC,CAAC;IACrH,IAAI,CAACuB,4BAA4B,CAACkB,eAAe,EAAEhB,eAAe,CAAC;IACnE,OAAOgB,eAAe;EAC1B,CAAC;EACDxD,OAAO,CAAC3B,SAAS,CAACmC,GAAG,GAAG,UAAUuB,GAAG,EAAE8B,MAAM,EAAE9C,MAAM,EAAE;IACnD,IAAIoC,QAAQ,GAAG,CAACpC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoC,QAAQ,KAAKpD,gBAAgB;IACpG,IAAIqD,MAAM,GAAG,IAAI,CAAClD,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKkC,QAAQ;IAAE,CAAC,CAAC;IAC7G,IAAIC,MAAM,KAAK/B,SAAS,EAAE;MACtBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAE8C,QAAQ,CAAC;MAC3D,OAAOE,OAAO,CAACC,MAAM,CAAC,6CAA6C,CAAC;IACxE;IACA,IAAId,eAAe,GAAG,IAAI,CAACJ,kBAAkB,CAAC,CAAC;IAC/C,IAAI0B,QAAQ,GAAGV,MAAM,CAAC5C,GAAG,CAACuB,GAAG,EAAE8B,MAAM,EAAElG,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEoD,MAAM,CAAC,EAAE;MAAE0C,WAAW,EAAEjB,eAAe,CAACkB;IAAO,CAAC,CAAC,CAAC;IAC/G,IAAI,CAAC,IAAI,CAAChB,YAAY,CAACoB,QAAQ,CAAC,EAAE;MAC9B,IAAI,CAACxB,4BAA4B,CAACwB,QAAQ,EAAEtB,eAAe,CAAC;IAChE;IACA,OAAOsB,QAAQ;EACnB,CAAC;EACD9D,OAAO,CAAC3B,SAAS,CAACoC,MAAM,GAAG,UAAUsB,GAAG,EAAEhB,MAAM,EAAE;IAC9C,IAAIoC,QAAQ,GAAG,CAACpC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoC,QAAQ,KAAKpD,gBAAgB;IACpG,IAAIqD,MAAM,GAAG,IAAI,CAAClD,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKkC,QAAQ;IAAE,CAAC,CAAC;IAC7G,IAAIC,MAAM,KAAK/B,SAAS,EAAE;MACtBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAE8C,QAAQ,CAAC;MAC3D,OAAOE,OAAO,CAACC,MAAM,CAAC,6CAA6C,CAAC;IACxE;IACA,OAAOF,MAAM,CAAC3C,MAAM,CAACsB,GAAG,EAAEhB,MAAM,CAAC;EACrC,CAAC;EACDf,OAAO,CAAC3B,SAAS,CAACqC,IAAI,GAAG,UAAUqD,IAAI,EAAEhD,MAAM,EAAE;IAC7C,IAAIoC,QAAQ,GAAG,CAACpC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACoC,QAAQ,KAAKpD,gBAAgB;IACpG,IAAIqD,MAAM,GAAG,IAAI,CAAClD,WAAW,CAACkB,IAAI,CAAC,UAAUP,SAAS,EAAE;MAAE,OAAOA,SAAS,CAACI,eAAe,CAAC,CAAC,KAAKkC,QAAQ;IAAE,CAAC,CAAC;IAC7G,IAAIC,MAAM,KAAK/B,SAAS,EAAE;MACtBxB,MAAM,CAACQ,KAAK,CAAC,mCAAmC,EAAE8C,QAAQ,CAAC;MAC3D,OAAOE,OAAO,CAACC,MAAM,CAAC,6CAA6C,CAAC;IACxE;IACA,OAAOF,MAAM,CAAC1C,IAAI,CAACqD,IAAI,EAAEhD,MAAM,CAAC;EACpC,CAAC;EACD,OAAOf,OAAO;AAClB,CAAC,CAAC,CAAE;AACJ,SAASA,OAAO;AAChB;AACA;AACA;AACA,IAAIgE,SAAS,GAAG,IAAI;AACpB,IAAIC,WAAW,GAAG,SAAAA,CAAA,EAAY;EAC1B,IAAID,SAAS,EAAE;IACX,OAAOA,SAAS;EACpB;EACAlE,qBAAqB,CAACO,KAAK,CAAC,gCAAgC,CAAC;EAC7D2D,SAAS,GAAG,IAAIhE,OAAO,CAAC,CAAC;EACzBgE,SAAS,CAACE,KAAK,GAAG,IAAIlE,OAAO,CAAC,CAAC;EAC/B,IAAImE,aAAa,GAAGH,SAAS,CAAChD,SAAS;EACvCgD,SAAS,CAAChD,SAAS,GAAG,UAAUoD,OAAO,EAAE;IACrCtE,qBAAqB,CAACO,KAAK,CAAC,0BAA0B,CAAC;IACvD,IAAIgE,WAAW,GAAG1G,QAAQ,CAAC,CAAC,CAAC,EAAEwG,aAAa,CAAC5F,IAAI,CAACyF,SAAS,EAAEI,OAAO,CAAC,CAAC;IACtE;IACAxG,MAAM,CAACkE,IAAI,CAACuC,WAAW,CAAC,CAACnC,OAAO,CAAC,UAAUf,YAAY,EAAE;MACrD,IAAI,OAAOkD,WAAW,CAAClD,YAAY,CAAC,KAAK,QAAQ,EAAE;QAC/CkD,WAAW,CAAClD,YAAY,CAAC,GAAGxD,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE0G,WAAW,CAAClD,YAAY,CAAC,CAAC,EAAE;UAAEmD,KAAK,EAAE;QAAU,CAAC,CAAC;MACvG;IACJ,CAAC,CAAC;IACFxE,qBAAqB,CAACO,KAAK,CAAC,gCAAgC,CAAC;IAC7D2D,SAAS,CAACE,KAAK,CAAClD,SAAS,CAACqD,WAAW,CAAC;EAC1C,CAAC;EACD,OAAOL,SAAS;AACpB,CAAC;AACD,OAAO,IAAIO,eAAe,GAAGN,WAAW,CAAC,CAAC;AAC1C3E,OAAO,CAACkF,QAAQ,CAACD,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}