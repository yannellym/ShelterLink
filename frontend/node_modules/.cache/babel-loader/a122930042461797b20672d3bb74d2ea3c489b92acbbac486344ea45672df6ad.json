{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger } from './Logger';\nimport { StorageHelper } from './StorageHelper';\nimport { makeQuerablePromise } from './JS';\nimport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nimport { jitteredExponentialRetry } from './Util';\nimport { Amplify } from './Amplify';\nimport { getId, getCredentialsForIdentity } from './AwsClients/CognitoIdentity';\nimport { parseAWSExports } from './parseAWSExports';\nimport { Hub } from './Hub';\nvar logger = new Logger('Credentials');\nvar CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nvar COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar dispatchCredentialsEvent = function (event, data, message) {\n  Hub.dispatch('core', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Credentials', AMPLIFY_SYMBOL);\n};\nvar CredentialsClass = /** @class */function () {\n  function CredentialsClass(config) {\n    this._gettingCredPromise = null;\n    this._refreshHandlers = {};\n    // Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n    this.Auth = undefined;\n    this.configure(config);\n    this._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\n    this._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\n  }\n  CredentialsClass.prototype.getModuleName = function () {\n    return 'Credentials';\n  };\n  CredentialsClass.prototype.getCredSource = function () {\n    return this._credentials_source;\n  };\n  CredentialsClass.prototype.configure = function (config) {\n    if (!config) return this._config || {};\n    this._config = Object.assign({}, this._config, config);\n    var refreshHandlers = this._config.refreshHandlers;\n    // If the developer has provided an object of refresh handlers,\n    // then we can merge the provided handlers with the current handlers.\n    if (refreshHandlers) {\n      this._refreshHandlers = __assign(__assign({}, this._refreshHandlers), refreshHandlers);\n    }\n    this._storage = this._config.storage;\n    if (!this._storage) {\n      this._storage = new StorageHelper().getStorage();\n    }\n    this._storageSync = Promise.resolve();\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n    dispatchCredentialsEvent('credentials_configured', null, \"Credentials has been configured successfully\");\n    return this._config;\n  };\n  CredentialsClass.prototype.get = function () {\n    logger.debug('getting credentials');\n    return this._pickupCredentials();\n  };\n  // currently we only store the guest identity in local storage\n  CredentialsClass.prototype._getCognitoIdentityIdStorageKey = function (identityPoolId) {\n    return \"\".concat(COGNITO_IDENTITY_KEY_PREFIX).concat(identityPoolId);\n  };\n  CredentialsClass.prototype._pickupCredentials = function () {\n    logger.debug('picking up credentials');\n    if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n      logger.debug('getting new cred promise');\n      this._gettingCredPromise = makeQuerablePromise(this._keepAlive());\n    } else {\n      logger.debug('getting old cred promise');\n    }\n    return this._gettingCredPromise;\n  };\n  CredentialsClass.prototype._keepAlive = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cred, _a, Auth, user_1, session, refreshToken_1, refreshRequest, err_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            logger.debug('checking if credentials exists and not expired');\n            cred = this._credentials;\n            if (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n              logger.debug('credentials not changed and not expired, directly return');\n              return [2 /*return*/, Promise.resolve(cred)];\n            }\n            logger.debug('need to get a new credential or refresh the existing one');\n            _a = this.Auth, Auth = _a === void 0 ? Amplify.Auth : _a;\n            if (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n              // If Auth module is not imported, do a best effort to get guest credentials\n              return [2 /*return*/, this._setCredentialsForGuest()];\n            }\n            if (!(!this._isExpired(cred) && this._isPastTTL())) return [3 /*break*/, 6];\n            logger.debug('ttl has passed but token is not yet expired');\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 5,, 6]);\n            return [4 /*yield*/, Auth.currentUserPoolUser()];\n          case 2:\n            user_1 = _b.sent();\n            return [4 /*yield*/, Auth.currentSession()];\n          case 3:\n            session = _b.sent();\n            refreshToken_1 = session.refreshToken;\n            refreshRequest = new Promise(function (res, rej) {\n              user_1.refreshSession(refreshToken_1, function (err, data) {\n                return err ? rej(err) : res(data);\n              });\n            });\n            return [4 /*yield*/, refreshRequest];\n          case 4:\n            _b.sent(); // note that rejections will be caught and handled in the catch block.\n            return [3 /*break*/, 6];\n          case 5:\n            err_1 = _b.sent();\n            // should not throw because user might just be on guest access or is authenticated through federation\n            logger.debug('Error attempting to refreshing the session', err_1);\n            return [3 /*break*/, 6];\n          case 6:\n            return [2 /*return*/, Auth.currentUserCredentials()];\n        }\n      });\n    });\n  };\n  CredentialsClass.prototype.refreshFederatedToken = function (federatedInfo) {\n    logger.debug('Getting federated credentials');\n    var provider = federatedInfo.provider,\n      user = federatedInfo.user,\n      token = federatedInfo.token,\n      identity_id = federatedInfo.identity_id;\n    var expires_at = federatedInfo.expires_at;\n    // Make sure expires_at is in millis\n    expires_at = new Date(expires_at).getFullYear() === 1970 ? expires_at * 1000 : expires_at;\n    var that = this;\n    logger.debug('checking if federated jwt token expired');\n    if (expires_at > new Date().getTime()) {\n      // if not expired\n      logger.debug('token not expired');\n      return this._setCredentialsFromFederation({\n        provider: provider,\n        token: token,\n        user: user,\n        identity_id: identity_id,\n        expires_at: expires_at\n      });\n    } else {\n      // if refresh handler exists\n      if (that._refreshHandlers[provider] && typeof that._refreshHandlers[provider] === 'function') {\n        logger.debug('getting refreshed jwt token from federation provider');\n        return this._providerRefreshWithRetry({\n          refreshHandler: that._refreshHandlers[provider],\n          provider: provider,\n          user: user\n        });\n      } else {\n        logger.debug('no refresh handler for provider:', provider);\n        this.clear();\n        return Promise.reject('no refresh handler for provider');\n      }\n    }\n  };\n  CredentialsClass.prototype._providerRefreshWithRetry = function (_a) {\n    var _this = this;\n    var refreshHandler = _a.refreshHandler,\n      provider = _a.provider,\n      user = _a.user;\n    var MAX_DELAY_MS = 10 * 1000;\n    // refreshHandler will retry network errors, otherwise it will\n    // return NonRetryableError to break out of jitteredExponentialRetry\n    return jitteredExponentialRetry(refreshHandler, [], MAX_DELAY_MS).then(function (data) {\n      logger.debug('refresh federated token sucessfully', data);\n      return _this._setCredentialsFromFederation({\n        provider: provider,\n        token: data.token,\n        user: user,\n        identity_id: data.identity_id,\n        expires_at: data.expires_at\n      });\n    }).catch(function (e) {\n      var isNetworkError = typeof e === 'string' && e.toLowerCase().lastIndexOf('network error', e.length) === 0;\n      if (!isNetworkError) {\n        _this.clear();\n      }\n      logger.debug('refresh federated token failed', e);\n      return Promise.reject('refreshing federation token failed: ' + e);\n    });\n  };\n  CredentialsClass.prototype._isExpired = function (credentials) {\n    if (!credentials) {\n      logger.debug('no credentials for expiration check');\n      return true;\n    }\n    logger.debug('are these credentials expired?', credentials);\n    var ts = Date.now();\n    /* returns date object.\n        https://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n    */\n    var expiration = credentials.expiration;\n    return expiration.getTime() <= ts;\n  };\n  CredentialsClass.prototype._isPastTTL = function () {\n    return this._nextCredentialsRefresh <= Date.now();\n  };\n  CredentialsClass.prototype._setCredentialsForGuest = function () {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, identityPoolId, region, mandatorySignIn, identityPoolRegion, identityId, _c, cognitoConfig, guestCredentialsProvider, credentials;\n      var _this = this;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            logger.debug('setting credentials for guest');\n            if (!((_a = this._config) === null || _a === void 0 ? void 0 : _a.identityPoolId)) {\n              // If Credentials are not configured thru Auth module,\n              // doing best effort to check if the library was configured\n              this._config = Object.assign({}, this._config, parseAWSExports(this._config || {}).Auth);\n            }\n            _b = this._config, identityPoolId = _b.identityPoolId, region = _b.region, mandatorySignIn = _b.mandatorySignIn, identityPoolRegion = _b.identityPoolRegion;\n            if (mandatorySignIn) {\n              return [2 /*return*/, Promise.reject('cannot get guest credentials when mandatory signin enabled')];\n            }\n            if (!identityPoolId) {\n              logger.debug('No Cognito Identity pool provided for unauthenticated access');\n              return [2 /*return*/, Promise.reject('No Cognito Identity pool provided for unauthenticated access')];\n            }\n            if (!identityPoolRegion && !region) {\n              logger.debug('region is not configured for getting the credentials');\n              return [2 /*return*/, Promise.reject('region is not configured for getting the credentials')];\n            }\n            _c = this;\n            return [4 /*yield*/, this._getGuestIdentityId()];\n          case 1:\n            identityId = _c._identityId = _d.sent();\n            cognitoConfig = {\n              region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region\n            };\n            guestCredentialsProvider = function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                var IdentityId, Credentials;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!!identityId) return [3 /*break*/, 2];\n                      return [4 /*yield*/, getId(cognitoConfig, {\n                        IdentityPoolId: identityPoolId\n                      })];\n                    case 1:\n                      IdentityId = _a.sent().IdentityId;\n                      this._identityId = IdentityId;\n                      _a.label = 2;\n                    case 2:\n                      return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                        IdentityId: this._identityId\n                      })];\n                    case 3:\n                      Credentials = _a.sent().Credentials;\n                      return [2 /*return*/, {\n                        identityId: this._identityId,\n                        accessKeyId: Credentials.AccessKeyId,\n                        secretAccessKey: Credentials.SecretKey,\n                        sessionToken: Credentials.SessionToken,\n                        expiration: Credentials.Expiration\n                      }];\n                  }\n                });\n              });\n            };\n            credentials = guestCredentialsProvider().catch(function (err) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  throw err;\n                });\n              });\n            });\n            return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null).then(function (res) {\n              return res;\n            }).catch(function (e) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var guestCredentialsProvider_1;\n                var _this = this;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (!(e.name === 'ResourceNotFoundException' && e.message === \"Identity '\".concat(identityId, \"' not found.\"))) return [3 /*break*/, 2];\n                      logger.debug('Failed to load guest credentials');\n                      return [4 /*yield*/, this._removeGuestIdentityId()];\n                    case 1:\n                      _a.sent();\n                      guestCredentialsProvider_1 = function () {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          var IdentityId, Credentials;\n                          return __generator(this, function (_a) {\n                            switch (_a.label) {\n                              case 0:\n                                return [4 /*yield*/, getId(cognitoConfig, {\n                                  IdentityPoolId: identityPoolId\n                                })];\n                              case 1:\n                                IdentityId = _a.sent().IdentityId;\n                                this._identityId = IdentityId;\n                                return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                                  IdentityId: IdentityId\n                                })];\n                              case 2:\n                                Credentials = _a.sent().Credentials;\n                                return [2 /*return*/, {\n                                  identityId: IdentityId,\n                                  accessKeyId: Credentials.AccessKeyId,\n                                  secretAccessKey: Credentials.SecretKey,\n                                  sessionToken: Credentials.SessionToken,\n                                  expiration: Credentials.Expiration\n                                }];\n                            }\n                          });\n                        });\n                      };\n                      credentials = guestCredentialsProvider_1().catch(function (err) {\n                        return __awaiter(_this, void 0, void 0, function () {\n                          return __generator(this, function (_a) {\n                            throw err;\n                          });\n                        });\n                      });\n                      return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)];\n                    case 2:\n                      return [2 /*return*/, e];\n                  }\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  CredentialsClass.prototype._setCredentialsFromFederation = function (params) {\n    var _this = this;\n    var provider = params.provider,\n      token = params.token;\n    var identity_id = params.identity_id;\n    var domains = {\n      google: 'accounts.google.com',\n      facebook: 'graph.facebook.com',\n      amazon: 'www.amazon.com',\n      developer: 'cognito-identity.amazonaws.com'\n    };\n    // Use custom provider url instead of the predefined ones\n    var domain = domains[provider] || provider;\n    if (!domain) {\n      return Promise.reject('You must specify a federated provider');\n    }\n    var logins = {};\n    logins[domain] = token;\n    var _a = this._config,\n      identityPoolId = _a.identityPoolId,\n      region = _a.region,\n      identityPoolRegion = _a.identityPoolRegion;\n    if (!identityPoolId) {\n      logger.debug('No Cognito Federated Identity pool provided');\n      return Promise.reject('No Cognito Federated Identity pool provided');\n    }\n    if (!identityPoolRegion && !region) {\n      logger.debug('region is not configured for getting the credentials');\n      return Promise.reject('region is not configured for getting the credentials');\n    }\n    var cognitoConfig = {\n      region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region\n    };\n    var authenticatedCredentialsProvider = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var IdentityId, Credentials;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!identity_id) return [3 /*break*/, 2];\n              return [4 /*yield*/, getId(cognitoConfig, {\n                IdentityPoolId: identityPoolId,\n                Logins: logins\n              })];\n            case 1:\n              IdentityId = _a.sent().IdentityId;\n              identity_id = IdentityId;\n              _a.label = 2;\n            case 2:\n              return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                IdentityId: identity_id,\n                Logins: logins\n              })];\n            case 3:\n              Credentials = _a.sent().Credentials;\n              return [2 /*return*/, {\n                identityId: identity_id,\n                accessKeyId: Credentials.AccessKeyId,\n                secretAccessKey: Credentials.SecretKey,\n                sessionToken: Credentials.SessionToken,\n                expiration: Credentials.Expiration\n              }];\n          }\n        });\n      });\n    };\n    var credentials = authenticatedCredentialsProvider().catch(function (err) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw err;\n        });\n      });\n    });\n    return this._loadCredentials(credentials, 'federated', true, params);\n  };\n  CredentialsClass.prototype._setCredentialsFromSession = function (session) {\n    var _this = this;\n    logger.debug('set credentials from session');\n    var idToken = session.getIdToken().getJwtToken();\n    var _a = this._config,\n      region = _a.region,\n      userPoolId = _a.userPoolId,\n      identityPoolId = _a.identityPoolId,\n      identityPoolRegion = _a.identityPoolRegion;\n    if (!identityPoolId) {\n      logger.debug('No Cognito Federated Identity pool provided');\n      return Promise.reject('No Cognito Federated Identity pool provided');\n    }\n    if (!identityPoolRegion && !region) {\n      logger.debug('region is not configured for getting the credentials');\n      return Promise.reject('region is not configured for getting the credentials');\n    }\n    var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n    var logins = {};\n    logins[key] = idToken;\n    var cognitoConfig = {\n      region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region\n    };\n    /*\n        Retreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n        https://git.io/JeDxU\n         Note: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n    */\n    var credentialsProvider = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var guestIdentityId, generatedOrRetrievedIdentityId, IdentityId, _a, _b, AccessKeyId, Expiration, SecretKey, SessionToken, primaryIdentityId;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              return [4 /*yield*/, this._getGuestIdentityId()];\n            case 1:\n              guestIdentityId = _c.sent();\n              if (!!guestIdentityId) return [3 /*break*/, 3];\n              return [4 /*yield*/, getId(cognitoConfig, {\n                IdentityPoolId: identityPoolId,\n                Logins: logins\n              })];\n            case 2:\n              IdentityId = _c.sent().IdentityId;\n              generatedOrRetrievedIdentityId = IdentityId;\n              _c.label = 3;\n            case 3:\n              return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n                Logins: logins\n              })];\n            case 4:\n              _a = _c.sent(), _b = _a.Credentials, AccessKeyId = _b.AccessKeyId, Expiration = _b.Expiration, SecretKey = _b.SecretKey, SessionToken = _b.SessionToken, primaryIdentityId = _a.IdentityId;\n              this._identityId = primaryIdentityId;\n              if (!guestIdentityId) return [3 /*break*/, 6];\n              // if guestIdentity is found and used by GetCredentialsForIdentity\n              // it will be linked to the logins provided, and disqualified as an unauth identity\n              logger.debug(\"The guest identity \".concat(guestIdentityId, \" has been successfully linked to the logins\"));\n              if (guestIdentityId === primaryIdentityId) {\n                logger.debug(\"The guest identity \".concat(guestIdentityId, \" has become the primary identity\"));\n              }\n              // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n              return [4 /*yield*/, this._removeGuestIdentityId()];\n            case 5:\n              // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n              _c.sent();\n              _c.label = 6;\n            case 6:\n              // https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n              return [2 /*return*/, {\n                accessKeyId: AccessKeyId,\n                secretAccessKey: SecretKey,\n                sessionToken: SessionToken,\n                expiration: Expiration,\n                identityId: primaryIdentityId\n              }];\n          }\n        });\n      });\n    };\n    var credentials = credentialsProvider().catch(function (err) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          throw err;\n        });\n      });\n    });\n    return this._loadCredentials(credentials, 'userPool', true, null);\n  };\n  CredentialsClass.prototype._loadCredentials = function (credentials, source, authenticated, info) {\n    var _this = this;\n    var that = this;\n    return new Promise(function (res, rej) {\n      credentials.then(function (credentials) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var user, provider, token, expires_at, identity_id;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug('Load credentials successfully', credentials);\n                if (this._identityId && !credentials.identityId) {\n                  credentials['identityId'] = this._identityId;\n                }\n                that._credentials = credentials;\n                that._credentials.authenticated = authenticated;\n                that._credentials_source = source;\n                that._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n                if (source === 'federated') {\n                  user = Object.assign({\n                    id: this._credentials.identityId\n                  }, info.user);\n                  provider = info.provider, token = info.token, expires_at = info.expires_at, identity_id = info.identity_id;\n                  try {\n                    this._storage.setItem('aws-amplify-federatedInfo', JSON.stringify({\n                      provider: provider,\n                      token: token,\n                      user: user,\n                      expires_at: expires_at,\n                      identity_id: identity_id\n                    }));\n                  } catch (e) {\n                    logger.debug('Failed to put federated info into auth storage', e);\n                  }\n                }\n                if (!(source === 'guest')) return [3 /*break*/, 2];\n                return [4 /*yield*/, this._setGuestIdentityId(credentials.identityId)];\n              case 1:\n                _a.sent();\n                _a.label = 2;\n              case 2:\n                res(that._credentials);\n                return [2 /*return*/];\n            }\n          });\n        });\n      }).catch(function (err) {\n        if (err) {\n          logger.debug('Failed to load credentials', credentials);\n          logger.debug('Error loading credentials', err);\n          rej(err);\n          return;\n        }\n      });\n    });\n  };\n  CredentialsClass.prototype.set = function (params, source) {\n    if (source === 'session') {\n      return this._setCredentialsFromSession(params);\n    } else if (source === 'federation') {\n      return this._setCredentialsFromFederation(params);\n    } else if (source === 'guest') {\n      return this._setCredentialsForGuest();\n    } else {\n      logger.debug('no source specified for setting credentials');\n      return Promise.reject('invalid source');\n    }\n  };\n  CredentialsClass.prototype.clear = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._credentials = null;\n        this._credentials_source = null;\n        logger.debug('removing aws-amplify-federatedInfo from storage');\n        this._storage.removeItem('aws-amplify-federatedInfo');\n        return [2 /*return*/];\n      });\n    });\n  };\n  /* operations on local stored guest identity */\n  CredentialsClass.prototype._getGuestIdentityId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            identityPoolId = this._config.identityPoolId;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this._storageSync];\n          case 2:\n            _a.sent();\n            return [2 /*return*/, this._storage.getItem(this._getCognitoIdentityIdStorageKey(identityPoolId))];\n          case 3:\n            e_1 = _a.sent();\n            logger.debug('Failed to get the cached guest identityId', e_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._setGuestIdentityId = function (identityId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId, e_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            identityPoolId = this._config.identityPoolId;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this._storageSync];\n          case 2:\n            _a.sent();\n            this._storage.setItem(this._getCognitoIdentityIdStorageKey(identityPoolId), identityId);\n            return [3 /*break*/, 4];\n          case 3:\n            e_2 = _a.sent();\n            logger.debug('Failed to cache guest identityId', e_2);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CredentialsClass.prototype._removeGuestIdentityId = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var identityPoolId;\n      return __generator(this, function (_a) {\n        identityPoolId = this._config.identityPoolId;\n        logger.debug(\"removing \".concat(this._getCognitoIdentityIdStorageKey(identityPoolId), \" from storage\"));\n        this._storage.removeItem(this._getCognitoIdentityIdStorageKey(identityPoolId));\n        return [2 /*return*/];\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n  CredentialsClass.prototype.shear = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n  return CredentialsClass;\n}();\nexport { CredentialsClass };\nexport var Credentials = new CredentialsClass(null);\nAmplify.register(Credentials);","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","ConsoleLogger","Logger","StorageHelper","makeQuerablePromise","FacebookOAuth","GoogleOAuth","jitteredExponentialRetry","Amplify","getId","getCredentialsForIdentity","parseAWSExports","Hub","logger","CREDENTIALS_TTL","COGNITO_IDENTITY_KEY_PREFIX","AMPLIFY_SYMBOL","for","dispatchCredentialsEvent","event","data","message","dispatch","CredentialsClass","config","_gettingCredPromise","_refreshHandlers","Auth","undefined","configure","refreshGoogleToken","refreshFacebookToken","getModuleName","getCredSource","_credentials_source","_config","refreshHandlers","_storage","storage","getStorage","_storageSync","get","debug","_pickupCredentials","_getCognitoIdentityIdStorageKey","identityPoolId","concat","isPending","_keepAlive","cred","_a","user_1","session","refreshToken_1","refreshRequest","err_1","_b","_credentials","_isExpired","_isPastTTL","currentUserCredentials","_setCredentialsForGuest","currentUserPoolUser","currentSession","refreshToken","res","rej","refreshSession","err","refreshFederatedToken","federatedInfo","provider","user","token","identity_id","expires_at","Date","getFullYear","that","getTime","_setCredentialsFromFederation","_providerRefreshWithRetry","refreshHandler","clear","_this","MAX_DELAY_MS","catch","isNetworkError","toLowerCase","lastIndexOf","credentials","ts","now","expiration","_nextCredentialsRefresh","region","mandatorySignIn","identityPoolRegion","identityId","_c","cognitoConfig","guestCredentialsProvider","_d","_getGuestIdentityId","_identityId","IdentityId","Credentials","IdentityPoolId","accessKeyId","AccessKeyId","secretAccessKey","SecretKey","sessionToken","SessionToken","Expiration","_loadCredentials","guestCredentialsProvider_1","name","_removeGuestIdentityId","params","domains","google","facebook","amazon","developer","domain","logins","authenticatedCredentialsProvider","Logins","_setCredentialsFromSession","idToken","getIdToken","getJwtToken","userPoolId","key","credentialsProvider","guestIdentityId","generatedOrRetrievedIdentityId","primaryIdentityId","source","authenticated","info","id","setItem","JSON","stringify","_setGuestIdentityId","set","removeItem","e_1","getItem","e_2","shear","register"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/Credentials.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger as Logger } from './Logger';\nimport { StorageHelper } from './StorageHelper';\nimport { makeQuerablePromise } from './JS';\nimport { FacebookOAuth, GoogleOAuth } from './OAuthHelper';\nimport { jitteredExponentialRetry } from './Util';\nimport { Amplify } from './Amplify';\nimport { getId, getCredentialsForIdentity } from './AwsClients/CognitoIdentity';\nimport { parseAWSExports } from './parseAWSExports';\nimport { Hub } from './Hub';\nvar logger = new Logger('Credentials');\nvar CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nvar COGNITO_IDENTITY_KEY_PREFIX = 'CognitoIdentityId-';\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchCredentialsEvent = function (event, data, message) {\n    Hub.dispatch('core', { event: event, data: data, message: message }, 'Credentials', AMPLIFY_SYMBOL);\n};\nvar CredentialsClass = /** @class */ (function () {\n    function CredentialsClass(config) {\n        this._gettingCredPromise = null;\n        this._refreshHandlers = {};\n        // Allow `Auth` to be injected for SSR, but Auth isn't a required dependency for Credentials\n        this.Auth = undefined;\n        this.configure(config);\n        this._refreshHandlers['google'] = GoogleOAuth.refreshGoogleToken;\n        this._refreshHandlers['facebook'] = FacebookOAuth.refreshFacebookToken;\n    }\n    CredentialsClass.prototype.getModuleName = function () {\n        return 'Credentials';\n    };\n    CredentialsClass.prototype.getCredSource = function () {\n        return this._credentials_source;\n    };\n    CredentialsClass.prototype.configure = function (config) {\n        if (!config)\n            return this._config || {};\n        this._config = Object.assign({}, this._config, config);\n        var refreshHandlers = this._config.refreshHandlers;\n        // If the developer has provided an object of refresh handlers,\n        // then we can merge the provided handlers with the current handlers.\n        if (refreshHandlers) {\n            this._refreshHandlers = __assign(__assign({}, this._refreshHandlers), refreshHandlers);\n        }\n        this._storage = this._config.storage;\n        if (!this._storage) {\n            this._storage = new StorageHelper().getStorage();\n        }\n        this._storageSync = Promise.resolve();\n        if (typeof this._storage['sync'] === 'function') {\n            this._storageSync = this._storage['sync']();\n        }\n        dispatchCredentialsEvent('credentials_configured', null, \"Credentials has been configured successfully\");\n        return this._config;\n    };\n    CredentialsClass.prototype.get = function () {\n        logger.debug('getting credentials');\n        return this._pickupCredentials();\n    };\n    // currently we only store the guest identity in local storage\n    CredentialsClass.prototype._getCognitoIdentityIdStorageKey = function (identityPoolId) {\n        return \"\".concat(COGNITO_IDENTITY_KEY_PREFIX).concat(identityPoolId);\n    };\n    CredentialsClass.prototype._pickupCredentials = function () {\n        logger.debug('picking up credentials');\n        if (!this._gettingCredPromise || !this._gettingCredPromise.isPending()) {\n            logger.debug('getting new cred promise');\n            this._gettingCredPromise = makeQuerablePromise(this._keepAlive());\n        }\n        else {\n            logger.debug('getting old cred promise');\n        }\n        return this._gettingCredPromise;\n    };\n    CredentialsClass.prototype._keepAlive = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var cred, _a, Auth, user_1, session, refreshToken_1, refreshRequest, err_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger.debug('checking if credentials exists and not expired');\n                        cred = this._credentials;\n                        if (cred && !this._isExpired(cred) && !this._isPastTTL()) {\n                            logger.debug('credentials not changed and not expired, directly return');\n                            return [2 /*return*/, Promise.resolve(cred)];\n                        }\n                        logger.debug('need to get a new credential or refresh the existing one');\n                        _a = this.Auth, Auth = _a === void 0 ? Amplify.Auth : _a;\n                        if (!Auth || typeof Auth.currentUserCredentials !== 'function') {\n                            // If Auth module is not imported, do a best effort to get guest credentials\n                            return [2 /*return*/, this._setCredentialsForGuest()];\n                        }\n                        if (!(!this._isExpired(cred) && this._isPastTTL())) return [3 /*break*/, 6];\n                        logger.debug('ttl has passed but token is not yet expired');\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, Auth.currentUserPoolUser()];\n                    case 2:\n                        user_1 = _b.sent();\n                        return [4 /*yield*/, Auth.currentSession()];\n                    case 3:\n                        session = _b.sent();\n                        refreshToken_1 = session.refreshToken;\n                        refreshRequest = new Promise(function (res, rej) {\n                            user_1.refreshSession(refreshToken_1, function (err, data) {\n                                return err ? rej(err) : res(data);\n                            });\n                        });\n                        return [4 /*yield*/, refreshRequest];\n                    case 4:\n                        _b.sent(); // note that rejections will be caught and handled in the catch block.\n                        return [3 /*break*/, 6];\n                    case 5:\n                        err_1 = _b.sent();\n                        // should not throw because user might just be on guest access or is authenticated through federation\n                        logger.debug('Error attempting to refreshing the session', err_1);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/, Auth.currentUserCredentials()];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype.refreshFederatedToken = function (federatedInfo) {\n        logger.debug('Getting federated credentials');\n        var provider = federatedInfo.provider, user = federatedInfo.user, token = federatedInfo.token, identity_id = federatedInfo.identity_id;\n        var expires_at = federatedInfo.expires_at;\n        // Make sure expires_at is in millis\n        expires_at =\n            new Date(expires_at).getFullYear() === 1970\n                ? expires_at * 1000\n                : expires_at;\n        var that = this;\n        logger.debug('checking if federated jwt token expired');\n        if (expires_at > new Date().getTime()) {\n            // if not expired\n            logger.debug('token not expired');\n            return this._setCredentialsFromFederation({\n                provider: provider,\n                token: token,\n                user: user,\n                identity_id: identity_id,\n                expires_at: expires_at,\n            });\n        }\n        else {\n            // if refresh handler exists\n            if (that._refreshHandlers[provider] &&\n                typeof that._refreshHandlers[provider] === 'function') {\n                logger.debug('getting refreshed jwt token from federation provider');\n                return this._providerRefreshWithRetry({\n                    refreshHandler: that._refreshHandlers[provider],\n                    provider: provider,\n                    user: user,\n                });\n            }\n            else {\n                logger.debug('no refresh handler for provider:', provider);\n                this.clear();\n                return Promise.reject('no refresh handler for provider');\n            }\n        }\n    };\n    CredentialsClass.prototype._providerRefreshWithRetry = function (_a) {\n        var _this = this;\n        var refreshHandler = _a.refreshHandler, provider = _a.provider, user = _a.user;\n        var MAX_DELAY_MS = 10 * 1000;\n        // refreshHandler will retry network errors, otherwise it will\n        // return NonRetryableError to break out of jitteredExponentialRetry\n        return jitteredExponentialRetry(refreshHandler, [], MAX_DELAY_MS)\n            .then(function (data) {\n            logger.debug('refresh federated token sucessfully', data);\n            return _this._setCredentialsFromFederation({\n                provider: provider,\n                token: data.token,\n                user: user,\n                identity_id: data.identity_id,\n                expires_at: data.expires_at,\n            });\n        })\n            .catch(function (e) {\n            var isNetworkError = typeof e === 'string' &&\n                e.toLowerCase().lastIndexOf('network error', e.length) === 0;\n            if (!isNetworkError) {\n                _this.clear();\n            }\n            logger.debug('refresh federated token failed', e);\n            return Promise.reject('refreshing federation token failed: ' + e);\n        });\n    };\n    CredentialsClass.prototype._isExpired = function (credentials) {\n        if (!credentials) {\n            logger.debug('no credentials for expiration check');\n            return true;\n        }\n        logger.debug('are these credentials expired?', credentials);\n        var ts = Date.now();\n        /* returns date object.\n            https://github.com/aws/aws-sdk-js-v3/blob/v1.0.0-beta.1/packages/types/src/credentials.ts#L26\n        */\n        var expiration = credentials.expiration;\n        return expiration.getTime() <= ts;\n    };\n    CredentialsClass.prototype._isPastTTL = function () {\n        return this._nextCredentialsRefresh <= Date.now();\n    };\n    CredentialsClass.prototype._setCredentialsForGuest = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, identityPoolId, region, mandatorySignIn, identityPoolRegion, identityId, _c, cognitoConfig, guestCredentialsProvider, credentials;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        logger.debug('setting credentials for guest');\n                        if (!((_a = this._config) === null || _a === void 0 ? void 0 : _a.identityPoolId)) {\n                            // If Credentials are not configured thru Auth module,\n                            // doing best effort to check if the library was configured\n                            this._config = Object.assign({}, this._config, parseAWSExports(this._config || {}).Auth);\n                        }\n                        _b = this._config, identityPoolId = _b.identityPoolId, region = _b.region, mandatorySignIn = _b.mandatorySignIn, identityPoolRegion = _b.identityPoolRegion;\n                        if (mandatorySignIn) {\n                            return [2 /*return*/, Promise.reject('cannot get guest credentials when mandatory signin enabled')];\n                        }\n                        if (!identityPoolId) {\n                            logger.debug('No Cognito Identity pool provided for unauthenticated access');\n                            return [2 /*return*/, Promise.reject('No Cognito Identity pool provided for unauthenticated access')];\n                        }\n                        if (!identityPoolRegion && !region) {\n                            logger.debug('region is not configured for getting the credentials');\n                            return [2 /*return*/, Promise.reject('region is not configured for getting the credentials')];\n                        }\n                        _c = this;\n                        return [4 /*yield*/, this._getGuestIdentityId()];\n                    case 1:\n                        identityId = (_c._identityId = _d.sent());\n                        cognitoConfig = { region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region };\n                        guestCredentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n                            var IdentityId, Credentials;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!!identityId) return [3 /*break*/, 2];\n                                        return [4 /*yield*/, getId(cognitoConfig, {\n                                                IdentityPoolId: identityPoolId,\n                                            })];\n                                    case 1:\n                                        IdentityId = (_a.sent()).IdentityId;\n                                        this._identityId = IdentityId;\n                                        _a.label = 2;\n                                    case 2: return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                                            IdentityId: this._identityId,\n                                        })];\n                                    case 3:\n                                        Credentials = (_a.sent()).Credentials;\n                                        return [2 /*return*/, {\n                                                identityId: this._identityId,\n                                                accessKeyId: Credentials.AccessKeyId,\n                                                secretAccessKey: Credentials.SecretKey,\n                                                sessionToken: Credentials.SessionToken,\n                                                expiration: Credentials.Expiration,\n                                            }];\n                                }\n                            });\n                        }); };\n                        credentials = guestCredentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                throw err;\n                            });\n                        }); });\n                        return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)\n                                .then(function (res) {\n                                return res;\n                            })\n                                .catch(function (e) { return __awaiter(_this, void 0, void 0, function () {\n                                var guestCredentialsProvider_1;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!(e.name === 'ResourceNotFoundException' &&\n                                                e.message === \"Identity '\".concat(identityId, \"' not found.\"))) return [3 /*break*/, 2];\n                                            logger.debug('Failed to load guest credentials');\n                                            return [4 /*yield*/, this._removeGuestIdentityId()];\n                                        case 1:\n                                            _a.sent();\n                                            guestCredentialsProvider_1 = function () { return __awaiter(_this, void 0, void 0, function () {\n                                                var IdentityId, Credentials;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0: return [4 /*yield*/, getId(cognitoConfig, {\n                                                                IdentityPoolId: identityPoolId,\n                                                            })];\n                                                        case 1:\n                                                            IdentityId = (_a.sent()).IdentityId;\n                                                            this._identityId = IdentityId;\n                                                            return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                                                                    IdentityId: IdentityId,\n                                                                })];\n                                                        case 2:\n                                                            Credentials = (_a.sent()).Credentials;\n                                                            return [2 /*return*/, {\n                                                                    identityId: IdentityId,\n                                                                    accessKeyId: Credentials.AccessKeyId,\n                                                                    secretAccessKey: Credentials.SecretKey,\n                                                                    sessionToken: Credentials.SessionToken,\n                                                                    expiration: Credentials.Expiration,\n                                                                }];\n                                                    }\n                                                });\n                                            }); };\n                                            credentials = guestCredentialsProvider_1().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n                                                return __generator(this, function (_a) {\n                                                    throw err;\n                                                });\n                                            }); });\n                                            return [2 /*return*/, this._loadCredentials(credentials, 'guest', false, null)];\n                                        case 2: return [2 /*return*/, e];\n                                    }\n                                });\n                            }); })];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._setCredentialsFromFederation = function (params) {\n        var _this = this;\n        var provider = params.provider, token = params.token;\n        var identity_id = params.identity_id;\n        var domains = {\n            google: 'accounts.google.com',\n            facebook: 'graph.facebook.com',\n            amazon: 'www.amazon.com',\n            developer: 'cognito-identity.amazonaws.com',\n        };\n        // Use custom provider url instead of the predefined ones\n        var domain = domains[provider] || provider;\n        if (!domain) {\n            return Promise.reject('You must specify a federated provider');\n        }\n        var logins = {};\n        logins[domain] = token;\n        var _a = this._config, identityPoolId = _a.identityPoolId, region = _a.region, identityPoolRegion = _a.identityPoolRegion;\n        if (!identityPoolId) {\n            logger.debug('No Cognito Federated Identity pool provided');\n            return Promise.reject('No Cognito Federated Identity pool provided');\n        }\n        if (!identityPoolRegion && !region) {\n            logger.debug('region is not configured for getting the credentials');\n            return Promise.reject('region is not configured for getting the credentials');\n        }\n        var cognitoConfig = { region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region };\n        var authenticatedCredentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n            var IdentityId, Credentials;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!identity_id) return [3 /*break*/, 2];\n                        return [4 /*yield*/, getId(cognitoConfig, {\n                                IdentityPoolId: identityPoolId,\n                                Logins: logins,\n                            })];\n                    case 1:\n                        IdentityId = (_a.sent()).IdentityId;\n                        identity_id = IdentityId;\n                        _a.label = 2;\n                    case 2: return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                            IdentityId: identity_id,\n                            Logins: logins,\n                        })];\n                    case 3:\n                        Credentials = (_a.sent()).Credentials;\n                        return [2 /*return*/, {\n                                identityId: identity_id,\n                                accessKeyId: Credentials.AccessKeyId,\n                                secretAccessKey: Credentials.SecretKey,\n                                sessionToken: Credentials.SessionToken,\n                                expiration: Credentials.Expiration,\n                            }];\n                }\n            });\n        }); };\n        var credentials = authenticatedCredentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw err;\n            });\n        }); });\n        return this._loadCredentials(credentials, 'federated', true, params);\n    };\n    CredentialsClass.prototype._setCredentialsFromSession = function (session) {\n        var _this = this;\n        logger.debug('set credentials from session');\n        var idToken = session.getIdToken().getJwtToken();\n        var _a = this._config, region = _a.region, userPoolId = _a.userPoolId, identityPoolId = _a.identityPoolId, identityPoolRegion = _a.identityPoolRegion;\n        if (!identityPoolId) {\n            logger.debug('No Cognito Federated Identity pool provided');\n            return Promise.reject('No Cognito Federated Identity pool provided');\n        }\n        if (!identityPoolRegion && !region) {\n            logger.debug('region is not configured for getting the credentials');\n            return Promise.reject('region is not configured for getting the credentials');\n        }\n        var key = 'cognito-idp.' + region + '.amazonaws.com/' + userPoolId;\n        var logins = {};\n        logins[key] = idToken;\n        var cognitoConfig = { region: identityPoolRegion !== null && identityPoolRegion !== void 0 ? identityPoolRegion : region };\n        /*\n            Retreiving identityId with GetIdCommand to mimic the behavior in the following code in aws-sdk-v3:\n            https://git.io/JeDxU\n\n            Note: Retreive identityId from CredentialsProvider once aws-sdk-js v3 supports this.\n        */\n        var credentialsProvider = function () { return __awaiter(_this, void 0, void 0, function () {\n            var guestIdentityId, generatedOrRetrievedIdentityId, IdentityId, _a, _b, AccessKeyId, Expiration, SecretKey, SessionToken, primaryIdentityId;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._getGuestIdentityId()];\n                    case 1:\n                        guestIdentityId = _c.sent();\n                        if (!!guestIdentityId) return [3 /*break*/, 3];\n                        return [4 /*yield*/, getId(cognitoConfig, {\n                                IdentityPoolId: identityPoolId,\n                                Logins: logins,\n                            })];\n                    case 2:\n                        IdentityId = (_c.sent()).IdentityId;\n                        generatedOrRetrievedIdentityId = IdentityId;\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, getCredentialsForIdentity(cognitoConfig, {\n                            IdentityId: guestIdentityId || generatedOrRetrievedIdentityId,\n                            Logins: logins,\n                        })];\n                    case 4:\n                        _a = _c.sent(), _b = _a.Credentials, AccessKeyId = _b.AccessKeyId, Expiration = _b.Expiration, SecretKey = _b.SecretKey, SessionToken = _b.SessionToken, primaryIdentityId = _a.IdentityId;\n                        this._identityId = primaryIdentityId;\n                        if (!guestIdentityId) return [3 /*break*/, 6];\n                        // if guestIdentity is found and used by GetCredentialsForIdentity\n                        // it will be linked to the logins provided, and disqualified as an unauth identity\n                        logger.debug(\"The guest identity \".concat(guestIdentityId, \" has been successfully linked to the logins\"));\n                        if (guestIdentityId === primaryIdentityId) {\n                            logger.debug(\"The guest identity \".concat(guestIdentityId, \" has become the primary identity\"));\n                        }\n                        // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n                        return [4 /*yield*/, this._removeGuestIdentityId()];\n                    case 5:\n                        // remove it from local storage to avoid being used as a guest Identity by _setCredentialsForGuest\n                        _c.sent();\n                        _c.label = 6;\n                    case 6: \n                    // https://github.com/aws/aws-sdk-js-v3/blob/main/packages/credential-provider-cognito-identity/src/fromCognitoIdentity.ts#L40\n                    return [2 /*return*/, {\n                            accessKeyId: AccessKeyId,\n                            secretAccessKey: SecretKey,\n                            sessionToken: SessionToken,\n                            expiration: Expiration,\n                            identityId: primaryIdentityId,\n                        }];\n                }\n            });\n        }); };\n        var credentials = credentialsProvider().catch(function (err) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw err;\n            });\n        }); });\n        return this._loadCredentials(credentials, 'userPool', true, null);\n    };\n    CredentialsClass.prototype._loadCredentials = function (credentials, source, authenticated, info) {\n        var _this = this;\n        var that = this;\n        return new Promise(function (res, rej) {\n            credentials\n                .then(function (credentials) { return __awaiter(_this, void 0, void 0, function () {\n                var user, provider, token, expires_at, identity_id;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            logger.debug('Load credentials successfully', credentials);\n                            if (this._identityId && !credentials.identityId) {\n                                credentials['identityId'] = this._identityId;\n                            }\n                            that._credentials = credentials;\n                            that._credentials.authenticated = authenticated;\n                            that._credentials_source = source;\n                            that._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n                            if (source === 'federated') {\n                                user = Object.assign({ id: this._credentials.identityId }, info.user);\n                                provider = info.provider, token = info.token, expires_at = info.expires_at, identity_id = info.identity_id;\n                                try {\n                                    this._storage.setItem('aws-amplify-federatedInfo', JSON.stringify({\n                                        provider: provider,\n                                        token: token,\n                                        user: user,\n                                        expires_at: expires_at,\n                                        identity_id: identity_id,\n                                    }));\n                                }\n                                catch (e) {\n                                    logger.debug('Failed to put federated info into auth storage', e);\n                                }\n                            }\n                            if (!(source === 'guest')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this._setGuestIdentityId(credentials.identityId)];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            res(that._credentials);\n                            return [2 /*return*/];\n                    }\n                });\n            }); })\n                .catch(function (err) {\n                if (err) {\n                    logger.debug('Failed to load credentials', credentials);\n                    logger.debug('Error loading credentials', err);\n                    rej(err);\n                    return;\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype.set = function (params, source) {\n        if (source === 'session') {\n            return this._setCredentialsFromSession(params);\n        }\n        else if (source === 'federation') {\n            return this._setCredentialsFromFederation(params);\n        }\n        else if (source === 'guest') {\n            return this._setCredentialsForGuest();\n        }\n        else {\n            logger.debug('no source specified for setting credentials');\n            return Promise.reject('invalid source');\n        }\n    };\n    CredentialsClass.prototype.clear = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._credentials = null;\n                this._credentials_source = null;\n                logger.debug('removing aws-amplify-federatedInfo from storage');\n                this._storage.removeItem('aws-amplify-federatedInfo');\n                return [2 /*return*/];\n            });\n        });\n    };\n    /* operations on local stored guest identity */\n    CredentialsClass.prototype._getGuestIdentityId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        identityPoolId = this._config.identityPoolId;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, this._storage.getItem(this._getCognitoIdentityIdStorageKey(identityPoolId))];\n                    case 3:\n                        e_1 = _a.sent();\n                        logger.debug('Failed to get the cached guest identityId', e_1);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._setGuestIdentityId = function (identityId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId, e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        identityPoolId = this._config.identityPoolId;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._storageSync];\n                    case 2:\n                        _a.sent();\n                        this._storage.setItem(this._getCognitoIdentityIdStorageKey(identityPoolId), identityId);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_2 = _a.sent();\n                        logger.debug('Failed to cache guest identityId', e_2);\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CredentialsClass.prototype._removeGuestIdentityId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var identityPoolId;\n            return __generator(this, function (_a) {\n                identityPoolId = this._config.identityPoolId;\n                logger.debug(\"removing \".concat(this._getCognitoIdentityIdStorageKey(identityPoolId), \" from storage\"));\n                this._storage.removeItem(this._getCognitoIdentityIdStorageKey(identityPoolId));\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Compact version of credentials\n     * @param {Object} credentials\n     * @return {Object} - Credentials\n     */\n    CredentialsClass.prototype.shear = function (credentials) {\n        return {\n            accessKeyId: credentials.accessKeyId,\n            sessionToken: credentials.sessionToken,\n            secretAccessKey: credentials.secretAccessKey,\n            identityId: credentials.identityId,\n            authenticated: credentials.authenticated,\n        };\n    };\n    return CredentialsClass;\n}());\nexport { CredentialsClass };\nexport var Credentials = new CredentialsClass(null);\nAmplify.register(Credentials);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}