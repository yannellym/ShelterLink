{"ast":null,"code":"import { __awaiter, __generator, __read } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nimport { validateCoordinates } from './util';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\nvar GeoClass = /** @class */function () {\n  function GeoClass() {\n    this._config = {};\n    this._pluggables = [];\n    logger.debug('Geo Options', this._config);\n  }\n  /**\n   * get the name of the module category\n   * @returns {string} name of the module category\n   */\n  GeoClass.prototype.getModuleName = function () {\n    return GeoClass.MODULE;\n  };\n  /**\n   * add plugin into Geo category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  GeoClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Geo') {\n      this._pluggables.push(pluggable);\n      var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  GeoClass.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      throw new Error('No plugin found in Geo for the provider');\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  GeoClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Geo\n   * @param {Object} config - Configuration object for Geo\n   * @return {Object} - Current configuration\n   */\n  GeoClass.prototype.configure = function (config) {\n    var _this = this;\n    logger.debug('configure Geo');\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AmazonLocationServiceProvider());\n    }\n    return this._config;\n  };\n  /**\n   * Get the map resources that are currently available through the provider\n   * @param {string} provider\n   * @returns - Array of available map resources\n   */\n  GeoClass.prototype.getAvailableMaps = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n    var prov = this.getPluggable(provider);\n    return prov.getAvailableMaps();\n  };\n  /**\n   * Get the map resource set as default in amplify config\n   * @param {string} provider\n   * @returns - Map resource set as the default in amplify config\n   */\n  GeoClass.prototype.getDefaultMap = function (provider) {\n    if (provider === void 0) {\n      provider = DEFAULT_PROVIDER;\n    }\n    var prov = this.getPluggable(provider);\n    return prov.getDefaultMap();\n  };\n  /**\n   * Search by text input with optional parameters\n   * @param  {string} text - The text string that is to be searched for\n   * @param  {SearchByTextOptions} options? - Optional parameters to the search\n   * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n   */\n  GeoClass.prototype.searchByText = function (text, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.searchByText(text, options)];\n          case 2:\n            return [2 /*return*/, _b.sent()];\n          case 3:\n            error_1 = _b.sent();\n            logger.debug(error_1);\n            throw error_1;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Search for search term suggestions based on input text\n   * @param  {string} text - The text string that is to be search for\n   * @param  {SearchByTextOptions} options? - Optional parameters to the search\n   * @returns {Promise<SearchForSuggestionsResults>} - Resolves to an array of search suggestion strings\n   */\n  GeoClass.prototype.searchForSuggestions = function (text, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_2;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.searchForSuggestions(text, options)];\n          case 2:\n            return [2 /*return*/, _b.sent()];\n          case 3:\n            error_2 = _b.sent();\n            logger.debug(error_2);\n            throw error_2;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Search for location by unique ID\n   * @param  {string} placeId - Unique ID of the location that is to be searched for\n   * @param  {searchByPlaceIdOptions} options? - Optional parameters to the search\n   * @returns {Promise<Place>} - Resolves to a place with the given placeId\n   */\n  GeoClass.prototype.searchByPlaceId = function (placeId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var providerName, prov, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            providerName = DEFAULT_PROVIDER;\n            prov = this.getPluggable(providerName);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.searchByPlaceId(placeId, options)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            error_3 = _a.sent();\n            logger.debug(error_3);\n            throw error_3;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Reverse geocoding search via a coordinate point on the map\n   * @param coordinates - Coordinates array for the search input\n   * @param options - Options parameters for the search\n   * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n   */\n  GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, _b, lng, lat, error_4;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b = __read(coordinates, 2), lng = _b[0], lat = _b[1];\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n            validateCoordinates(lng, lat);\n            return [4 /*yield*/, prov.searchByCoordinates(coordinates, options)];\n          case 2:\n            return [2 /*return*/, _c.sent()];\n          case 3:\n            error_4 = _c.sent();\n            logger.debug(error_4);\n            throw error_4;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Create geofences\n   * @param geofences - Single or array of geofence objects to create\n   * @param options? - Optional parameters for creating geofences\n   * @returns {Promise<SaveGeofencesResults>} - Promise that resolves to an object with:\n   *   successes: list of geofences successfully created\n   *   errors: list of geofences that failed to create\n   */\n  GeoClass.prototype.saveGeofences = function (geofences, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, geofenceInputArray, error_5;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            if (!Array.isArray(geofences)) {\n              geofenceInputArray = [geofences];\n            } else {\n              geofenceInputArray = geofences;\n            }\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.saveGeofences(geofenceInputArray, options)];\n          case 2:\n            return [2 /*return*/, _b.sent()];\n          case 3:\n            error_5 = _b.sent();\n            logger.debug(error_5);\n            throw error_5;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Get a single geofence by geofenceId\n   * @param geofenceId: GeofenceId - The string id of the geofence to get\n   * @param options?: GeofenceOptions - Optional parameters for getting a geofence\n   * @returns Promise<Geofence> - Promise that resolves to a geofence object\n   */\n  GeoClass.prototype.getGeofence = function (geofenceId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_6;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.getGeofence(geofenceId, options)];\n          case 2:\n            return [2 /*return*/, _b.sent()];\n          case 3:\n            error_6 = _b.sent();\n            logger.debug(error_6);\n            throw error_6;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * List geofences\n   * @param  options?: ListGeofenceOptions\n   * @returns {Promise<ListGeofencesResults>} - Promise that resolves to an object with:\n   *   entries: list of geofences - 100 geofences are listed per page\n   *   nextToken: token for next page of geofences\n   */\n  GeoClass.prototype.listGeofences = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, error_7;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.listGeofences(options)];\n          case 2:\n            return [2 /*return*/, _b.sent()];\n          case 3:\n            error_7 = _b.sent();\n            logger.debug(error_7);\n            throw error_7;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Delete geofences\n   * @param geofenceIds: string|string[]\n   * @param options?: GeofenceOptions\n   * @returns {Promise<DeleteGeofencesResults>} - Promise that resolves to an object with:\n   *  successes: list of geofences successfully deleted\n   *  errors: list of geofences that failed to delete\n   */\n  GeoClass.prototype.deleteGeofences = function (geofenceIds, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, providerName, prov, geofenceIdsInputArray, error_8;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n            prov = this.getPluggable(providerName);\n            if (!Array.isArray(geofenceIds)) {\n              geofenceIdsInputArray = [geofenceIds];\n            } else {\n              geofenceIdsInputArray = geofenceIds;\n            }\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, prov.deleteGeofences(geofenceIdsInputArray, options)];\n          case 2:\n            return [2 /*return*/, _b.sent()];\n          case 3:\n            error_8 = _b.sent();\n            logger.debug(error_8);\n            throw error_8;\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  GeoClass.MODULE = 'Geo';\n  return GeoClass;\n}();\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);","map":{"version":3,"names":["__awaiter","__generator","__read","Amplify","ConsoleLogger","Logger","parseAWSExports","AmazonLocationServiceProvider","validateCoordinates","logger","DEFAULT_PROVIDER","GeoClass","_config","_pluggables","debug","prototype","getModuleName","MODULE","addPluggable","pluggable","getCategory","push","config","configure","getProviderName","getPluggable","providerName","find","undefined","Error","removePluggable","filter","_this","amplifyConfig","Object","assign","Geo","forEach","length","getAvailableMaps","provider","prov","getDefaultMap","searchByText","text","options","_a","error_1","_b","label","trys","sent","searchForSuggestions","error_2","searchByPlaceId","placeId","error_3","searchByCoordinates","coordinates","lng","lat","error_4","_c","saveGeofences","geofences","geofenceInputArray","error_5","Array","isArray","getGeofence","geofenceId","error_6","listGeofences","error_7","deleteGeofences","geofenceIds","geofenceIdsInputArray","error_8","register"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/geo/lib-esm/Geo.js"],"sourcesContent":["import { __awaiter, __generator, __read } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports, } from '@aws-amplify/core';\nimport { AmazonLocationServiceProvider } from './Providers/AmazonLocationServiceProvider';\nimport { validateCoordinates } from './util';\nvar logger = new Logger('Geo');\nvar DEFAULT_PROVIDER = 'AmazonLocationService';\nvar GeoClass = /** @class */ (function () {\n    function GeoClass() {\n        this._config = {};\n        this._pluggables = [];\n        logger.debug('Geo Options', this._config);\n    }\n    /**\n     * get the name of the module category\n     * @returns {string} name of the module category\n     */\n    GeoClass.prototype.getModuleName = function () {\n        return GeoClass.MODULE;\n    };\n    /**\n     * add plugin into Geo category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    GeoClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Geo') {\n            this._pluggables.push(pluggable);\n            var config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    GeoClass.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            throw new Error('No plugin found in Geo for the provider');\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    GeoClass.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Geo\n     * @param {Object} config - Configuration object for Geo\n     * @return {Object} - Current configuration\n     */\n    GeoClass.prototype.configure = function (config) {\n        var _this = this;\n        logger.debug('configure Geo');\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Geo, config);\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AmazonLocationServiceProvider());\n        }\n        return this._config;\n    };\n    /**\n     * Get the map resources that are currently available through the provider\n     * @param {string} provider\n     * @returns - Array of available map resources\n     */\n    GeoClass.prototype.getAvailableMaps = function (provider) {\n        if (provider === void 0) { provider = DEFAULT_PROVIDER; }\n        var prov = this.getPluggable(provider);\n        return prov.getAvailableMaps();\n    };\n    /**\n     * Get the map resource set as default in amplify config\n     * @param {string} provider\n     * @returns - Map resource set as the default in amplify config\n     */\n    GeoClass.prototype.getDefaultMap = function (provider) {\n        if (provider === void 0) { provider = DEFAULT_PROVIDER; }\n        var prov = this.getPluggable(provider);\n        return prov.getDefaultMap();\n    };\n    /**\n     * Search by text input with optional parameters\n     * @param  {string} text - The text string that is to be searched for\n     * @param  {SearchByTextOptions} options? - Optional parameters to the search\n     * @returns {Promise<Place[]>} - Promise resolves to a list of Places that match search parameters\n     */\n    GeoClass.prototype.searchByText = function (text, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchByText(text, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_1 = _b.sent();\n                        logger.debug(error_1);\n                        throw error_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Search for search term suggestions based on input text\n     * @param  {string} text - The text string that is to be search for\n     * @param  {SearchByTextOptions} options? - Optional parameters to the search\n     * @returns {Promise<SearchForSuggestionsResults>} - Resolves to an array of search suggestion strings\n     */\n    GeoClass.prototype.searchForSuggestions = function (text, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_2;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchForSuggestions(text, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_2 = _b.sent();\n                        logger.debug(error_2);\n                        throw error_2;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Search for location by unique ID\n     * @param  {string} placeId - Unique ID of the location that is to be searched for\n     * @param  {searchByPlaceIdOptions} options? - Optional parameters to the search\n     * @returns {Promise<Place>} - Resolves to a place with the given placeId\n     */\n    GeoClass.prototype.searchByPlaceId = function (placeId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var providerName, prov, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        providerName = DEFAULT_PROVIDER;\n                        prov = this.getPluggable(providerName);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.searchByPlaceId(placeId, options)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                    case 3:\n                        error_3 = _a.sent();\n                        logger.debug(error_3);\n                        throw error_3;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reverse geocoding search via a coordinate point on the map\n     * @param coordinates - Coordinates array for the search input\n     * @param options - Options parameters for the search\n     * @returns {Promise<Place>} - Promise that resolves to a place matching search coordinates\n     */\n    GeoClass.prototype.searchByCoordinates = function (coordinates, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, _b, lng, lat, error_4;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b = __read(coordinates, 2), lng = _b[0], lat = _b[1];\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 3, , 4]);\n                        validateCoordinates(lng, lat);\n                        return [4 /*yield*/, prov.searchByCoordinates(coordinates, options)];\n                    case 2: return [2 /*return*/, _c.sent()];\n                    case 3:\n                        error_4 = _c.sent();\n                        logger.debug(error_4);\n                        throw error_4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Create geofences\n     * @param geofences - Single or array of geofence objects to create\n     * @param options? - Optional parameters for creating geofences\n     * @returns {Promise<SaveGeofencesResults>} - Promise that resolves to an object with:\n     *   successes: list of geofences successfully created\n     *   errors: list of geofences that failed to create\n     */\n    GeoClass.prototype.saveGeofences = function (geofences, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, geofenceInputArray, error_5;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        if (!Array.isArray(geofences)) {\n                            geofenceInputArray = [geofences];\n                        }\n                        else {\n                            geofenceInputArray = geofences;\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.saveGeofences(geofenceInputArray, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_5 = _b.sent();\n                        logger.debug(error_5);\n                        throw error_5;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get a single geofence by geofenceId\n     * @param geofenceId: GeofenceId - The string id of the geofence to get\n     * @param options?: GeofenceOptions - Optional parameters for getting a geofence\n     * @returns Promise<Geofence> - Promise that resolves to a geofence object\n     */\n    GeoClass.prototype.getGeofence = function (geofenceId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_6;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.getGeofence(geofenceId, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_6 = _b.sent();\n                        logger.debug(error_6);\n                        throw error_6;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * List geofences\n     * @param  options?: ListGeofenceOptions\n     * @returns {Promise<ListGeofencesResults>} - Promise that resolves to an object with:\n     *   entries: list of geofences - 100 geofences are listed per page\n     *   nextToken: token for next page of geofences\n     */\n    GeoClass.prototype.listGeofences = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, error_7;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.listGeofences(options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_7 = _b.sent();\n                        logger.debug(error_7);\n                        throw error_7;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Delete geofences\n     * @param geofenceIds: string|string[]\n     * @param options?: GeofenceOptions\n     * @returns {Promise<DeleteGeofencesResults>} - Promise that resolves to an object with:\n     *  successes: list of geofences successfully deleted\n     *  errors: list of geofences that failed to delete\n     */\n    GeoClass.prototype.deleteGeofences = function (geofenceIds, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, providerName, prov, geofenceIdsInputArray, error_8;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = (options || {}).providerName, providerName = _a === void 0 ? DEFAULT_PROVIDER : _a;\n                        prov = this.getPluggable(providerName);\n                        if (!Array.isArray(geofenceIds)) {\n                            geofenceIdsInputArray = [geofenceIds];\n                        }\n                        else {\n                            geofenceIdsInputArray = geofenceIds;\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, prov.deleteGeofences(geofenceIdsInputArray, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3:\n                        error_8 = _b.sent();\n                        logger.debug(error_8);\n                        throw error_8;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GeoClass.MODULE = 'Geo';\n    return GeoClass;\n}());\nexport { GeoClass };\nexport var Geo = new GeoClass();\nAmplify.register(Geo);\n//# sourceMappingURL=Geo.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}