{"ast":null,"code":"import { __extends } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isTranslateTextInput, isTextToSpeechInput, isSpeechToTextInput } from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractConvertPredictionsProvider');\nvar AbstractConvertPredictionsProvider = /** @class */function (_super) {\n  __extends(AbstractConvertPredictionsProvider, _super);\n  function AbstractConvertPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  AbstractConvertPredictionsProvider.prototype.getCategory = function () {\n    return 'Convert';\n  };\n  AbstractConvertPredictionsProvider.prototype.convert = function (input) {\n    if (isTranslateTextInput(input)) {\n      logger.debug('translateText');\n      return this.translateText(input);\n    } else if (isTextToSpeechInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertTextToSpeech(input);\n    } else if (isSpeechToTextInput(input)) {\n      logger.debug('textToSpeech');\n      return this.convertSpeechToText(input);\n    }\n  };\n  AbstractConvertPredictionsProvider.prototype.translateText = function (translateTextInput) {\n    throw new Error('convertText is not implemented by this provider');\n  };\n  AbstractConvertPredictionsProvider.prototype.convertTextToSpeech = function (textToSpeechInput) {\n    throw new Error('convertTextToSpeech is not implemented by this provider');\n  };\n  AbstractConvertPredictionsProvider.prototype.convertSpeechToText = function (speechToTextInput) {\n    throw new Error('convertSpeechToText is not implemented by this provider');\n  };\n  return AbstractConvertPredictionsProvider;\n}(AbstractPredictionsProvider);\nexport { AbstractConvertPredictionsProvider };","map":{"version":3,"names":["isTranslateTextInput","isTextToSpeechInput","isSpeechToTextInput","AbstractPredictionsProvider","ConsoleLogger","Logger","logger","AbstractConvertPredictionsProvider","_super","__extends","prototype","getCategory","convert","input","debug","translateText","convertTextToSpeech","convertSpeechToText","translateTextInput","Error","textToSpeechInput","speechToTextInput"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/predictions/src/types/Providers/AbstractConvertPredictionsProvider.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport {\n\tTranslateTextInput,\n\tTextToSpeechInput,\n\tSpeechToTextInput,\n\tisTranslateTextInput,\n\tisTextToSpeechInput,\n\tisSpeechToTextInput,\n\tTranslateTextOutput,\n\tTextToSpeechOutput,\n\tSpeechToTextOutput,\n} from '../Predictions';\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nconst logger = new Logger('AbstractConvertPredictionsProvider');\n\nexport abstract class AbstractConvertPredictionsProvider extends AbstractPredictionsProvider {\n\tgetCategory(): string {\n\t\treturn 'Convert';\n\t}\n\n\tconvert(\n\t\tinput: TranslateTextInput | TextToSpeechInput | SpeechToTextInput\n\t): Promise<TextToSpeechOutput | TranslateTextOutput | SpeechToTextOutput> {\n\t\tif (isTranslateTextInput(input)) {\n\t\t\tlogger.debug('translateText');\n\t\t\treturn this.translateText(input);\n\t\t} else if (isTextToSpeechInput(input)) {\n\t\t\tlogger.debug('textToSpeech');\n\t\t\treturn this.convertTextToSpeech(input);\n\t\t} else if (isSpeechToTextInput(input)) {\n\t\t\tlogger.debug('textToSpeech');\n\t\t\treturn this.convertSpeechToText(input);\n\t\t}\n\t}\n\n\tprotected translateText(\n\t\ttranslateTextInput: TranslateTextInput\n\t): Promise<TranslateTextOutput> {\n\t\tthrow new Error('convertText is not implemented by this provider');\n\t}\n\n\tprotected convertTextToSpeech(\n\t\ttextToSpeechInput: TextToSpeechInput\n\t): Promise<TextToSpeechOutput> {\n\t\tthrow new Error('convertTextToSpeech is not implemented by this provider');\n\t}\n\n\tprotected convertSpeechToText(\n\t\tspeechToTextInput: SpeechToTextInput\n\t): Promise<SpeechToTextOutput> {\n\t\tthrow new Error('convertSpeechToText is not implemented by this provider');\n\t}\n}\n"],"mappings":";AAAA;AACA;AACA,SAICA,oBAAoB,EACpBC,mBAAmB,EACnBC,mBAAmB,QAIb,gBAAgB;AACvB,SAASC,2BAA2B,QAAQ,+BAA+B;AAC3E,SAASC,aAAa,IAAIC,MAAM,QAAQ,mBAAmB;AAC3D,IAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,oCAAoC,CAAC;AAE/D,IAAAE,kCAAA,0BAAAC,MAAA;EAAiEC,SAAA,CAAAF,kCAAA,EAAAC,MAAA;EAAjE,SAAAD,mCAAA;;EAqCA;EApCCA,kCAAA,CAAAG,SAAA,CAAAC,WAAW,GAAX;IACC,OAAO,SAAS;EACjB,CAAC;EAEDJ,kCAAA,CAAAG,SAAA,CAAAE,OAAO,GAAP,UACCC,KAAiE;IAEjE,IAAIb,oBAAoB,CAACa,KAAK,CAAC,EAAE;MAChCP,MAAM,CAACQ,KAAK,CAAC,eAAe,CAAC;MAC7B,OAAO,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC;KAChC,MAAM,IAAIZ,mBAAmB,CAACY,KAAK,CAAC,EAAE;MACtCP,MAAM,CAACQ,KAAK,CAAC,cAAc,CAAC;MAC5B,OAAO,IAAI,CAACE,mBAAmB,CAACH,KAAK,CAAC;KACtC,MAAM,IAAIX,mBAAmB,CAACW,KAAK,CAAC,EAAE;MACtCP,MAAM,CAACQ,KAAK,CAAC,cAAc,CAAC;MAC5B,OAAO,IAAI,CAACG,mBAAmB,CAACJ,KAAK,CAAC;;EAExC,CAAC;EAESN,kCAAA,CAAAG,SAAA,CAAAK,aAAa,GAAvB,UACCG,kBAAsC;IAEtC,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACnE,CAAC;EAESZ,kCAAA,CAAAG,SAAA,CAAAM,mBAAmB,GAA7B,UACCI,iBAAoC;IAEpC,MAAM,IAAID,KAAK,CAAC,yDAAyD,CAAC;EAC3E,CAAC;EAESZ,kCAAA,CAAAG,SAAA,CAAAO,mBAAmB,GAA7B,UACCI,iBAAoC;IAEpC,MAAM,IAAIF,KAAK,CAAC,yDAAyD,CAAC;EAC3E,CAAC;EACF,OAAAZ,kCAAC;AAAD,CAAC,CArCgEJ,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}