{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useAnimalsBasedOnPreferencesAPI = () => {\n  _s();\n  const [preferredAnimals, setPreferredAnimals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchAnimalsBasedOnPreferences = async preferences => {\n    try {\n      let filteredAnimals = [];\n      let apiCallsMade = 0;\n      setLoading(true);\n      while (apiCallsMade < 2 && filteredAnimals.length === 0) {\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const size = preferences.size !== 'any' ? preferences.size : 'Large';\n        const apiUrl = `http://localhost:3002/api/petfinder?perPage=100&type=${preferences.type}&gender=${gender}&age=${preferences.age}&size=${size}`;\n        const response = await fetch(apiUrl);\n        const prefdata = await response.json();\n        if (prefdata && prefdata.animals) {\n          filteredAnimals = prefdata.animals.filter(animal => {\n            const matchesTags = preferences.temperament.some(prefTemperament => animal.tags.includes(prefTemperament));\n            return matchesTags || preferences.temperament.length === 0;\n          });\n          if (filteredAnimals.length === 0) {\n            apiCallsMade++;\n          }\n        }\n      }\n      if (filteredAnimals.length === 0) {\n        const type = preferences.type;\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const fallbackApiUrl = `http://localhost:3002/api/petfinder?perPage=1&type=${type}&gender=${gender}`;\n        const response = await fetch(fallbackApiUrl);\n        const animalData = await response.json();\n        if (animalData && animalData.animals && animalData.animals.length > 0) {\n          const matchedAnimal = animalData.animals[0];\n          filteredAnimals.push(matchedAnimal);\n        } else {\n          console.log(\"No matching animal found based on type and gender or age.\");\n        }\n      }\n      setPreferredAnimals(filteredAnimals);\n    } catch (error) {\n      console.error('Error fetching pet data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    preferredAnimals,\n    // Return the state variable for preferredAnimals\n    loading,\n    // Return the state variable for loading\n    fetchAnimalsBasedOnPreferences // function\n  };\n};\n_s(useAnimalsBasedOnPreferencesAPI, \"/LZ0d9utYydmfwCC9aJ/X280MtY=\");\nexport default useAnimalsBasedOnPreferencesAPI;","map":{"version":3,"names":["useState","useAnimalsBasedOnPreferencesAPI","_s","preferredAnimals","setPreferredAnimals","loading","setLoading","fetchAnimalsBasedOnPreferences","preferences","filteredAnimals","apiCallsMade","length","gender","size","apiUrl","type","age","response","fetch","prefdata","json","animals","filter","animal","matchesTags","temperament","some","prefTemperament","tags","includes","fallbackApiUrl","animalData","matchedAnimal","push","console","log","error"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/useAnimalsBasedOnPreferencesAPI.js"],"sourcesContent":["import { useState } from 'react';\n\nconst useAnimalsBasedOnPreferencesAPI = () => {\n  const [preferredAnimals, setPreferredAnimals] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchAnimalsBasedOnPreferences = async (preferences) => {\n    try {\n      let filteredAnimals = [];\n      let apiCallsMade = 0;\n\n      setLoading(true);\n\n      while (apiCallsMade < 2 && filteredAnimals.length === 0) {\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const size = preferences.size !== 'any' ? preferences.size : 'Large';\n        const apiUrl = `http://localhost:3002/api/petfinder?perPage=100&type=${preferences.type}&gender=${gender}&age=${preferences.age}&size=${size}`;\n\n        const response = await fetch(apiUrl);\n        const prefdata = await response.json();\n\n        if (prefdata && prefdata.animals) {\n          filteredAnimals = prefdata.animals.filter((animal) => {\n            const matchesTags = preferences.temperament.some((prefTemperament) =>\n              animal.tags.includes(prefTemperament)\n            );\n            return matchesTags || preferences.temperament.length === 0;\n          });\n\n          if (filteredAnimals.length === 0) {\n            apiCallsMade++;\n          }\n        }\n      }\n\n      if (filteredAnimals.length === 0) {\n        const type = preferences.type;\n        const gender = preferences.gender !== 'any' ? preferences.gender : 'Male';\n        const fallbackApiUrl = `http://localhost:3002/api/petfinder?perPage=1&type=${type}&gender=${gender}`;\n\n        const response = await fetch(fallbackApiUrl);\n        const animalData = await response.json();\n\n        if (animalData && animalData.animals && animalData.animals.length > 0) {\n          const matchedAnimal = animalData.animals[0];\n          filteredAnimals.push(matchedAnimal);\n        } else {\n          console.log(\"No matching animal found based on type and gender or age.\");\n        }\n      }\n\n      setPreferredAnimals(filteredAnimals);\n    } catch (error) {\n      console.error('Error fetching pet data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    preferredAnimals, // Return the state variable for preferredAnimals\n    loading, // Return the state variable for loading\n    fetchAnimalsBasedOnPreferences, // function\n  };\n};\n\nexport default useAnimalsBasedOnPreferencesAPI;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}