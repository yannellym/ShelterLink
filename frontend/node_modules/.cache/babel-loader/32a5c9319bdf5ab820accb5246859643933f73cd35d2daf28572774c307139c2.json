{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 10;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n\n  // Function to fetch pets based on filters and pagination\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      // Paginate the pets from the cache\n      const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n      const endIndex = startIndex + itemsPerPage;\n      const petsToDisplay = cachedData.slice(startIndex, endIndex);\n      setSearchResults(petsToDisplay);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Update the total number of pages based on cached data\n    setTotalPages(Math.ceil(cachedData.length / itemsPerPage));\n    fetchPets();\n  }, [currentPageRef, cachedData]);\n  const handlePageChange = page => {\n    currentPageRef.current = page;\n    fetchPets();\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n    fetchPets();\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-horizontal\",\n      children: [Array.from({\n        length: totalPagesToDisplay\n      }, (_, index) => {\n        const page = firstPage + index;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handlePageChange(page);\n            fetchPets();\n          },\n          className: currentPageRef.current === page ? 'active' : '',\n          children: page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this);\n      }), lastPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePageChange(lastPage + 1);\n          fetchPets();\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), totalPages > 1 && renderPaginationButtons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"+8z3zipEghC7Yl/B7VYm7IzKqso=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PetCard","Filter","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","currentPageRef","itemsPerPage","cachedData","setCachedData","totalPages","setTotalPages","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchPets","startIndex","current","endIndex","petsToDisplay","slice","error","console","message","Math","ceil","length","handlePageChange","page","handleFilterChange","newFilters","renderPetCards","map","pet","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","children","renderPaginationButtons","visiblePageCount","totalPagesToDisplay","min","firstPage","max","floor","lastPage","className","Array","from","_","index","onClick","onFilterChange","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 10;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch pets based on filters and pagination\n    // Function to fetch pets based on filters and pagination\n    const fetchPets = async () => {\n      try {\n        // Paginate the pets from the cache\n        const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        const petsToDisplay = cachedData.slice(startIndex, endIndex);\n  \n        setSearchResults(petsToDisplay);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      }\n    };\n  \n    useEffect(() => {\n      // Update the total number of pages based on cached data\n      setTotalPages(Math.ceil(cachedData.length / itemsPerPage));\n      fetchPets();\n    }, [currentPageRef, cachedData]);\n  \n    const handlePageChange = (page) => {\n      currentPageRef.current = page;\n      fetchPets();\n    };\n  \n    // Function to handle filter changes\n    const handleFilterChange = (newFilters) => {\n      setSelectedFilters(newFilters);\n      currentPageRef.current = 1;\n      fetchPets();\n    };\n  \n\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map((pet) => (\n          <PetCard\n            key={pet.id}\n            pet={pet}\n            addToFavorites={addToFavorites}\n            removeFromFavorites={removeFromFavorites}\n            isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n          />\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n\n    return (\n      <div className=\"pagination-horizontal\">\n        {Array.from({ length: totalPagesToDisplay }, (_, index) => {\n          const page = firstPage + index;\n          return (\n            <button\n              key={index}\n              onClick={() => {\n                handlePageChange(page);\n                fetchPets();\n              }}\n              className={currentPageRef.current === page ? 'active' : ''}\n            >\n              {page}\n            </button>\n          );\n        })}\n        {lastPage < totalPages && (\n          <button\n            onClick={() => {\n              handlePageChange(lastPage + 1);\n              fetchPets();\n            }}\n          >\n            ...\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        {totalPages > 1 && renderPaginationButtons()}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}