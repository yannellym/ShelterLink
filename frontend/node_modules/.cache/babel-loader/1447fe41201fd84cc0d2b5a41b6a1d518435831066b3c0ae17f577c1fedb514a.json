{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nexport var serializeAws_json1_1CreateParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.CreateParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteTerminologyRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DescribeTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeTextTranslationJobRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.GetParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.GetTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetTerminologyRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ImportTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ImportTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ImportTerminologyRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTerminologiesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTerminologies\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTerminologiesRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTextTranslationJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTextTranslationJobs\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTextTranslationJobsRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.StartTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartTextTranslationJobRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.StopTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopTextTranslationJobRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1TranslateTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.TranslateText\"\n      };\n      body = JSON.stringify(serializeAws_json1_1TranslateTextRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.UpdateParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateParallelDataRequest(input, context));\n      return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1CreateParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1CreateParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1CreateParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1CreateParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    var _j;\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ConflictException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#ConflictException\":\n              return [3 /*break*/, 2];\n            case \"InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 6];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 8];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3 /*break*/, 10];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 12];\n          }\n          return [3 /*break*/, 14];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 15];\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DeleteParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DeleteTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DeleteTerminologyCommandError(output, context)];\n          }\n          return [4 /*yield*/, collectBody(output.body, context)];\n        case 1:\n          _a.sent();\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DeleteTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1DescribeTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1DescribeTextTranslationJobCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1DescribeTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1GetTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1GetTerminologyCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetTerminologyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1GetTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ImportTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ImportTerminologyCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ImportTerminologyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ImportTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTerminologiesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListTerminologiesCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTerminologiesResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTerminologiesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1ListTextTranslationJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1ListTextTranslationJobsCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTextTranslationJobsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ListTextTranslationJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n    var _g;\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidFilterException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidFilterException\":\n              return [3 /*break*/, 4];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n          }\n          return [3 /*break*/, 10];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidFilterExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 11];\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StartTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StartTextTranslationJobCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StartTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StartTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n    var _h;\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 4];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 6];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 8];\n            case \"UnsupportedLanguagePairException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n              return [3 /*break*/, 10];\n          }\n          return [3 /*break*/, 12];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 13];\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1StopTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1StopTextTranslationJobCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StopTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1StopTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n    var _f;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 2];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 4];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 6];\n          }\n          return [3 /*break*/, 8];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 9];\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1TranslateTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1TranslateTextCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1TranslateTextResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1TranslateTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"DetectedLanguageLowConfidenceException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#DetectedLanguageLowConfidenceException\":\n              return [3 /*break*/, 2];\n            case \"InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 4];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 6];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 8];\n            case \"ServiceUnavailableException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#ServiceUnavailableException\":\n              return [3 /*break*/, 10];\n            case \"TextSizeLimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.translate#TextSizeLimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 14];\n            case \"UnsupportedLanguagePairException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n              return [3 /*break*/, 16];\n          }\n          return [3 /*break*/, 18];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TextSizeLimitExceededExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nexport var deserializeAws_json1_1UpdateParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2 /*return*/, deserializeAws_json1_1UpdateParallelDataCommandError(output, context)];\n          }\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2 /*return*/, Promise.resolve(response)];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1UpdateParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n    var _l;\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4 /*yield*/, parseBody(output.body, context)];\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n          switch (_b) {\n            case \"ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"com.amazonaws.translate#ConcurrentModificationException\":\n              return [3 /*break*/, 2];\n            case \"ConflictException\":\n              return [3 /*break*/, 4];\n            case \"com.amazonaws.translate#ConflictException\":\n              return [3 /*break*/, 4];\n            case \"InternalServerException\":\n              return [3 /*break*/, 6];\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3 /*break*/, 6];\n            case \"InvalidParameterValueException\":\n              return [3 /*break*/, 8];\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3 /*break*/, 8];\n            case \"InvalidRequestException\":\n              return [3 /*break*/, 10];\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3 /*break*/, 10];\n            case \"LimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3 /*break*/, 12];\n            case \"ResourceNotFoundException\":\n              return [3 /*break*/, 14];\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3 /*break*/, 14];\n            case \"TooManyRequestsException\":\n              return [3 /*break*/, 16];\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3 /*break*/, 16];\n          }\n          return [3 /*break*/, 18];\n        case 2:\n          _c = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 4:\n          _d = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)];\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 6:\n          _e = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 8:\n          _f = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 10:\n          _g = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 12:\n          _h = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 14:\n          _j = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 16:\n          _k = [{}];\n          return [4 /*yield*/, deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3 /*break*/, 19];\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\nvar deserializeAws_json1_1ConcurrentModificationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n      contents = __assign({\n        name: \"ConcurrentModificationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ConflictException(body, context);\n      contents = __assign({\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1DetectedLanguageLowConfidenceException(body, context);\n      contents = __assign({\n        name: \"DetectedLanguageLowConfidenceException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InternalServerExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InternalServerException(body, context);\n      contents = __assign({\n        name: \"InternalServerException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidFilterExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidFilterException(body, context);\n      contents = __assign({\n        name: \"InvalidFilterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidParameterValueExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidParameterValueException(body, context);\n      contents = __assign({\n        name: \"InvalidParameterValueException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1InvalidRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidRequestException(body, context);\n      contents = __assign({\n        name: \"InvalidRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1ServiceUnavailableExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ServiceUnavailableException(body, context);\n      contents = __assign({\n        name: \"ServiceUnavailableException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1TextSizeLimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1TextSizeLimitExceededException(body, context);\n      contents = __assign({\n        name: \"TextSizeLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n      contents = __assign({\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1UnsupportedLanguagePairException(body, context);\n      contents = __assign({\n        name: \"UnsupportedLanguagePairException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2 /*return*/, contents];\n    });\n  });\n};\nvar serializeAws_json1_1CreateParallelDataRequest = function (input, context) {\n  var _a;\n  return __assign(__assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EncryptionKey !== undefined && input.EncryptionKey !== null && {\n    EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.ParallelDataConfig !== undefined && input.ParallelDataConfig !== null && {\n    ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context)\n  });\n};\nvar serializeAws_json1_1DeleteParallelDataRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\nvar serializeAws_json1_1DeleteTerminologyRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\nvar serializeAws_json1_1DescribeTextTranslationJobRequest = function (input, context) {\n  return __assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  });\n};\nvar serializeAws_json1_1EncryptionKey = function (input, context) {\n  return __assign(__assign({}, input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\nvar serializeAws_json1_1GetParallelDataRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\nvar serializeAws_json1_1GetTerminologyRequest = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.TerminologyDataFormat !== undefined && input.TerminologyDataFormat !== null && {\n    TerminologyDataFormat: input.TerminologyDataFormat\n  });\n};\nvar serializeAws_json1_1ImportTerminologyRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EncryptionKey !== undefined && input.EncryptionKey !== null && {\n    EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context)\n  }), input.MergeStrategy !== undefined && input.MergeStrategy !== null && {\n    MergeStrategy: input.MergeStrategy\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.TerminologyData !== undefined && input.TerminologyData !== null && {\n    TerminologyData: serializeAws_json1_1TerminologyData(input.TerminologyData, context)\n  });\n};\nvar serializeAws_json1_1InputDataConfig = function (input, context) {\n  return __assign(__assign({}, input.ContentType !== undefined && input.ContentType !== null && {\n    ContentType: input.ContentType\n  }), input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\nvar serializeAws_json1_1ListParallelDataRequest = function (input, context) {\n  return __assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\nvar serializeAws_json1_1ListTerminologiesRequest = function (input, context) {\n  return __assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\nvar serializeAws_json1_1ListTextTranslationJobsRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.Filter !== undefined && input.Filter !== null && {\n    Filter: serializeAws_json1_1TextTranslationJobFilter(input.Filter, context)\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\nvar serializeAws_json1_1OutputDataConfig = function (input, context) {\n  return __assign({}, input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\nvar serializeAws_json1_1ParallelDataConfig = function (input, context) {\n  return __assign(__assign({}, input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  }), input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\nvar serializeAws_json1_1ResourceNameList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1StartTextTranslationJobRequest = function (input, context) {\n  var _a;\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.DataAccessRoleArn !== undefined && input.DataAccessRoleArn !== null && {\n    DataAccessRoleArn: input.DataAccessRoleArn\n  }), input.InputDataConfig !== undefined && input.InputDataConfig !== null && {\n    InputDataConfig: serializeAws_json1_1InputDataConfig(input.InputDataConfig, context)\n  }), input.JobName !== undefined && input.JobName !== null && {\n    JobName: input.JobName\n  }), input.OutputDataConfig !== undefined && input.OutputDataConfig !== null && {\n    OutputDataConfig: serializeAws_json1_1OutputDataConfig(input.OutputDataConfig, context)\n  }), input.ParallelDataNames !== undefined && input.ParallelDataNames !== null && {\n    ParallelDataNames: serializeAws_json1_1ResourceNameList(input.ParallelDataNames, context)\n  }), input.SourceLanguageCode !== undefined && input.SourceLanguageCode !== null && {\n    SourceLanguageCode: input.SourceLanguageCode\n  }), input.TargetLanguageCodes !== undefined && input.TargetLanguageCodes !== null && {\n    TargetLanguageCodes: serializeAws_json1_1TargetLanguageCodeStringList(input.TargetLanguageCodes, context)\n  }), input.TerminologyNames !== undefined && input.TerminologyNames !== null && {\n    TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context)\n  });\n};\nvar serializeAws_json1_1StopTextTranslationJobRequest = function (input, context) {\n  return __assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  });\n};\nvar serializeAws_json1_1TargetLanguageCodeStringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar serializeAws_json1_1TerminologyData = function (input, context) {\n  return __assign(__assign({}, input.File !== undefined && input.File !== null && {\n    File: context.base64Encoder(input.File)\n  }), input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  });\n};\nvar serializeAws_json1_1TextTranslationJobFilter = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.JobName !== undefined && input.JobName !== null && {\n    JobName: input.JobName\n  }), input.JobStatus !== undefined && input.JobStatus !== null && {\n    JobStatus: input.JobStatus\n  }), input.SubmittedAfterTime !== undefined && input.SubmittedAfterTime !== null && {\n    SubmittedAfterTime: Math.round(input.SubmittedAfterTime.getTime() / 1000)\n  }), input.SubmittedBeforeTime !== undefined && input.SubmittedBeforeTime !== null && {\n    SubmittedBeforeTime: Math.round(input.SubmittedBeforeTime.getTime() / 1000)\n  });\n};\nvar serializeAws_json1_1TranslateTextRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.SourceLanguageCode !== undefined && input.SourceLanguageCode !== null && {\n    SourceLanguageCode: input.SourceLanguageCode\n  }), input.TargetLanguageCode !== undefined && input.TargetLanguageCode !== null && {\n    TargetLanguageCode: input.TargetLanguageCode\n  }), input.TerminologyNames !== undefined && input.TerminologyNames !== null && {\n    TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context)\n  }), input.Text !== undefined && input.Text !== null && {\n    Text: input.Text\n  });\n};\nvar serializeAws_json1_1UpdateParallelDataRequest = function (input, context) {\n  var _a;\n  return __assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.ParallelDataConfig !== undefined && input.ParallelDataConfig !== null && {\n    ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context)\n  });\n};\nvar deserializeAws_json1_1AppliedTerminology = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Terms: output.Terms !== undefined && output.Terms !== null ? deserializeAws_json1_1TermList(output.Terms, context) : undefined\n  };\n};\nvar deserializeAws_json1_1AppliedTerminologyList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1AppliedTerminology(entry, context);\n  });\n};\nvar deserializeAws_json1_1ConcurrentModificationException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1ConflictException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1CreateParallelDataResponse = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\nvar deserializeAws_json1_1DeleteParallelDataResponse = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\nvar deserializeAws_json1_1DescribeTextTranslationJobResponse = function (output, context) {\n  return {\n    TextTranslationJobProperties: output.TextTranslationJobProperties !== undefined && output.TextTranslationJobProperties !== null ? deserializeAws_json1_1TextTranslationJobProperties(output.TextTranslationJobProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1DetectedLanguageLowConfidenceException = function (output, context) {\n  return {\n    DetectedLanguageCode: output.DetectedLanguageCode !== undefined && output.DetectedLanguageCode !== null ? output.DetectedLanguageCode : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1EncryptionKey = function (output, context) {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\nvar deserializeAws_json1_1GetParallelDataResponse = function (output, context) {\n  return {\n    AuxiliaryDataLocation: output.AuxiliaryDataLocation !== undefined && output.AuxiliaryDataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.AuxiliaryDataLocation, context) : undefined,\n    DataLocation: output.DataLocation !== undefined && output.DataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.DataLocation, context) : undefined,\n    LatestUpdateAttemptAuxiliaryDataLocation: output.LatestUpdateAttemptAuxiliaryDataLocation !== undefined && output.LatestUpdateAttemptAuxiliaryDataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.LatestUpdateAttemptAuxiliaryDataLocation, context) : undefined,\n    ParallelDataProperties: output.ParallelDataProperties !== undefined && output.ParallelDataProperties !== null ? deserializeAws_json1_1ParallelDataProperties(output.ParallelDataProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1GetTerminologyResponse = function (output, context) {\n  return {\n    TerminologyDataLocation: output.TerminologyDataLocation !== undefined && output.TerminologyDataLocation !== null ? deserializeAws_json1_1TerminologyDataLocation(output.TerminologyDataLocation, context) : undefined,\n    TerminologyProperties: output.TerminologyProperties !== undefined && output.TerminologyProperties !== null ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ImportTerminologyResponse = function (output, context) {\n  return {\n    TerminologyProperties: output.TerminologyProperties !== undefined && output.TerminologyProperties !== null ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context) : undefined\n  };\n};\nvar deserializeAws_json1_1InputDataConfig = function (output, context) {\n  return {\n    ContentType: output.ContentType !== undefined && output.ContentType !== null ? output.ContentType : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\nvar deserializeAws_json1_1InternalServerException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidFilterException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidParameterValueException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1InvalidRequestException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1JobDetails = function (output, context) {\n  return {\n    DocumentsWithErrorsCount: output.DocumentsWithErrorsCount !== undefined && output.DocumentsWithErrorsCount !== null ? output.DocumentsWithErrorsCount : undefined,\n    InputDocumentsCount: output.InputDocumentsCount !== undefined && output.InputDocumentsCount !== null ? output.InputDocumentsCount : undefined,\n    TranslatedDocumentsCount: output.TranslatedDocumentsCount !== undefined && output.TranslatedDocumentsCount !== null ? output.TranslatedDocumentsCount : undefined\n  };\n};\nvar deserializeAws_json1_1LanguageCodeStringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1ListParallelDataResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    ParallelDataPropertiesList: output.ParallelDataPropertiesList !== undefined && output.ParallelDataPropertiesList !== null ? deserializeAws_json1_1ParallelDataPropertiesList(output.ParallelDataPropertiesList, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTerminologiesResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TerminologyPropertiesList: output.TerminologyPropertiesList !== undefined && output.TerminologyPropertiesList !== null ? deserializeAws_json1_1TerminologyPropertiesList(output.TerminologyPropertiesList, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ListTextTranslationJobsResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TextTranslationJobPropertiesList: output.TextTranslationJobPropertiesList !== undefined && output.TextTranslationJobPropertiesList !== null ? deserializeAws_json1_1TextTranslationJobPropertiesList(output.TextTranslationJobPropertiesList, context) : undefined\n  };\n};\nvar deserializeAws_json1_1OutputDataConfig = function (output, context) {\n  return {\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataConfig = function (output, context) {\n  return {\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataDataLocation = function (output, context) {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType: output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataProperties = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt: output.CreatedAt !== undefined && output.CreatedAt !== null ? new Date(Math.round(output.CreatedAt * 1000)) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey: output.EncryptionKey !== undefined && output.EncryptionKey !== null ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context) : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    ImportedDataSize: output.ImportedDataSize !== undefined && output.ImportedDataSize !== null ? output.ImportedDataSize : undefined,\n    ImportedRecordCount: output.ImportedRecordCount !== undefined && output.ImportedRecordCount !== null ? output.ImportedRecordCount : undefined,\n    LastUpdatedAt: output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null ? new Date(Math.round(output.LastUpdatedAt * 1000)) : undefined,\n    LatestUpdateAttemptAt: output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000)) : undefined,\n    LatestUpdateAttemptStatus: output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null ? output.LatestUpdateAttemptStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    ParallelDataConfig: output.ParallelDataConfig !== undefined && output.ParallelDataConfig !== null ? deserializeAws_json1_1ParallelDataConfig(output.ParallelDataConfig, context) : undefined,\n    SkippedRecordCount: output.SkippedRecordCount !== undefined && output.SkippedRecordCount !== null ? output.SkippedRecordCount : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context) : undefined\n  };\n};\nvar deserializeAws_json1_1ParallelDataPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1ParallelDataProperties(entry, context);\n  });\n};\nvar deserializeAws_json1_1ResourceNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1ServiceUnavailableException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1StartTextTranslationJobResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined\n  };\n};\nvar deserializeAws_json1_1StopTextTranslationJobResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined\n  };\n};\nvar deserializeAws_json1_1TargetLanguageCodeStringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return entry;\n  });\n};\nvar deserializeAws_json1_1Term = function (output, context) {\n  return {\n    SourceText: output.SourceText !== undefined && output.SourceText !== null ? output.SourceText : undefined,\n    TargetText: output.TargetText !== undefined && output.TargetText !== null ? output.TargetText : undefined\n  };\n};\nvar deserializeAws_json1_1TerminologyDataLocation = function (output, context) {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType: output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined\n  };\n};\nvar deserializeAws_json1_1TerminologyProperties = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt: output.CreatedAt !== undefined && output.CreatedAt !== null ? new Date(Math.round(output.CreatedAt * 1000)) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey: output.EncryptionKey !== undefined && output.EncryptionKey !== null ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context) : undefined,\n    LastUpdatedAt: output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null ? new Date(Math.round(output.LastUpdatedAt * 1000)) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SizeBytes: output.SizeBytes !== undefined && output.SizeBytes !== null ? output.SizeBytes : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context) : undefined,\n    TermCount: output.TermCount !== undefined && output.TermCount !== null ? output.TermCount : undefined\n  };\n};\nvar deserializeAws_json1_1TerminologyPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1TerminologyProperties(entry, context);\n  });\n};\nvar deserializeAws_json1_1TermList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1Term(entry, context);\n  });\n};\nvar deserializeAws_json1_1TextSizeLimitExceededException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1TextTranslationJobProperties = function (output, context) {\n  return {\n    DataAccessRoleArn: output.DataAccessRoleArn !== undefined && output.DataAccessRoleArn !== null ? output.DataAccessRoleArn : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(Math.round(output.EndTime * 1000)) : undefined,\n    InputDataConfig: output.InputDataConfig !== undefined && output.InputDataConfig !== null ? deserializeAws_json1_1InputDataConfig(output.InputDataConfig, context) : undefined,\n    JobDetails: output.JobDetails !== undefined && output.JobDetails !== null ? deserializeAws_json1_1JobDetails(output.JobDetails, context) : undefined,\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobName: output.JobName !== undefined && output.JobName !== null ? output.JobName : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    OutputDataConfig: output.OutputDataConfig !== undefined && output.OutputDataConfig !== null ? deserializeAws_json1_1OutputDataConfig(output.OutputDataConfig, context) : undefined,\n    ParallelDataNames: output.ParallelDataNames !== undefined && output.ParallelDataNames !== null ? deserializeAws_json1_1ResourceNameList(output.ParallelDataNames, context) : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    SubmittedTime: output.SubmittedTime !== undefined && output.SubmittedTime !== null ? new Date(Math.round(output.SubmittedTime * 1000)) : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1TargetLanguageCodeStringList(output.TargetLanguageCodes, context) : undefined,\n    TerminologyNames: output.TerminologyNames !== undefined && output.TerminologyNames !== null ? deserializeAws_json1_1ResourceNameList(output.TerminologyNames, context) : undefined\n  };\n};\nvar deserializeAws_json1_1TextTranslationJobPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n    return deserializeAws_json1_1TextTranslationJobProperties(entry, context);\n  });\n};\nvar deserializeAws_json1_1TooManyRequestsException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\nvar deserializeAws_json1_1TranslateTextResponse = function (output, context) {\n  return {\n    AppliedTerminologies: output.AppliedTerminologies !== undefined && output.AppliedTerminologies !== null ? deserializeAws_json1_1AppliedTerminologyList(output.AppliedTerminologies, context) : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCode: output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null ? output.TargetLanguageCode : undefined,\n    TranslatedText: output.TranslatedText !== undefined && output.TranslatedText !== null ? output.TranslatedText : undefined\n  };\n};\nvar deserializeAws_json1_1UnsupportedLanguagePairException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCode: output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null ? output.TargetLanguageCode : undefined\n  };\n};\nvar deserializeAws_json1_1UpdateParallelDataResponse = function (output, context) {\n  return {\n    LatestUpdateAttemptAt: output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000)) : undefined,\n    LatestUpdateAttemptStatus: output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null ? output.LatestUpdateAttemptStatus : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\nvar deserializeMetadata = function (output) {\n  var _a;\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4 /*yield*/, context.endpoint()];\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n          if (body !== undefined) {\n            contents.body = body;\n          }\n          return [2 /*return*/, new __HttpRequest(contents)];\n      }\n    });\n  });\n};\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n  return \"\";\n};","map":{"version":3,"names":["HttpRequest","__HttpRequest","v4","generateIdempotencyToken","serializeAws_json1_1CreateParallelDataCommand","input","context","__awaiter","headers","body","JSON","stringify","serializeAws_json1_1CreateParallelDataRequest","buildHttpRpcRequest","undefined","serializeAws_json1_1DeleteParallelDataCommand","serializeAws_json1_1DeleteParallelDataRequest","serializeAws_json1_1DeleteTerminologyCommand","serializeAws_json1_1DeleteTerminologyRequest","serializeAws_json1_1DescribeTextTranslationJobCommand","serializeAws_json1_1DescribeTextTranslationJobRequest","serializeAws_json1_1GetParallelDataCommand","serializeAws_json1_1GetParallelDataRequest","serializeAws_json1_1GetTerminologyCommand","serializeAws_json1_1GetTerminologyRequest","serializeAws_json1_1ImportTerminologyCommand","serializeAws_json1_1ImportTerminologyRequest","serializeAws_json1_1ListParallelDataCommand","serializeAws_json1_1ListParallelDataRequest","serializeAws_json1_1ListTerminologiesCommand","serializeAws_json1_1ListTerminologiesRequest","serializeAws_json1_1ListTextTranslationJobsCommand","serializeAws_json1_1ListTextTranslationJobsRequest","serializeAws_json1_1StartTextTranslationJobCommand","serializeAws_json1_1StartTextTranslationJobRequest","serializeAws_json1_1StopTextTranslationJobCommand","serializeAws_json1_1StopTextTranslationJobRequest","serializeAws_json1_1TranslateTextCommand","serializeAws_json1_1TranslateTextRequest","serializeAws_json1_1UpdateParallelDataCommand","serializeAws_json1_1UpdateParallelDataRequest","deserializeAws_json1_1CreateParallelDataCommand","output","statusCode","deserializeAws_json1_1CreateParallelDataCommandError","parseBody","data","_a","sent","contents","deserializeAws_json1_1CreateParallelDataResponse","response","__assign","$metadata","deserializeMetadata","Promise","resolve","parsedOutput","apply","concat","_j","_k","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1ConflictExceptionResponse","_c","name","deserializeAws_json1_1InternalServerExceptionResponse","_d","deserializeAws_json1_1InvalidParameterValueExceptionResponse","_e","deserializeAws_json1_1InvalidRequestExceptionResponse","_f","deserializeAws_json1_1LimitExceededExceptionResponse","_g","deserializeAws_json1_1TooManyRequestsExceptionResponse","_h","parsedBody","code","Code","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1DeleteParallelDataCommand","deserializeAws_json1_1DeleteParallelDataCommandError","deserializeAws_json1_1DeleteParallelDataResponse","deserializeAws_json1_1ConcurrentModificationExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1DeleteTerminologyCommand","deserializeAws_json1_1DeleteTerminologyCommandError","collectBody","deserializeAws_json1_1DescribeTextTranslationJobCommand","deserializeAws_json1_1DescribeTextTranslationJobCommandError","deserializeAws_json1_1DescribeTextTranslationJobResponse","deserializeAws_json1_1GetParallelDataCommand","deserializeAws_json1_1GetParallelDataCommandError","deserializeAws_json1_1GetParallelDataResponse","deserializeAws_json1_1GetTerminologyCommand","deserializeAws_json1_1GetTerminologyCommandError","deserializeAws_json1_1GetTerminologyResponse","deserializeAws_json1_1ImportTerminologyCommand","deserializeAws_json1_1ImportTerminologyCommandError","deserializeAws_json1_1ImportTerminologyResponse","deserializeAws_json1_1ListParallelDataCommand","deserializeAws_json1_1ListParallelDataCommandError","deserializeAws_json1_1ListParallelDataResponse","deserializeAws_json1_1ListTerminologiesCommand","deserializeAws_json1_1ListTerminologiesCommandError","deserializeAws_json1_1ListTerminologiesResponse","deserializeAws_json1_1ListTextTranslationJobsCommand","deserializeAws_json1_1ListTextTranslationJobsCommandError","deserializeAws_json1_1ListTextTranslationJobsResponse","deserializeAws_json1_1InvalidFilterExceptionResponse","deserializeAws_json1_1StartTextTranslationJobCommand","deserializeAws_json1_1StartTextTranslationJobCommandError","deserializeAws_json1_1StartTextTranslationJobResponse","deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse","deserializeAws_json1_1StopTextTranslationJobCommand","deserializeAws_json1_1StopTextTranslationJobCommandError","deserializeAws_json1_1StopTextTranslationJobResponse","deserializeAws_json1_1TranslateTextCommand","deserializeAws_json1_1TranslateTextCommandError","deserializeAws_json1_1TranslateTextResponse","_l","_m","deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse","deserializeAws_json1_1ServiceUnavailableExceptionResponse","deserializeAws_json1_1TextSizeLimitExceededExceptionResponse","deserializeAws_json1_1UpdateParallelDataCommand","deserializeAws_json1_1UpdateParallelDataCommandError","deserializeAws_json1_1UpdateParallelDataResponse","deserialized","deserializeAws_json1_1ConcurrentModificationException","deserializeAws_json1_1ConflictException","deserializeAws_json1_1DetectedLanguageLowConfidenceException","deserializeAws_json1_1InternalServerException","deserializeAws_json1_1InvalidFilterException","deserializeAws_json1_1InvalidParameterValueException","deserializeAws_json1_1InvalidRequestException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1ServiceUnavailableException","deserializeAws_json1_1TextSizeLimitExceededException","deserializeAws_json1_1TooManyRequestsException","deserializeAws_json1_1UnsupportedLanguagePairException","ClientToken","Description","EncryptionKey","serializeAws_json1_1EncryptionKey","Name","ParallelDataConfig","serializeAws_json1_1ParallelDataConfig","JobId","Id","Type","TerminologyDataFormat","MergeStrategy","TerminologyData","serializeAws_json1_1TerminologyData","serializeAws_json1_1InputDataConfig","ContentType","S3Uri","MaxResults","NextToken","Filter","serializeAws_json1_1TextTranslationJobFilter","serializeAws_json1_1OutputDataConfig","Format","serializeAws_json1_1ResourceNameList","filter","e","map","entry","DataAccessRoleArn","InputDataConfig","JobName","OutputDataConfig","ParallelDataNames","SourceLanguageCode","TargetLanguageCodes","serializeAws_json1_1TargetLanguageCodeStringList","TerminologyNames","File","base64Encoder","JobStatus","SubmittedAfterTime","Math","round","getTime","SubmittedBeforeTime","TargetLanguageCode","Text","deserializeAws_json1_1AppliedTerminology","Terms","deserializeAws_json1_1TermList","deserializeAws_json1_1AppliedTerminologyList","Status","TextTranslationJobProperties","deserializeAws_json1_1TextTranslationJobProperties","DetectedLanguageCode","deserializeAws_json1_1EncryptionKey","AuxiliaryDataLocation","deserializeAws_json1_1ParallelDataDataLocation","DataLocation","LatestUpdateAttemptAuxiliaryDataLocation","ParallelDataProperties","deserializeAws_json1_1ParallelDataProperties","TerminologyDataLocation","deserializeAws_json1_1TerminologyDataLocation","TerminologyProperties","deserializeAws_json1_1TerminologyProperties","deserializeAws_json1_1InputDataConfig","deserializeAws_json1_1JobDetails","DocumentsWithErrorsCount","InputDocumentsCount","TranslatedDocumentsCount","deserializeAws_json1_1LanguageCodeStringList","ParallelDataPropertiesList","deserializeAws_json1_1ParallelDataPropertiesList","TerminologyPropertiesList","deserializeAws_json1_1TerminologyPropertiesList","TextTranslationJobPropertiesList","deserializeAws_json1_1TextTranslationJobPropertiesList","deserializeAws_json1_1OutputDataConfig","deserializeAws_json1_1ParallelDataConfig","Location","RepositoryType","Arn","CreatedAt","Date","FailedRecordCount","ImportedDataSize","ImportedRecordCount","LastUpdatedAt","LatestUpdateAttemptAt","LatestUpdateAttemptStatus","SkippedRecordCount","deserializeAws_json1_1ResourceNameList","deserializeAws_json1_1TargetLanguageCodeStringList","deserializeAws_json1_1Term","SourceText","TargetText","SizeBytes","TermCount","EndTime","JobDetails","SubmittedTime","AppliedTerminologies","TranslatedText","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","hostname","protocol","port","method","encoded","length","parse","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/client-translate/protocols/Aws_json1_1.ts"],"sourcesContent":["import { CreateParallelDataCommandInput, CreateParallelDataCommandOutput } from \"../commands/CreateParallelDataCommand\";\nimport { DeleteParallelDataCommandInput, DeleteParallelDataCommandOutput } from \"../commands/DeleteParallelDataCommand\";\nimport { DeleteTerminologyCommandInput, DeleteTerminologyCommandOutput } from \"../commands/DeleteTerminologyCommand\";\nimport {\n  DescribeTextTranslationJobCommandInput,\n  DescribeTextTranslationJobCommandOutput,\n} from \"../commands/DescribeTextTranslationJobCommand\";\nimport { GetParallelDataCommandInput, GetParallelDataCommandOutput } from \"../commands/GetParallelDataCommand\";\nimport { GetTerminologyCommandInput, GetTerminologyCommandOutput } from \"../commands/GetTerminologyCommand\";\nimport { ImportTerminologyCommandInput, ImportTerminologyCommandOutput } from \"../commands/ImportTerminologyCommand\";\nimport { ListParallelDataCommandInput, ListParallelDataCommandOutput } from \"../commands/ListParallelDataCommand\";\nimport { ListTerminologiesCommandInput, ListTerminologiesCommandOutput } from \"../commands/ListTerminologiesCommand\";\nimport {\n  ListTextTranslationJobsCommandInput,\n  ListTextTranslationJobsCommandOutput,\n} from \"../commands/ListTextTranslationJobsCommand\";\nimport {\n  StartTextTranslationJobCommandInput,\n  StartTextTranslationJobCommandOutput,\n} from \"../commands/StartTextTranslationJobCommand\";\nimport {\n  StopTextTranslationJobCommandInput,\n  StopTextTranslationJobCommandOutput,\n} from \"../commands/StopTextTranslationJobCommand\";\nimport { TranslateTextCommandInput, TranslateTextCommandOutput } from \"../commands/TranslateTextCommand\";\nimport { UpdateParallelDataCommandInput, UpdateParallelDataCommandOutput } from \"../commands/UpdateParallelDataCommand\";\nimport {\n  AppliedTerminology,\n  ConcurrentModificationException,\n  ConflictException,\n  CreateParallelDataRequest,\n  CreateParallelDataResponse,\n  DeleteParallelDataRequest,\n  DeleteParallelDataResponse,\n  DeleteTerminologyRequest,\n  DescribeTextTranslationJobRequest,\n  DescribeTextTranslationJobResponse,\n  DetectedLanguageLowConfidenceException,\n  EncryptionKey,\n  GetParallelDataRequest,\n  GetParallelDataResponse,\n  GetTerminologyRequest,\n  GetTerminologyResponse,\n  ImportTerminologyRequest,\n  ImportTerminologyResponse,\n  InputDataConfig,\n  InternalServerException,\n  InvalidFilterException,\n  InvalidParameterValueException,\n  InvalidRequestException,\n  JobDetails,\n  LimitExceededException,\n  ListParallelDataRequest,\n  ListParallelDataResponse,\n  ListTerminologiesRequest,\n  ListTerminologiesResponse,\n  ListTextTranslationJobsRequest,\n  ListTextTranslationJobsResponse,\n  OutputDataConfig,\n  ParallelDataConfig,\n  ParallelDataDataLocation,\n  ParallelDataProperties,\n  ResourceNotFoundException,\n  ServiceUnavailableException,\n  StartTextTranslationJobRequest,\n  StartTextTranslationJobResponse,\n  StopTextTranslationJobRequest,\n  StopTextTranslationJobResponse,\n  Term,\n  TerminologyData,\n  TerminologyDataLocation,\n  TerminologyProperties,\n  TextSizeLimitExceededException,\n  TextTranslationJobFilter,\n  TextTranslationJobProperties,\n  TooManyRequestsException,\n  TranslateTextRequest,\n  TranslateTextResponse,\n  UnsupportedLanguagePairException,\n  UpdateParallelDataRequest,\n  UpdateParallelDataResponse,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\n\nexport const serializeAws_json1_1CreateParallelDataCommand = async (\n  input: CreateParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.CreateParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteParallelDataCommand = async (\n  input: DeleteParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteTerminologyCommand = async (\n  input: DeleteTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeTextTranslationJobCommand = async (\n  input: DescribeTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DescribeTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetParallelDataCommand = async (\n  input: GetParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.GetParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetTerminologyCommand = async (\n  input: GetTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.GetTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ImportTerminologyCommand = async (\n  input: ImportTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ImportTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ImportTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListParallelDataCommand = async (\n  input: ListParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTerminologiesCommand = async (\n  input: ListTerminologiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTerminologies\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTerminologiesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTextTranslationJobsCommand = async (\n  input: ListTextTranslationJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTextTranslationJobs\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTextTranslationJobsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartTextTranslationJobCommand = async (\n  input: StartTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.StartTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopTextTranslationJobCommand = async (\n  input: StopTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.StopTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TranslateTextCommand = async (\n  input: TranslateTextCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.TranslateText\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TranslateTextRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateParallelDataCommand = async (\n  input: UpdateParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.UpdateParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1CreateParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1CreateParallelDataResponse(data, context);\n  const response: CreateParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConflictException\":\n    case \"com.amazonaws.translate#ConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteParallelDataResponse(data, context);\n  const response: DeleteParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.translate#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteTerminologyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeTextTranslationJobResponse(data, context);\n  const response: DescribeTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetParallelDataResponse(data, context);\n  const response: GetParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetTerminologyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetTerminologyResponse(data, context);\n  const response: GetTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ImportTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ImportTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ImportTerminologyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ImportTerminologyResponse(data, context);\n  const response: ImportTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ImportTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ImportTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListParallelDataResponse(data, context);\n  const response: ListParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTerminologiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTerminologiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTerminologiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTerminologiesResponse(data, context);\n  const response: ListTerminologiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTerminologiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTerminologiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTextTranslationJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTextTranslationJobsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTextTranslationJobsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTextTranslationJobsResponse(data, context);\n  const response: ListTextTranslationJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTextTranslationJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTextTranslationJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidFilterException\":\n    case \"com.amazonaws.translate#InvalidFilterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidFilterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartTextTranslationJobResponse(data, context);\n  const response: StartTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedLanguagePairException\":\n    case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StopTextTranslationJobResponse(data, context);\n  const response: StopTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TranslateTextCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TranslateTextCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TranslateTextCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TranslateTextResponse(data, context);\n  const response: TranslateTextCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TranslateTextCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TranslateTextCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DetectedLanguageLowConfidenceException\":\n    case \"com.amazonaws.translate#DetectedLanguageLowConfidenceException\":\n      response = {\n        ...(await deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.translate#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TextSizeLimitExceededException\":\n    case \"com.amazonaws.translate#TextSizeLimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1TextSizeLimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedLanguagePairException\":\n    case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateParallelDataResponse(data, context);\n  const response: UpdateParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.translate#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.translate#ConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConcurrentModificationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const contents: ConcurrentModificationException = {\n    name: \"ConcurrentModificationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConflictException(body, context);\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DetectedLanguageLowConfidenceException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DetectedLanguageLowConfidenceException(body, context);\n  const contents: DetectedLanguageLowConfidenceException = {\n    name: \"DetectedLanguageLowConfidenceException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InternalServerExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InternalServerException(body, context);\n  const contents: InternalServerException = {\n    name: \"InternalServerException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidFilterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidFilterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidFilterException(body, context);\n  const contents: InvalidFilterException = {\n    name: \"InvalidFilterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterValueExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterValueException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterValueException(body, context);\n  const contents: InvalidParameterValueException = {\n    name: \"InvalidParameterValueException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidRequestException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidRequestException(body, context);\n  const contents: InvalidRequestException = {\n    name: \"InvalidRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ServiceUnavailableException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ServiceUnavailableException(body, context);\n  const contents: ServiceUnavailableException = {\n    name: \"ServiceUnavailableException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TextSizeLimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TextSizeLimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TextSizeLimitExceededException(body, context);\n  const contents: TextSizeLimitExceededException = {\n    name: \"TextSizeLimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnsupportedLanguagePairException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1UnsupportedLanguagePairException(body, context);\n  const contents: UnsupportedLanguagePairException = {\n    name: \"UnsupportedLanguagePairException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1CreateParallelDataRequest = (\n  input: CreateParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EncryptionKey !== undefined &&\n      input.EncryptionKey !== null && {\n        EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context),\n      }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.ParallelDataConfig !== undefined &&\n      input.ParallelDataConfig !== null && {\n        ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteParallelDataRequest = (\n  input: DeleteParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1DeleteTerminologyRequest = (\n  input: DeleteTerminologyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1DescribeTextTranslationJobRequest = (\n  input: DescribeTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n  };\n};\n\nconst serializeAws_json1_1EncryptionKey = (input: EncryptionKey, context: __SerdeContext): any => {\n  return {\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1GetParallelDataRequest = (input: GetParallelDataRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1GetTerminologyRequest = (input: GetTerminologyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.TerminologyDataFormat !== undefined &&\n      input.TerminologyDataFormat !== null && { TerminologyDataFormat: input.TerminologyDataFormat }),\n  };\n};\n\nconst serializeAws_json1_1ImportTerminologyRequest = (\n  input: ImportTerminologyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EncryptionKey !== undefined &&\n      input.EncryptionKey !== null && {\n        EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context),\n      }),\n    ...(input.MergeStrategy !== undefined && input.MergeStrategy !== null && { MergeStrategy: input.MergeStrategy }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.TerminologyData !== undefined &&\n      input.TerminologyData !== null && {\n        TerminologyData: serializeAws_json1_1TerminologyData(input.TerminologyData, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1InputDataConfig = (input: InputDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.ContentType !== undefined && input.ContentType !== null && { ContentType: input.ContentType }),\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ListParallelDataRequest = (input: ListParallelDataRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTerminologiesRequest = (\n  input: ListTerminologiesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTextTranslationJobsRequest = (\n  input: ListTextTranslationJobsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Filter !== undefined &&\n      input.Filter !== null && { Filter: serializeAws_json1_1TextTranslationJobFilter(input.Filter, context) }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1OutputDataConfig = (input: OutputDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ParallelDataConfig = (input: ParallelDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ResourceNameList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1StartTextTranslationJobRequest = (\n  input: StartTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.DataAccessRoleArn !== undefined &&\n      input.DataAccessRoleArn !== null && { DataAccessRoleArn: input.DataAccessRoleArn }),\n    ...(input.InputDataConfig !== undefined &&\n      input.InputDataConfig !== null && {\n        InputDataConfig: serializeAws_json1_1InputDataConfig(input.InputDataConfig, context),\n      }),\n    ...(input.JobName !== undefined && input.JobName !== null && { JobName: input.JobName }),\n    ...(input.OutputDataConfig !== undefined &&\n      input.OutputDataConfig !== null && {\n        OutputDataConfig: serializeAws_json1_1OutputDataConfig(input.OutputDataConfig, context),\n      }),\n    ...(input.ParallelDataNames !== undefined &&\n      input.ParallelDataNames !== null && {\n        ParallelDataNames: serializeAws_json1_1ResourceNameList(input.ParallelDataNames, context),\n      }),\n    ...(input.SourceLanguageCode !== undefined &&\n      input.SourceLanguageCode !== null && { SourceLanguageCode: input.SourceLanguageCode }),\n    ...(input.TargetLanguageCodes !== undefined &&\n      input.TargetLanguageCodes !== null && {\n        TargetLanguageCodes: serializeAws_json1_1TargetLanguageCodeStringList(input.TargetLanguageCodes, context),\n      }),\n    ...(input.TerminologyNames !== undefined &&\n      input.TerminologyNames !== null && {\n        TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1StopTextTranslationJobRequest = (\n  input: StopTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n  };\n};\n\nconst serializeAws_json1_1TargetLanguageCodeStringList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TerminologyData = (input: TerminologyData, context: __SerdeContext): any => {\n  return {\n    ...(input.File !== undefined && input.File !== null && { File: context.base64Encoder(input.File) }),\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n  };\n};\n\nconst serializeAws_json1_1TextTranslationJobFilter = (\n  input: TextTranslationJobFilter,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobName !== undefined && input.JobName !== null && { JobName: input.JobName }),\n    ...(input.JobStatus !== undefined && input.JobStatus !== null && { JobStatus: input.JobStatus }),\n    ...(input.SubmittedAfterTime !== undefined &&\n      input.SubmittedAfterTime !== null && {\n        SubmittedAfterTime: Math.round(input.SubmittedAfterTime.getTime() / 1000),\n      }),\n    ...(input.SubmittedBeforeTime !== undefined &&\n      input.SubmittedBeforeTime !== null && {\n        SubmittedBeforeTime: Math.round(input.SubmittedBeforeTime.getTime() / 1000),\n      }),\n  };\n};\n\nconst serializeAws_json1_1TranslateTextRequest = (input: TranslateTextRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.SourceLanguageCode !== undefined &&\n      input.SourceLanguageCode !== null && { SourceLanguageCode: input.SourceLanguageCode }),\n    ...(input.TargetLanguageCode !== undefined &&\n      input.TargetLanguageCode !== null && { TargetLanguageCode: input.TargetLanguageCode }),\n    ...(input.TerminologyNames !== undefined &&\n      input.TerminologyNames !== null && {\n        TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context),\n      }),\n    ...(input.Text !== undefined && input.Text !== null && { Text: input.Text }),\n  };\n};\n\nconst serializeAws_json1_1UpdateParallelDataRequest = (\n  input: UpdateParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.ParallelDataConfig !== undefined &&\n      input.ParallelDataConfig !== null && {\n        ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context),\n      }),\n  };\n};\n\nconst deserializeAws_json1_1AppliedTerminology = (output: any, context: __SerdeContext): AppliedTerminology => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Terms:\n      output.Terms !== undefined && output.Terms !== null\n        ? deserializeAws_json1_1TermList(output.Terms, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1AppliedTerminologyList = (output: any, context: __SerdeContext): AppliedTerminology[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1AppliedTerminology(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ConcurrentModificationException = (\n  output: any,\n  context: __SerdeContext\n): ConcurrentModificationException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConflictException = (output: any, context: __SerdeContext): ConflictException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1CreateParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): CreateParallelDataResponse => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteParallelDataResponse => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeTextTranslationJobResponse => {\n  return {\n    TextTranslationJobProperties:\n      output.TextTranslationJobProperties !== undefined && output.TextTranslationJobProperties !== null\n        ? deserializeAws_json1_1TextTranslationJobProperties(output.TextTranslationJobProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DetectedLanguageLowConfidenceException = (\n  output: any,\n  context: __SerdeContext\n): DetectedLanguageLowConfidenceException => {\n  return {\n    DetectedLanguageCode:\n      output.DetectedLanguageCode !== undefined && output.DetectedLanguageCode !== null\n        ? output.DetectedLanguageCode\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EncryptionKey = (output: any, context: __SerdeContext): EncryptionKey => {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): GetParallelDataResponse => {\n  return {\n    AuxiliaryDataLocation:\n      output.AuxiliaryDataLocation !== undefined && output.AuxiliaryDataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.AuxiliaryDataLocation, context)\n        : undefined,\n    DataLocation:\n      output.DataLocation !== undefined && output.DataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.DataLocation, context)\n        : undefined,\n    LatestUpdateAttemptAuxiliaryDataLocation:\n      output.LatestUpdateAttemptAuxiliaryDataLocation !== undefined &&\n      output.LatestUpdateAttemptAuxiliaryDataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.LatestUpdateAttemptAuxiliaryDataLocation, context)\n        : undefined,\n    ParallelDataProperties:\n      output.ParallelDataProperties !== undefined && output.ParallelDataProperties !== null\n        ? deserializeAws_json1_1ParallelDataProperties(output.ParallelDataProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetTerminologyResponse = (output: any, context: __SerdeContext): GetTerminologyResponse => {\n  return {\n    TerminologyDataLocation:\n      output.TerminologyDataLocation !== undefined && output.TerminologyDataLocation !== null\n        ? deserializeAws_json1_1TerminologyDataLocation(output.TerminologyDataLocation, context)\n        : undefined,\n    TerminologyProperties:\n      output.TerminologyProperties !== undefined && output.TerminologyProperties !== null\n        ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ImportTerminologyResponse = (\n  output: any,\n  context: __SerdeContext\n): ImportTerminologyResponse => {\n  return {\n    TerminologyProperties:\n      output.TerminologyProperties !== undefined && output.TerminologyProperties !== null\n        ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InputDataConfig = (output: any, context: __SerdeContext): InputDataConfig => {\n  return {\n    ContentType: output.ContentType !== undefined && output.ContentType !== null ? output.ContentType : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalServerException = (\n  output: any,\n  context: __SerdeContext\n): InternalServerException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidFilterException = (output: any, context: __SerdeContext): InvalidFilterException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterValueException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterValueException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidRequestException = (\n  output: any,\n  context: __SerdeContext\n): InvalidRequestException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1JobDetails = (output: any, context: __SerdeContext): JobDetails => {\n  return {\n    DocumentsWithErrorsCount:\n      output.DocumentsWithErrorsCount !== undefined && output.DocumentsWithErrorsCount !== null\n        ? output.DocumentsWithErrorsCount\n        : undefined,\n    InputDocumentsCount:\n      output.InputDocumentsCount !== undefined && output.InputDocumentsCount !== null\n        ? output.InputDocumentsCount\n        : undefined,\n    TranslatedDocumentsCount:\n      output.TranslatedDocumentsCount !== undefined && output.TranslatedDocumentsCount !== null\n        ? output.TranslatedDocumentsCount\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LanguageCodeStringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): ListParallelDataResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    ParallelDataPropertiesList:\n      output.ParallelDataPropertiesList !== undefined && output.ParallelDataPropertiesList !== null\n        ? deserializeAws_json1_1ParallelDataPropertiesList(output.ParallelDataPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTerminologiesResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTerminologiesResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TerminologyPropertiesList:\n      output.TerminologyPropertiesList !== undefined && output.TerminologyPropertiesList !== null\n        ? deserializeAws_json1_1TerminologyPropertiesList(output.TerminologyPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTextTranslationJobsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTextTranslationJobsResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TextTranslationJobPropertiesList:\n      output.TextTranslationJobPropertiesList !== undefined && output.TextTranslationJobPropertiesList !== null\n        ? deserializeAws_json1_1TextTranslationJobPropertiesList(output.TextTranslationJobPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputDataConfig = (output: any, context: __SerdeContext): OutputDataConfig => {\n  return {\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataConfig = (output: any, context: __SerdeContext): ParallelDataConfig => {\n  return {\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataDataLocation = (\n  output: any,\n  context: __SerdeContext\n): ParallelDataDataLocation => {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType:\n      output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataProperties = (output: any, context: __SerdeContext): ParallelDataProperties => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt:\n      output.CreatedAt !== undefined && output.CreatedAt !== null\n        ? new Date(Math.round(output.CreatedAt * 1000))\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey:\n      output.EncryptionKey !== undefined && output.EncryptionKey !== null\n        ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context)\n        : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    ImportedDataSize:\n      output.ImportedDataSize !== undefined && output.ImportedDataSize !== null ? output.ImportedDataSize : undefined,\n    ImportedRecordCount:\n      output.ImportedRecordCount !== undefined && output.ImportedRecordCount !== null\n        ? output.ImportedRecordCount\n        : undefined,\n    LastUpdatedAt:\n      output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null\n        ? new Date(Math.round(output.LastUpdatedAt * 1000))\n        : undefined,\n    LatestUpdateAttemptAt:\n      output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null\n        ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000))\n        : undefined,\n    LatestUpdateAttemptStatus:\n      output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null\n        ? output.LatestUpdateAttemptStatus\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    ParallelDataConfig:\n      output.ParallelDataConfig !== undefined && output.ParallelDataConfig !== null\n        ? deserializeAws_json1_1ParallelDataConfig(output.ParallelDataConfig, context)\n        : undefined,\n    SkippedRecordCount:\n      output.SkippedRecordCount !== undefined && output.SkippedRecordCount !== null\n        ? output.SkippedRecordCount\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): ParallelDataProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ParallelDataProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ResourceNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableException = (\n  output: any,\n  context: __SerdeContext\n): ServiceUnavailableException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StartTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): StartTextTranslationJobResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StopTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): StopTextTranslationJobResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TargetLanguageCodeStringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1Term = (output: any, context: __SerdeContext): Term => {\n  return {\n    SourceText: output.SourceText !== undefined && output.SourceText !== null ? output.SourceText : undefined,\n    TargetText: output.TargetText !== undefined && output.TargetText !== null ? output.TargetText : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyDataLocation = (\n  output: any,\n  context: __SerdeContext\n): TerminologyDataLocation => {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType:\n      output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyProperties = (output: any, context: __SerdeContext): TerminologyProperties => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt:\n      output.CreatedAt !== undefined && output.CreatedAt !== null\n        ? new Date(Math.round(output.CreatedAt * 1000))\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey:\n      output.EncryptionKey !== undefined && output.EncryptionKey !== null\n        ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context)\n        : undefined,\n    LastUpdatedAt:\n      output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null\n        ? new Date(Math.round(output.LastUpdatedAt * 1000))\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SizeBytes: output.SizeBytes !== undefined && output.SizeBytes !== null ? output.SizeBytes : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n    TermCount: output.TermCount !== undefined && output.TermCount !== null ? output.TermCount : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): TerminologyProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1TerminologyProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TermList = (output: any, context: __SerdeContext): Term[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Term(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TextSizeLimitExceededException = (\n  output: any,\n  context: __SerdeContext\n): TextSizeLimitExceededException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TextTranslationJobProperties = (\n  output: any,\n  context: __SerdeContext\n): TextTranslationJobProperties => {\n  return {\n    DataAccessRoleArn:\n      output.DataAccessRoleArn !== undefined && output.DataAccessRoleArn !== null\n        ? output.DataAccessRoleArn\n        : undefined,\n    EndTime:\n      output.EndTime !== undefined && output.EndTime !== null ? new Date(Math.round(output.EndTime * 1000)) : undefined,\n    InputDataConfig:\n      output.InputDataConfig !== undefined && output.InputDataConfig !== null\n        ? deserializeAws_json1_1InputDataConfig(output.InputDataConfig, context)\n        : undefined,\n    JobDetails:\n      output.JobDetails !== undefined && output.JobDetails !== null\n        ? deserializeAws_json1_1JobDetails(output.JobDetails, context)\n        : undefined,\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobName: output.JobName !== undefined && output.JobName !== null ? output.JobName : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    OutputDataConfig:\n      output.OutputDataConfig !== undefined && output.OutputDataConfig !== null\n        ? deserializeAws_json1_1OutputDataConfig(output.OutputDataConfig, context)\n        : undefined,\n    ParallelDataNames:\n      output.ParallelDataNames !== undefined && output.ParallelDataNames !== null\n        ? deserializeAws_json1_1ResourceNameList(output.ParallelDataNames, context)\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    SubmittedTime:\n      output.SubmittedTime !== undefined && output.SubmittedTime !== null\n        ? new Date(Math.round(output.SubmittedTime * 1000))\n        : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1TargetLanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n    TerminologyNames:\n      output.TerminologyNames !== undefined && output.TerminologyNames !== null\n        ? deserializeAws_json1_1ResourceNameList(output.TerminologyNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TextTranslationJobPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): TextTranslationJobProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1TextTranslationJobProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TooManyRequestsException = (\n  output: any,\n  context: __SerdeContext\n): TooManyRequestsException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TranslateTextResponse = (output: any, context: __SerdeContext): TranslateTextResponse => {\n  return {\n    AppliedTerminologies:\n      output.AppliedTerminologies !== undefined && output.AppliedTerminologies !== null\n        ? deserializeAws_json1_1AppliedTerminologyList(output.AppliedTerminologies, context)\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCode:\n      output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null\n        ? output.TargetLanguageCode\n        : undefined,\n    TranslatedText:\n      output.TranslatedText !== undefined && output.TranslatedText !== null ? output.TranslatedText : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnsupportedLanguagePairException = (\n  output: any,\n  context: __SerdeContext\n): UnsupportedLanguagePairException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCode:\n      output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null\n        ? output.TargetLanguageCode\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UpdateParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): UpdateParallelDataResponse => {\n  return {\n    LatestUpdateAttemptAt:\n      output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null\n        ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000))\n        : undefined,\n    LatestUpdateAttemptStatus:\n      output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null\n        ? output.LatestUpdateAttemptStatus\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}