{"ast":null,"code":"import { __values } from \"tslib\";\nimport { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\n/**\n * @internal\n */\nexport function getCanonicalHeaders(_a, unsignableHeaders, signableHeaders) {\n  var e_1, _b;\n  var headers = _a.headers;\n  var canonical = {};\n  try {\n    for (var _c = __values(Object.keys(headers).sort()), _d = _c.next(); !_d.done; _d = _c.next()) {\n      var headerName = _d.value;\n      var canonicalHeaderName = headerName.toLowerCase();\n      if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n        if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {\n          continue;\n        }\n      }\n      canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return canonical;\n}","map":{"version":3,"names":["ALWAYS_UNSIGNABLE_HEADERS","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","getCanonicalHeaders","_a","unsignableHeaders","signableHeaders","headers","canonical","_c","__values","Object","keys","sort","_d","next","done","headerName","value","canonicalHeaderName","toLowerCase","has","test","trim","replace"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-sdk/signature-v4/src/getCanonicalHeaders.ts"],"sourcesContent":["import { HeaderBag, HttpRequest } from \"@aws-sdk/types\";\n\nimport { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\n\n/**\n * @internal\n */\nexport function getCanonicalHeaders(\n  { headers }: HttpRequest,\n  unsignableHeaders?: Set<string>,\n  signableHeaders?: Set<string>\n): HeaderBag {\n  const canonical: HeaderBag = {};\n  for (const headerName of Object.keys(headers).sort()) {\n    const canonicalHeaderName = headerName.toLowerCase();\n    if (\n      canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n      unsignableHeaders?.has(canonicalHeaderName) ||\n      PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n      SEC_HEADER_PATTERN.test(canonicalHeaderName)\n    ) {\n      if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n        continue;\n      }\n    }\n\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n\n  return canonical;\n}\n"],"mappings":";AAEA,SAASA,yBAAyB,EAAEC,oBAAoB,EAAEC,kBAAkB,QAAQ,aAAa;AAEjG;;;AAGA,OAAM,SAAUC,mBAAmBA,CACjCC,EAAwB,EACxBC,iBAA+B,EAC/BC,eAA6B;;MAF3BC,OAAO,GAAAH,EAAA,CAAAG,OAAA;EAIT,IAAMC,SAAS,GAAc,EAAE;;IAC/B,KAAyB,IAAAC,EAAA,GAAAC,QAAA,CAAAC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACM,IAAI,EAAE,GAAAC,EAAA,GAAAL,EAAA,CAAAM,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAL,EAAA,CAAAM,IAAA,IAAE;MAAjD,IAAME,UAAU,GAAAH,EAAA,CAAAI,KAAA;MACnB,IAAMC,mBAAmB,GAAGF,UAAU,CAACG,WAAW,EAAE;MACpD,IACED,mBAAmB,IAAInB,yBAAyB,KAChDK,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEgB,GAAG,CAACF,mBAAmB,EAAC,IAC3ClB,oBAAoB,CAACqB,IAAI,CAACH,mBAAmB,CAAC,IAC9CjB,kBAAkB,CAACoB,IAAI,CAACH,mBAAmB,CAAC,EAC5C;QACA,IAAI,CAACb,eAAe,IAAKA,eAAe,IAAI,CAACA,eAAe,CAACe,GAAG,CAACF,mBAAmB,CAAE,EAAE;UACtF;;;MAIJX,SAAS,CAACW,mBAAmB,CAAC,GAAGZ,OAAO,CAACU,UAAU,CAAC,CAACM,IAAI,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;;;;;;;;;;;;;EAGlF,OAAOhB,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}