{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [allPets, setAllPets] = useState([]); // Store all pets from the API\n  const [displayedPets, setDisplayedPets] = useState([]); // Store currently displayed pets\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Start at page 1\n  const petsPerPage = 20;\n  const cache = []; // Cache to store pets data\n\n  const fetchAnimalsByType = async (type, offset) => {\n    // Check if data is available in the cache\n    if (cache[offset]) {\n      setDisplayedPets(cache[offset]);\n    } else {\n      try {\n        const response = await fetch(`http://localhost:3002/api/petfinder?type=${type}&offset=${offset}&limit=${petsPerPage}`);\n        const data = await response.json();\n        console.log('API Response:', data);\n        if (data && data.animals) {\n          const pets = data.animals;\n\n          // Update cache with the fetched data\n          cache[offset] = pets;\n          setAllPets(data.animals);\n          setDisplayedPets(pets);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      }\n    }\n  };\n  useEffect(() => {\n    const offset = (currentPage - 1) * petsPerPage;\n    fetchAnimalsByType(category, offset);\n  }, [category, currentPage]);\n  const totalPets = allPets.length;\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(totalPets / petsPerPage);\n\n  // Show at least 1-9 pagination numbers\n  const paginationNumbers = Array.from({\n    length: Math.max(9, totalPages)\n  }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => paginate(index + 1),\n    children: index + 1\n  }, index + 1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-list\",\n        children: displayedPets.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: paginationNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"6+HDed+unbftQ0LfWJAfs9RBzeg=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPetsPage","_s","category","allPets","setAllPets","displayedPets","setDisplayedPets","loading","setLoading","currentPage","setCurrentPage","petsPerPage","cache","fetchAnimalsByType","type","offset","response","fetch","data","json","console","log","animals","pets","error","message","totalPets","length","paginate","pageNumber","totalPages","Math","ceil","paginationNumbers","Array","from","max","_","index","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","charAt","toUpperCase","slice","map","pet","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [allPets, setAllPets] = useState([]); // Store all pets from the API\n  const [displayedPets, setDisplayedPets] = useState([]); // Store currently displayed pets\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1); // Start at page 1\n  const petsPerPage = 20;\n  const cache = []; // Cache to store pets data\n\n  const fetchAnimalsByType = async (type, offset) => {\n    // Check if data is available in the cache\n    if (cache[offset]) {\n      setDisplayedPets(cache[offset]);\n    } else {\n      try {\n        const response = await fetch(\n          `http://localhost:3002/api/petfinder?type=${type}&offset=${offset}&limit=${petsPerPage}`\n        );\n        const data = await response.json();\n\n        console.log('API Response:', data);\n\n        if (data && data.animals) {\n          const pets = data.animals;\n\n          // Update cache with the fetched data\n          cache[offset] = pets;\n\n          setAllPets(data.animals);\n          setDisplayedPets(pets);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error.message);\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const offset = (currentPage - 1) * petsPerPage;\n    fetchAnimalsByType(category, offset);\n  }, [category, currentPage]);\n\n  const totalPets = allPets.length;\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Calculate the total number of pages\n  const totalPages = Math.ceil(totalPets / petsPerPage);\n\n  // Show at least 1-9 pagination numbers\n  const paginationNumbers = Array.from({ length: Math.max(9, totalPages) }, (_, index) => (\n    <button key={index + 1} onClick={() => paginate(index + 1)}>\n      {index + 1}\n    </button>\n  ));\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <div className=\"pet-list\">\n            {displayedPets.map((pet) => (\n              <PetCard key={pet.id} pet={pet} />\n            ))}\n          </div>\n          <div className=\"pagination\">{paginationNumbers}</div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}