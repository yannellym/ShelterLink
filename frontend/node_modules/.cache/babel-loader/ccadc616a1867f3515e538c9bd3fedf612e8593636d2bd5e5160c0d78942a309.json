{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nvar LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5\n};\nexport var LOG_TYPE;\n(function (LOG_TYPE) {\n  LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n  LOG_TYPE[\"ERROR\"] = \"ERROR\";\n  LOG_TYPE[\"INFO\"] = \"INFO\";\n  LOG_TYPE[\"WARN\"] = \"WARN\";\n  LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\nexport var ConsoleLogger = /** @class */function () {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  function ConsoleLogger(name, level) {\n    if (level === void 0) {\n      level = LOG_TYPE.WARN;\n    }\n    this.name = name;\n    this.level = level;\n    this._pluggables = [];\n  }\n  ConsoleLogger.prototype._padding = function (n) {\n    return n < 10 ? '0' + n : '' + n;\n  };\n  ConsoleLogger.prototype._ts = function () {\n    var dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  };\n  ConsoleLogger.prototype.configure = function (config) {\n    if (!config) return this._config;\n    this._config = config;\n    return this._config;\n  };\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {LOG_TYPE|string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype._log = function (type) {\n    var e_1, _a;\n    var msg = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      msg[_i - 1] = arguments[_i];\n    }\n    var logger_level_name = this.level;\n    if (ConsoleLogger.LOG_LEVEL) {\n      logger_level_name = ConsoleLogger.LOG_LEVEL;\n    }\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      logger_level_name = window.LOG_LEVEL;\n    }\n    var logger_level = LOG_LEVELS[logger_level_name];\n    var type_level = LOG_LEVELS[type];\n    if (!(type_level >= logger_level)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n    var log = console.log.bind(console);\n    if (type === LOG_TYPE.ERROR && console.error) {\n      log = console.error.bind(console);\n    }\n    if (type === LOG_TYPE.WARN && console.warn) {\n      log = console.warn.bind(console);\n    }\n    var prefix = \"[\".concat(type, \"] \").concat(this._ts(), \" \").concat(this.name);\n    var message = '';\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      message = \"\".concat(prefix, \" - \").concat(msg[0]);\n      log(message);\n    } else if (msg.length === 1) {\n      message = \"\".concat(prefix, \" \").concat(msg[0]);\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      var obj = msg.slice(1);\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n      message = \"\".concat(prefix, \" - \").concat(msg[0], \" \").concat(obj);\n      log(\"\".concat(prefix, \" - \").concat(msg[0]), obj);\n    } else {\n      message = \"\".concat(prefix, \" \").concat(msg);\n      log(prefix, msg);\n    }\n    try {\n      for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var plugin = _c.value;\n        var logEvent = {\n          message: message,\n          timestamp: Date.now()\n        };\n        plugin.pushLogs([logEvent]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.log = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n  };\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.info = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n  };\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.warn = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spreadArray([LOG_TYPE.WARN], __read(msg), false));\n  };\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.error = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spreadArray([LOG_TYPE.ERROR], __read(msg), false));\n  };\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.debug = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spreadArray([LOG_TYPE.DEBUG], __read(msg), false));\n  };\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  ConsoleLogger.prototype.verbose = function () {\n    var msg = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      msg[_i] = arguments[_i];\n    }\n    this._log.apply(this, __spreadArray([LOG_TYPE.VERBOSE], __read(msg), false));\n  };\n  ConsoleLogger.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n      this._pluggables.push(pluggable);\n      pluggable.configure(this._config);\n    }\n  };\n  ConsoleLogger.prototype.listPluggables = function () {\n    return this._pluggables;\n  };\n  ConsoleLogger.LOG_LEVEL = null;\n  return ConsoleLogger;\n}();","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","__spreadArray","to","from","pack","arguments","l","Array","prototype","slice","concat","AWS_CLOUDWATCH_CATEGORY","LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","LOG_TYPE","ConsoleLogger","name","level","_pluggables","_padding","_ts","dt","Date","getMinutes","getSeconds","join","getMilliseconds","configure","config","_config","_log","type","e_1","_a","msg","_i","logger_level_name","LOG_LEVEL","window","logger_level","type_level","log","console","bind","warn","prefix","message","obj","_b","_c","plugin","logEvent","timestamp","now","pushLogs","e_1_1","return","apply","info","debug","verbose","addPluggable","pluggable","getCategoryName","listPluggables"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { AWS_CLOUDWATCH_CATEGORY } from '../Util/Constants';\nvar LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n};\nexport var LOG_TYPE;\n(function (LOG_TYPE) {\n    LOG_TYPE[\"DEBUG\"] = \"DEBUG\";\n    LOG_TYPE[\"ERROR\"] = \"ERROR\";\n    LOG_TYPE[\"INFO\"] = \"INFO\";\n    LOG_TYPE[\"WARN\"] = \"WARN\";\n    LOG_TYPE[\"VERBOSE\"] = \"VERBOSE\";\n})(LOG_TYPE || (LOG_TYPE = {}));\n/**\n * Write logs\n * @class Logger\n */\nexport var ConsoleLogger = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    function ConsoleLogger(name, level) {\n        if (level === void 0) { level = LOG_TYPE.WARN; }\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    ConsoleLogger.prototype._padding = function (n) {\n        return n < 10 ? '0' + n : '' + n;\n    };\n    ConsoleLogger.prototype._ts = function () {\n        var dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    };\n    ConsoleLogger.prototype.configure = function (config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    };\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LOG_TYPE|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype._log = function (type) {\n        var e_1, _a;\n        var msg = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            msg[_i - 1] = arguments[_i];\n        }\n        var logger_level_name = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            logger_level_name = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            logger_level_name = window.LOG_LEVEL;\n        }\n        var logger_level = LOG_LEVELS[logger_level_name];\n        var type_level = LOG_LEVELS[type];\n        if (!(type_level >= logger_level)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        var log = console.log.bind(console);\n        if (type === LOG_TYPE.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LOG_TYPE.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        var prefix = \"[\".concat(type, \"] \").concat(this._ts(), \" \").concat(this.name);\n        var message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = \"\".concat(prefix, \" - \").concat(msg[0]);\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = \"\".concat(prefix, \" \").concat(msg[0]);\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            var obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = \"\".concat(prefix, \" - \").concat(msg[0], \" \").concat(obj);\n            log(\"\".concat(prefix, \" - \").concat(msg[0]), obj);\n        }\n        else {\n            message = \"\".concat(prefix, \" \").concat(msg);\n            log(prefix, msg);\n        }\n        try {\n            for (var _b = __values(this._pluggables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var plugin = _c.value;\n                var logEvent = { message: message, timestamp: Date.now() };\n                plugin.pushLogs([logEvent]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.log = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n    };\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.info = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.INFO], __read(msg), false));\n    };\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.warn = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.WARN], __read(msg), false));\n    };\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.error = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.ERROR], __read(msg), false));\n    };\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.debug = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.DEBUG], __read(msg), false));\n    };\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    ConsoleLogger.prototype.verbose = function () {\n        var msg = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            msg[_i] = arguments[_i];\n        }\n        this._log.apply(this, __spreadArray([LOG_TYPE.VERBOSE], __read(msg), false));\n    };\n    ConsoleLogger.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    };\n    ConsoleLogger.prototype.listPluggables = function () {\n        return this._pluggables;\n    };\n    ConsoleLogger.LOG_LEVEL = null;\n    return ConsoleLogger;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}