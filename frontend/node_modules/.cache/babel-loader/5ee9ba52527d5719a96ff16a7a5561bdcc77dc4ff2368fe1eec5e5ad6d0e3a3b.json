{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false); // Set initial loading state to false\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 12;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    setLoading(true); // Set loading state to true when fetching data\n\n    try {\n      // Use the cached data directly instead of making a network request\n      const data = {\n        animals: cachedData\n      };\n      setTotalPages(Math.ceil(data.animals.length / itemsPerPage));\n      setSearchResults(data.animals);\n      setLoading(false); // Set loading state to false\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false); // Set loading state to false in case of an error\n    }\n  };\n\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters, cachedData]);\n  const handlePageChange = page => {\n    currentPageRef.current = page;\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n      const endIndex = startIndex + itemsPerPage;\n      const petsToDisplay = searchResults.slice(startIndex, endIndex);\n      if (petsToDisplay.length > 0) {\n        return petsToDisplay.map(pet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pet-card-container\",\n          children: /*#__PURE__*/_jsxDEV(PetCard, {\n            pet: pet,\n            addToFavorites: addToFavorites,\n            removeFromFavorites: removeFromFavorites,\n            isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-horizontal\",\n      children: [Array.from({\n        length: totalPagesToDisplay\n      }, (_, index) => {\n        const page = firstPage + index;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handlePageChange(page);\n          },\n          className: currentPageRef.current === page ? 'active' : '',\n          children: page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this);\n      }), lastPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePageChange(lastPage + 1);\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), totalPages > 1 && renderPaginationButtons()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"Ruqqxjnxk/eEcGAMRYFd1vC5SI8=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PetCard","Filter","Link","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","currentPageRef","itemsPerPage","minimumPets","cachedData","setCachedData","totalPages","setTotalPages","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchPets","data","animals","Math","ceil","length","error","console","message","handlePageChange","page","current","handleFilterChange","newFilters","renderPetCards","startIndex","endIndex","petsToDisplay","slice","map","pet","className","children","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","renderPaginationButtons","visiblePageCount","totalPagesToDisplay","min","firstPage","max","floor","lastPage","Array","from","_","index","onClick","onFilterChange","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport { Link } from 'react-router-dom';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false); // Set initial loading state to false\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 12;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    setLoading(true); // Set loading state to true when fetching data\n\n    try {\n      // Use the cached data directly instead of making a network request\n      const data = { animals: cachedData };\n      setTotalPages(Math.ceil(data.animals.length / itemsPerPage));\n\n      setSearchResults(data.animals);\n      setLoading(false); // Set loading state to false\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false); // Set loading state to false in case of an error\n    }\n  };\n\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters, cachedData]);\n\n  const handlePageChange = (page) => {\n    currentPageRef.current = page;\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n  };\n\n  const renderPetCards = () => {\n    if (!loading) {\n      const startIndex = (currentPageRef.current - 1) * itemsPerPage;\n      const endIndex = startIndex + itemsPerPage;\n      const petsToDisplay = searchResults.slice(startIndex, endIndex);\n\n      if (petsToDisplay.length > 0) {\n        return petsToDisplay.map((pet) => (\n          <div key={pet.id} className=\"pet-card-container\">\n            <PetCard\n              pet={pet}\n              addToFavorites={addToFavorites}\n              removeFromFavorites={removeFromFavorites}\n              isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n            />\n          </div>\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n\n    return (\n      <div className=\"pagination-horizontal\">\n        {Array.from({ length: totalPagesToDisplay }, (_, index) => {\n          const page = firstPage + index;\n          return (\n            <button\n              key={index}\n              onClick={() => {\n                handlePageChange(page);\n              }}\n              className={currentPageRef.current === page ? 'active' : ''}\n            >\n              {page}\n            </button>\n          );\n        })}\n        {lastPage < totalPages && (\n          <button\n            onClick={() => {\n              handlePageChange(lastPage + 1);\n            }}\n          >\n            ...\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        {totalPages > 1 && renderPaginationButtons()}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}