{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllPetsPage() {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cache, setCache] = useState([]);\n  const [paginationData, setPaginationData] = useState(null);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n  const fetchAnimalsByCategory = async (category, page) => {\n    let endpoint;\n    if (category === \"dog\" || category === \"cat\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    } else if (category === \"other\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    }\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      if (data && data.animals) {\n        setCache(data.animals);\n        setPaginationData(data.pagination);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n    fetchData();\n  }, [category, currentPage]);\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= paginationData.total_pages) {\n      setCurrentPage(newPage);\n    }\n  };\n  const renderPageButtons = () => {\n    if (!paginationData || !paginationData.total_pages) {\n      return null;\n    }\n    const totalPageCount = paginationData.total_pages;\n    const buttons = [];\n    for (let i = 1; i <= totalPageCount; i++) {\n      buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(i),\n        className: currentPage === i ? 'active' : '',\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-pets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `All ${category.charAt(0).toUpperCase() + category.slice(1)}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pet-list\",\n      children: cache.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n        pet: pet\n      }, pet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), renderPageButtons(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === paginationData.total_pages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(AllPetsPage, \"Ha/GBXxY4JIvQ2T1yLPHo4hytSQ=\", false, function () {\n  return [useParams];\n});\n_c = AllPetsPage;\nexport default AllPetsPage;\nvar _c;\n$RefreshReg$(_c, \"AllPetsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","PetCard","jsxDEV","_jsxDEV","AllPetsPage","_s","category","loading","setLoading","currentPage","setCurrentPage","cache","setCache","paginationData","setPaginationData","petsPerPage","otherAnimalTypes","fetchAnimalsByCategory","page","endpoint","response","fetch","data","json","animals","pagination","error","console","message","fetchData","window","scrollTo","top","behavior","handlePageChange","newPage","total_pages","renderPageButtons","totalPageCount","buttons","i","push","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","pet","id","disabled","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/AllPetsPage.css';\nimport PetCard from './PetCard';\n\n\nfunction AllPetsPage() {\n  const { category } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cache, setCache] = useState([]);\n  const [paginationData, setPaginationData] = useState(null);\n  const petsPerPage = 20;\n  const otherAnimalTypes = [\"horse\", \"bird\", \"barnyard\"];\n\n  const fetchAnimalsByCategory = async (category, page) => {\n    let endpoint;\n\n    if (category === \"dog\" || category === \"cat\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    } else if (category === \"other\") {\n      endpoint = `http://localhost:3002/api/petfinder?type=${category}&limit=${petsPerPage}&page=${page}`;\n    }\n\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      if (data && data.animals) {\n        setCache(data.animals);\n        setPaginationData(data.pagination);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetchAnimalsByCategory(category, currentPage);\n      // Scroll to the top when loading new animals\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    fetchData();\n  }, [category, currentPage]);\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= paginationData.total_pages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  const renderPageButtons = () => {\n    if (!paginationData || !paginationData.total_pages) {\n      return null;\n    }\n\n    const totalPageCount = paginationData.total_pages;\n    const buttons = [];\n\n    for (let i = 1; i <= totalPageCount; i++) {\n      buttons.push(\n        <button\n          key={i}\n          onClick={() => handlePageChange(i)}\n          className={currentPage === i ? 'active' : ''}\n        >\n          {i}\n        </button>\n      );\n    }\n\n    return buttons;\n  };\n\n  return (\n    <div className=\"all-pets-page\">\n      <h2>{`All ${category.charAt(0).toUpperCase() + category.slice(1)}s`}</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <div className=\"pet-list\">\n          {cache.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      )}\n      <div className=\"pagination\">\n        <button\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n        >\n          Previous\n        </button>\n        {renderPageButtons()}\n        <button\n          onClick={() => handlePageChange(currentPage + 1)}\n          disabled={currentPage === paginationData.total_pages}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AllPetsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}