{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport PetDetails from './PetDetails'; // Import the PetDetails component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  favoritePets,\n  addToFavorites,\n  removeFromFavorites\n}) {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPet, setSelectedPet] = useState(null);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 10;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any'\n  });\n\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      const filters = Object.keys(selectedFilters).filter(key => selectedFilters[key] !== 'any').map(key => `${key}=${selectedFilters[key]}`).join('&');\n      const endpoint = `http://localhost:3002/api/petfinder?perPage=${itemsPerPage}&page=${currentPageRef.current}&${filters}`;\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      console.log('API Response:', data);\n      if (data && data.animals) {\n        setCachedData(data.animals);\n        setSearchResults(data.animals);\n        setTotalPages(Math.ceil(data.pagination.total_count / itemsPerPage));\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters]);\n  const handlePageChange = page => {\n    currentPageRef.current = page;\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = newFilters => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n  };\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet,\n          addToFavorites: addToFavorites,\n          removeFromFavorites: removeFromFavorites,\n          isFavorite: favoritePets.some(favoritePet => favoritePet.id === pet.id)\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pets match your criteria.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const handleMoreInfoClick = pet => {\n    setSelectedPet(pet); // Set the selected pet when \"more info\" is clicked\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedPet(null); // Clear the selected pet when the details are closed\n  };\n\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-horizontal\",\n      children: [Array.from({\n        length: totalPagesToDisplay\n      }, (_, index) => {\n        const page = firstPage + index;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handlePageChange(page);\n            fetchPets();\n          },\n          className: currentPageRef.current === page ? 'active' : '',\n          children: page\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      }), lastPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handlePageChange(lastPage + 1);\n          fetchPets();\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: renderPetCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), totalPages > 1 && renderPaginationButtons(), selectedPet && /*#__PURE__*/_jsxDEV(PetDetails, {\n        pet: selectedPet,\n        onClose: handleCloseDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"/5fXCF6gUqFY6h3YwcuZCejRXtE=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PetCard","Filter","PetDetails","jsxDEV","_jsxDEV","MainPage","favoritePets","addToFavorites","removeFromFavorites","_s","searchResults","setSearchResults","loading","setLoading","selectedPet","setSelectedPet","currentPageRef","itemsPerPage","minimumPets","cachedData","setCachedData","totalPages","setTotalPages","selectedFilters","setSelectedFilters","type","breed","age","gender","size","coat","fetchPets","filters","Object","keys","filter","key","map","join","endpoint","current","response","fetch","data","json","console","log","animals","Math","ceil","pagination","total_count","error","message","handlePageChange","page","handleFilterChange","newFilters","renderPetCards","length","pet","isFavorite","some","favoritePet","id","fileName","_jsxFileName","lineNumber","columnNumber","children","handleMoreInfoClick","handleCloseDetails","renderPaginationButtons","visiblePageCount","totalPagesToDisplay","min","firstPage","max","floor","lastPage","className","Array","from","_","index","onClick","onFilterChange","onClose","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport PetDetails from './PetDetails'; // Import the PetDetails component\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPet, setSelectedPet] = useState(null);\n  const currentPageRef = useRef(1);\n  const itemsPerPage = 10;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch pets based on filters and pagination\n  const fetchPets = async () => {\n    try {\n      const filters = Object.keys(selectedFilters)\n        .filter((key) => selectedFilters[key] !== 'any')\n        .map((key) => `${key}=${selectedFilters[key]}`)\n        .join('&');\n\n      const endpoint = `http://localhost:3002/api/petfinder?perPage=${itemsPerPage}&page=${currentPageRef.current}&${filters}`;\n      const response = await fetch(endpoint);\n      const data = await response.json();\n\n      console.log('API Response:', data);\n\n      if (data && data.animals) {\n        setCachedData(data.animals);\n        setSearchResults(data.animals);\n        setTotalPages(Math.ceil(data.pagination.total_count / itemsPerPage));\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPets();\n  }, [currentPageRef, selectedFilters]);\n\n  const handlePageChange = (page) => {\n    currentPageRef.current = page;\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n    currentPageRef.current = 1;\n  };\n\n  const renderPetCards = () => {\n    if (!loading) {\n      if (searchResults.length > 0) {\n        return searchResults.map((pet) => (\n          <PetCard\n            key={pet.id}\n            pet={pet}\n            addToFavorites={addToFavorites}\n            removeFromFavorites={removeFromFavorites}\n            isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n          />\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n  const handleMoreInfoClick = (pet) => {\n    setSelectedPet(pet); // Set the selected pet when \"more info\" is clicked\n  };\n\n  const handleCloseDetails = () => {\n    setSelectedPet(null); // Clear the selected pet when the details are closed\n  };\n\n  const renderPaginationButtons = () => {\n    const visiblePageCount = 9; // Number of visible page buttons\n    const totalPagesToDisplay = Math.min(totalPages, visiblePageCount);\n    const firstPage = Math.max(currentPageRef.current - Math.floor(visiblePageCount / 2), 1);\n    const lastPage = firstPage + totalPagesToDisplay - 1;\n\n    return (\n      <div className=\"pagination-horizontal\">\n        {Array.from({ length: totalPagesToDisplay }, (_, index) => {\n          const page = firstPage + index;\n          return (\n            <button\n              key={index}\n              onClick={() => {\n                handlePageChange(page);\n                fetchPets();\n              }}\n              className={currentPageRef.current === page ? 'active' : ''}\n            >\n              {page}\n            </button>\n          );\n        })}\n        {lastPage < totalPages && (\n          <button\n            onClick={() => {\n              handlePageChange(lastPage + 1);\n              fetchPets();\n            }}\n          >\n            ...\n          </button>\n        )}\n      </div>\n    );\n  };\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">\n          {renderPetCards()}\n        </div>\n        {totalPages > 1 && renderPaginationButtons()}\n        {/* Display pet details when selectedPet is not null */}\n        {selectedPet && (\n          <PetDetails pet={selectedPet} onClose={handleCloseDetails} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,wBAAwB;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,cAAc;EAAEC;AAAoB,CAAC,EAAE;EAAAC,EAAA;EACvE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,CAAC,CAAC;EAChC,MAAMkB,YAAY,GAAG,EAAE;EACvB,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC;IACrD4B,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,KAAK;IACZC,GAAG,EAAE,KAAK;IACVC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACX,eAAe,CAAC,CACzCY,MAAM,CAAEC,GAAG,IAAKb,eAAe,CAACa,GAAG,CAAC,KAAK,KAAK,CAAC,CAC/CC,GAAG,CAAED,GAAG,IAAM,GAAEA,GAAI,IAAGb,eAAe,CAACa,GAAG,CAAE,EAAC,CAAC,CAC9CE,IAAI,CAAC,GAAG,CAAC;MAEZ,MAAMC,QAAQ,GAAI,+CAA8CtB,YAAa,SAAQD,cAAc,CAACwB,OAAQ,IAAGR,OAAQ,EAAC;MACxH,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;MACtC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC;MAElC,IAAIA,IAAI,IAAIA,IAAI,CAACI,OAAO,EAAE;QACxB3B,aAAa,CAACuB,IAAI,CAACI,OAAO,CAAC;QAC3BpC,gBAAgB,CAACgC,IAAI,CAACI,OAAO,CAAC;QAC9BzB,aAAa,CAAC0B,IAAI,CAACC,IAAI,CAACN,IAAI,CAACO,UAAU,CAACC,WAAW,GAAGlC,YAAY,CAAC,CAAC;QACpEJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAOuC,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpDxC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdiC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACf,cAAc,EAAEO,eAAe,CAAC,CAAC;EAErC,MAAM+B,gBAAgB,GAAIC,IAAI,IAAK;IACjCvC,cAAc,CAACwB,OAAO,GAAGe,IAAI;EAC/B,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;IACzCjC,kBAAkB,CAACiC,UAAU,CAAC;IAC9BzC,cAAc,CAACwB,OAAO,GAAG,CAAC;EAC5B,CAAC;EAED,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC9C,OAAO,EAAE;MACZ,IAAIF,aAAa,CAACiD,MAAM,GAAG,CAAC,EAAE;QAC5B,OAAOjD,aAAa,CAAC2B,GAAG,CAAEuB,GAAG,iBAC3BxD,OAAA,CAACJ,OAAO;UAEN4D,GAAG,EAAEA,GAAI;UACTrD,cAAc,EAAEA,cAAe;UAC/BC,mBAAmB,EAAEA,mBAAoB;UACzCqD,UAAU,EAAEvD,YAAY,CAACwD,IAAI,CAAEC,WAAW,IAAKA,WAAW,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE;QAAE,GAJrEJ,GAAG,CAACI,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKZ,CACF,CAAC;MACJ,CAAC,MAAM;QACL,oBAAOhE,OAAA;UAAAiE,QAAA,EAAG;QAA4B;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAC5C;IACF,CAAC,MAAM;MACL,oBAAOhE,OAAA;QAAAiE,QAAA,EAAG;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC1B;EACF,CAAC;EACD,MAAME,mBAAmB,GAAIV,GAAG,IAAK;IACnC7C,cAAc,CAAC6C,GAAG,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/BxD,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED,MAAMyD,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC5B,MAAMC,mBAAmB,GAAG1B,IAAI,CAAC2B,GAAG,CAACtD,UAAU,EAAEoD,gBAAgB,CAAC;IAClE,MAAMG,SAAS,GAAG5B,IAAI,CAAC6B,GAAG,CAAC7D,cAAc,CAACwB,OAAO,GAAGQ,IAAI,CAAC8B,KAAK,CAACL,gBAAgB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxF,MAAMM,QAAQ,GAAGH,SAAS,GAAGF,mBAAmB,GAAG,CAAC;IAEpD,oBACEtE,OAAA;MAAK4E,SAAS,EAAC,uBAAuB;MAAAX,QAAA,GACnCY,KAAK,CAACC,IAAI,CAAC;QAAEvB,MAAM,EAAEe;MAAoB,CAAC,EAAE,CAACS,CAAC,EAAEC,KAAK,KAAK;QACzD,MAAM7B,IAAI,GAAGqB,SAAS,GAAGQ,KAAK;QAC9B,oBACEhF,OAAA;UAEEiF,OAAO,EAAEA,CAAA,KAAM;YACb/B,gBAAgB,CAACC,IAAI,CAAC;YACtBxB,SAAS,CAAC,CAAC;UACb,CAAE;UACFiD,SAAS,EAAEhE,cAAc,CAACwB,OAAO,KAAKe,IAAI,GAAG,QAAQ,GAAG,EAAG;UAAAc,QAAA,EAE1Dd;QAAI,GAPA6B,KAAK;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQJ,CAAC;MAEb,CAAC,CAAC,EACDW,QAAQ,GAAG1D,UAAU,iBACpBjB,OAAA;QACEiF,OAAO,EAAEA,CAAA,KAAM;UACb/B,gBAAgB,CAACyB,QAAQ,GAAG,CAAC,CAAC;UAC9BhD,SAAS,CAAC,CAAC;QACb,CAAE;QAAAsC,QAAA,EACH;MAED;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;EACD,oBACEhE,OAAA;IAAK4E,SAAS,EAAC,WAAW;IAAAX,QAAA,gBACxBjE,OAAA;MAAK4E,SAAS,EAAC,SAAS;MAAAX,QAAA,eACtBjE,OAAA;QAAK4E,SAAS,EAAC,SAAS;QAAAX,QAAA,eACtBjE,OAAA,CAACH,MAAM;UAACqF,cAAc,EAAE9B;QAAmB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNhE,OAAA;MAAK4E,SAAS,EAAC,SAAS;MAAAX,QAAA,gBACtBjE,OAAA;QAAK4E,SAAS,EAAC,eAAe;QAAAX,QAAA,EAC3BX,cAAc,CAAC;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EACL/C,UAAU,GAAG,CAAC,IAAImD,uBAAuB,CAAC,CAAC,EAE3C1D,WAAW,iBACVV,OAAA,CAACF,UAAU;QAAC0D,GAAG,EAAE9C,WAAY;QAACyE,OAAO,EAAEhB;MAAmB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC7D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3D,EAAA,CA7IQJ,QAAQ;AAAAmF,EAAA,GAARnF,QAAQ;AA+IjB,eAAeA,QAAQ;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}