{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/SearchBar.css';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [petType, setPetType] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n  const handleSearch = async () => {\n    if (searchText && petType) {\n      // Both location and type are provided, so we can query the API\n      const apiEndpoint = `http://localhost:3002/api/petfinder?perPage=100&location=${searchText}&type=${petType}`;\n      try {\n        const response = await fetch(apiEndpoint);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          onSearch(data);\n        } else {\n          console.error('API request failed:', response.statusText);\n        }\n      } catch (error) {\n        console.error('API request error:', error);\n      }\n    } else {\n      // Location or type is missing, so you can display an error message or prevent the search\n      alert('Please enter both location and pet type to search.');\n    }\n  };\n  function isZipCode(text) {\n    // \\check if the input is a 5-digit number\n    return /^\\d{5}$/.test(text);\n  }\n  const handleSelect = async address => {\n    try {\n      const results = await geocodeByAddress(address);\n      const latLng = await getLatLng(results[0]);\n      // Get the ZIP code from the geocoded data if needed\n      const zipCode = results[0].address_components.find(component => component.types.includes('postal_code'));\n      setSearchText(zipCode ? zipCode.long_name : address);\n    } catch (error) {\n      console.error('Error geocoding address:', error);\n    }\n  };\n  const handleShareLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        try {\n          const {\n            coords\n          } = position;\n          const {\n            latitude,\n            longitude\n          } = coords;\n          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`);\n          const data = await response.json();\n          const zipCode = data.address.postcode;\n          if (zipCode) {\n            setSearchText(zipCode);\n          }\n        } catch (error) {\n          console.error(\"Error getting zip code:\", error);\n        }\n      }, error => {\n        // Handle any errors\n        alert(`Error getting location: ${error.message}`);\n      });\n    } else {\n      alert(\"Geolocation is not supported in your browser\");\n    }\n  };\n  const handleInputClick = () => {\n    setShowLocationOptions(!showLocationOptions); // Toggle the display of the location options\n  };\n\n  const handleLocationOptionClick = () => {\n    handleShareLocation();\n    setShowLocationOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter zipcode, city, or state\",\n          value: searchText,\n          onChange: e => setSearchText(e.target.value),\n          onClick: handleInputClick,\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), showLocationOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-option\",\n          onClick: handleLocationOptionClick,\n          children: \"Share Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: petType,\n        onChange: e => setPetType(e.target.value),\n        className: \"search-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select pet type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dog\",\n          children: \"Dog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat\",\n          children: \"Cat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"horse\",\n          children: \"Horse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bird\",\n          children: \"Bird\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"furry\",\n          children: \"Furry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"barnyard\",\n          children: \"Barnyard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"gwT4waPSBJ0oz/BFf3zSJan7E8Q=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","searchText","setSearchText","petType","setPetType","showLocationOptions","setShowLocationOptions","handleSearch","apiEndpoint","response","fetch","ok","data","json","console","log","error","statusText","alert","isZipCode","text","test","handleSelect","address","results","latLng","zipCode","address_components","find","component","types","includes","long_name","handleShareLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","postcode","message","handleInputClick","handleLocationOptionClick","className","children","type","placeholder","value","onChange","e","target","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/SearchBar.css';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchText, setSearchText] = useState('');\n  const [petType, setPetType] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n\n  const handleSearch = async () => {\n    if (searchText && petType) {\n      // Both location and type are provided, so we can query the API\n      const apiEndpoint = `http://localhost:3002/api/petfinder?perPage=100&location=${searchText}&type=${petType}`;\n      \n      try {\n        const response = await fetch(apiEndpoint);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          onSearch(data);\n        } else {\n          console.error('API request failed:', response.statusText);\n        }\n      } catch (error) {\n        console.error('API request error:', error);\n      }\n    } else {\n      // Location or type is missing, so you can display an error message or prevent the search\n      alert('Please enter both location and pet type to search.');\n    }\n  };\n  \n  \n  function isZipCode(text) {\n    // \\check if the input is a 5-digit number\n    return /^\\d{5}$/.test(text);\n  }\n  const handleSelect = async (address) => {\n    try {\n      const results = await geocodeByAddress(address);\n      const latLng = await getLatLng(results[0]);\n      // Get the ZIP code from the geocoded data if needed\n      const zipCode = results[0].address_components.find(\n        (component) => component.types.includes('postal_code')\n      );\n      setSearchText(zipCode ? zipCode.long_name : address);\n    } catch (error) {\n      console.error('Error geocoding address:', error);\n    }\n  };\n\n  const handleShareLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        try {\n          const { coords } = position;\n          const { latitude, longitude } = coords;\n\n          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`);\n          const data = await response.json();\n          const zipCode = data.address.postcode;\n\n          if (zipCode) {\n            setSearchText(zipCode);\n          }\n        } catch (error) {\n          console.error(\"Error getting zip code:\", error);\n        }\n      }, (error) => {\n        // Handle any errors\n        alert(`Error getting location: ${error.message}`);\n      });\n    } else {\n      alert(\"Geolocation is not supported in your browser\");\n    }\n  };\n\n  const handleInputClick = () => {\n    setShowLocationOptions(!showLocationOptions); // Toggle the display of the location options\n  };\n\n  const handleLocationOptionClick = () => {\n    handleShareLocation();\n    setShowLocationOptions(false);\n  };\n\n  return (\n    <div className=\"search-bar\">\n      <div className=\"search-container\">\n        <div className=\"search-input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter zipcode, city, or state\"\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)}\n            onClick={handleInputClick}\n            className=\"search-input\"\n          />\n          {showLocationOptions && (\n            <div className=\"location-option\" onClick={handleLocationOptionClick}>\n              Share Location\n            </div>\n          )}\n        </div>\n        <select\n          value={petType}\n          onChange={(e) => setPetType(e.target.value)}\n          className=\"search-select\"\n        >\n          <option value=\"\">Select pet type</option>\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"horse\">Horse</option>\n          <option value=\"bird\">Bird</option>\n          <option value=\"furry\">Furry</option>\n          <option value=\"barnyard\">Barnyard</option>\n        </select>\n        <button onClick={handleSearch} className=\"search-button\">Search</button>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}