{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport InAppMessagingClass from './InAppMessaging';\nimport PushNotificationClass from './PushNotification';\nvar logger = new Logger('Notifications');\nvar NotificationsClass = /** @class */function () {\n  function NotificationsClass() {\n    var _this = this;\n    this.config = {};\n    /**\n     * Configure Notifications\n     * @param {Object} config - Notifications configuration object\n     */\n    this.configure = function (_a) {\n      var config = (_a === void 0 ? {} : _a).Notifications;\n      _this.config = __assign(__assign({}, _this.config), config);\n      logger.debug('configure Notifications', config);\n      // Configure sub-categories\n      _this.inAppMessaging.configure(_this.config.InAppMessaging);\n      if (_this.config.Push) {\n        try {\n          // only instantiate once\n          if (!_this.pushNotification) {\n            _this.pushNotification = new PushNotificationClass();\n          }\n          _this.pushNotification.configure(_this.config.Push);\n        } catch (err) {\n          logger.error(err);\n        }\n      }\n      return _this.config;\n    };\n    this.identifyUser = function (userId, userInfo) {\n      var identifyFunctions = [];\n      if (_this.inAppMessaging) {\n        identifyFunctions.push(_this.inAppMessaging.identifyUser);\n      }\n      if (_this.pushNotification) {\n        identifyFunctions.push(_this.pushNotification.identifyUser);\n      }\n      return Promise.all(identifyFunctions.map(function (identifyFunction) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var err_1;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n                return [4 /*yield*/, identifyFunction(userId, userInfo)];\n              case 1:\n                _a.sent();\n                return [3 /*break*/, 3];\n              case 2:\n                err_1 = _a.sent();\n                logger.error('Failed to identify user', err_1);\n                throw err_1;\n              case 3:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }));\n    };\n\n    this.inAppMessaging = new InAppMessagingClass();\n  }\n  /**\n   * Get the name of the module category\n   * @returns {string} name of the module category\n   */\n  NotificationsClass.prototype.getModuleName = function () {\n    return 'Notifications';\n  };\n  Object.defineProperty(NotificationsClass.prototype, \"InAppMessaging\", {\n    get: function () {\n      return this.inAppMessaging;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(NotificationsClass.prototype, \"Push\", {\n    get: function () {\n      var _a;\n      return (_a = this.pushNotification) !== null && _a !== void 0 ? _a : {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return NotificationsClass;\n}();\nvar Notifications = new NotificationsClass();\nexport default Notifications;\nAmplify.register(Notifications);","map":{"version":3,"names":["__assign","__awaiter","__generator","Amplify","ConsoleLogger","Logger","InAppMessagingClass","PushNotificationClass","logger","NotificationsClass","_this","config","configure","_a","Notifications","debug","inAppMessaging","InAppMessaging","Push","pushNotification","err","error","identifyUser","userId","userInfo","identifyFunctions","push","Promise","all","map","identifyFunction","err_1","label","trys","sent","prototype","getModuleName","Object","defineProperty","get","enumerable","configurable","register"],"sources":["/Users/yannellym/Desktop/iwantapet/node_modules/@aws-amplify/notifications/lib-esm/Notifications.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport InAppMessagingClass from './InAppMessaging';\nimport PushNotificationClass from './PushNotification';\nvar logger = new Logger('Notifications');\nvar NotificationsClass = /** @class */ (function () {\n    function NotificationsClass() {\n        var _this = this;\n        this.config = {};\n        /**\n         * Configure Notifications\n         * @param {Object} config - Notifications configuration object\n         */\n        this.configure = function (_a) {\n            var config = (_a === void 0 ? {} : _a).Notifications;\n            _this.config = __assign(__assign({}, _this.config), config);\n            logger.debug('configure Notifications', config);\n            // Configure sub-categories\n            _this.inAppMessaging.configure(_this.config.InAppMessaging);\n            if (_this.config.Push) {\n                try {\n                    // only instantiate once\n                    if (!_this.pushNotification) {\n                        _this.pushNotification = new PushNotificationClass();\n                    }\n                    _this.pushNotification.configure(_this.config.Push);\n                }\n                catch (err) {\n                    logger.error(err);\n                }\n            }\n            return _this.config;\n        };\n        this.identifyUser = function (userId, userInfo) {\n            var identifyFunctions = [];\n            if (_this.inAppMessaging) {\n                identifyFunctions.push(_this.inAppMessaging.identifyUser);\n            }\n            if (_this.pushNotification) {\n                identifyFunctions.push(_this.pushNotification.identifyUser);\n            }\n            return Promise.all(identifyFunctions.map(function (identifyFunction) { return __awaiter(_this, void 0, void 0, function () {\n                var err_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, identifyFunction(userId, userInfo)];\n                        case 1:\n                            _a.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            err_1 = _a.sent();\n                            logger.error('Failed to identify user', err_1);\n                            throw err_1;\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            }); }));\n        };\n        this.inAppMessaging = new InAppMessagingClass();\n    }\n    /**\n     * Get the name of the module category\n     * @returns {string} name of the module category\n     */\n    NotificationsClass.prototype.getModuleName = function () {\n        return 'Notifications';\n    };\n    Object.defineProperty(NotificationsClass.prototype, \"InAppMessaging\", {\n        get: function () {\n            return this.inAppMessaging;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NotificationsClass.prototype, \"Push\", {\n        get: function () {\n            var _a;\n            return (_a = this.pushNotification) !== null && _a !== void 0 ? _a : {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NotificationsClass;\n}());\nvar Notifications = new NotificationsClass();\nexport default Notifications;\nAmplify.register(Notifications);\n//# sourceMappingURL=Notifications.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}