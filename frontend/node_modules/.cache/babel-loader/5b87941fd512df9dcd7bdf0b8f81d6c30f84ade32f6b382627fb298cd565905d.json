{"ast":null,"code":"var _jsxFileName = \"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport SearchBar from './SearchBar';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport SampleData from './SampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage({\n  onFilterChange\n}) {\n  _s();\n  const [filters, setFilters] = useState({\n    size: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    shelter: 'any',\n    petType: 'any' // Add petType filter\n  });\n\n  const [searchResults, setSearchResults] = useState([]); // Initialize searchResults state\n\n  useEffect(() => {\n    // Fetch and populate data from your API here and set it in setSearchResults\n    // For now, using sampleData for demonstration\n    setSearchResults(SampleData);\n  }, []);\n  const filterPets = () => {\n    // Apply filters to searchResults based on the filters state\n    let filteredData = [...SampleData]; // Initialize with full data\n\n    if (filters.size !== 'any') {\n      filteredData = filteredData.filter(pet => pet.size === filters.size.toLowerCase());\n    }\n    if (filters.breed !== 'any') {\n      filteredData = filteredData.filter(pet => pet.breed === filters.breed);\n    }\n    if (filters.age !== 'any') {\n      filteredData = filteredData.filter(pet => pet.age === filters.age);\n    }\n    if (filters.gender !== 'any') {\n      filteredData = filteredData.filter(pet => pet.gender === filters.gender);\n    }\n    if (filters.shelter !== 'any') {\n      // Assuming you have a shelter field in your pet data\n      filteredData = filteredData.filter(pet => pet.shelter === filters.shelter);\n    }\n\n    // Update searchResults with the filtered data\n    setSearchResults(filteredData);\n  };\n  const handleFilterChange = (filterName, value) => {\n    setFilters({\n      ...filters,\n      [filterName]: value\n    });\n\n    // Call the filterPets function to apply the filters immediately\n    filterPets();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          filters: filters,\n          onFilterChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pet-card-list\",\n        children: searchResults.map(pet => /*#__PURE__*/_jsxDEV(PetCard, {\n          pet: pet\n        }, pet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"bjfBCPweS1339lxpZwPj3Nwv1LU=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","PetCard","Filter","SampleData","jsxDEV","_jsxDEV","MainPage","onFilterChange","_s","filters","setFilters","size","breed","age","gender","shelter","petType","searchResults","setSearchResults","filterPets","filteredData","filter","pet","toLowerCase","handleFilterChange","filterName","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport SearchBar from './SearchBar';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\nimport SampleData from './SampleData'\n\nfunction MainPage({ onFilterChange }) {\n  const [filters, setFilters] = useState({\n    size: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    shelter: 'any',\n    petType: 'any', // Add petType filter\n  });\n\n  const [searchResults, setSearchResults] = useState([]); // Initialize searchResults state\n\n  useEffect(() => {\n    // Fetch and populate data from your API here and set it in setSearchResults\n    // For now, using sampleData for demonstration\n    setSearchResults(SampleData);\n  }, []);\n\n  const filterPets = () => {\n    // Apply filters to searchResults based on the filters state\n    let filteredData = [...SampleData]; // Initialize with full data\n\n    if (filters.size !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.size === filters.size.toLowerCase());\n    }\n    if (filters.breed !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.breed === filters.breed);\n    }\n    if (filters.age !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.age === filters.age);\n    }\n    if (filters.gender !== 'any') {\n      filteredData = filteredData.filter((pet) => pet.gender === filters.gender);\n    }\n    if (filters.shelter !== 'any') {\n      // Assuming you have a shelter field in your pet data\n      filteredData = filteredData.filter((pet) => pet.shelter === filters.shelter);\n    }\n\n    // Update searchResults with the filtered data\n    setSearchResults(filteredData);\n  };\n\n  const handleFilterChange = (filterName, value) => {\n    setFilters({\n      ...filters,\n      [filterName]: value,\n    });\n\n    // Call the filterPets function to apply the filters immediately\n    filterPets();\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"search-bar\">\n        <SearchBar />\n      </div>\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          <Filter filters={filters} onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"pet-card-list\">\n          {searchResults.map((pet) => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}