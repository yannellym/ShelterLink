[{"/Users/yannellym/Desktop/iwantapet/frontend/src/index.js":"1","/Users/yannellym/Desktop/iwantapet/frontend/src/App.js":"2","/Users/yannellym/Desktop/iwantapet/frontend/src/components/header.js":"3","/Users/yannellym/Desktop/iwantapet/frontend/src/components/Header.js":"4","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchFilters.js":"5","/Users/yannellym/Desktop/iwantapet/frontend/src/components/DogList.js":"6","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SectionLink.js":"7","/Users/yannellym/Desktop/iwantapet/frontend/src/components/NearbyPetCard.js":"8","/Users/yannellym/Desktop/iwantapet/frontend/src/components/AdoptionInfoSection.js":"9","/Users/yannellym/Desktop/iwantapet/frontend/src/components/Footer.js":"10","/Users/yannellym/Desktop/iwantapet/frontend/src/components/UserPreferencesForm.js":"11","/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js":"12","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js":"13","/Users/yannellym/Desktop/iwantapet/frontend/src/components/Filter.js":"14","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetCard.js":"15","/Users/yannellym/Desktop/iwantapet/frontend/src/components/Home.js":"16","/Users/yannellym/Desktop/iwantapet/frontend/src/components/About.js":"17","/Users/yannellym/Desktop/iwantapet/frontend/src/components/Resources.js":"18","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SignIn.js":"19","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SignUp.js":"20","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SampleData.js":"21","/Users/yannellym/Desktop/iwantapet/frontend/src/components/popularDogBreeds.js":"22","/Users/yannellym/Desktop/iwantapet/frontend/src/components/FavoritesPage.js":"23","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetDetail.js":"24","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetDetails.js":"25","/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js":"26"},{"size":255,"mtime":1693336822878,"results":"27","hashOfConfig":"28"},{"size":2251,"mtime":1697130128931,"results":"29","hashOfConfig":"28"},{"size":782,"mtime":1693346730129,"results":"30","hashOfConfig":"31"},{"size":1164,"mtime":1694018761360,"results":"32","hashOfConfig":"28"},{"size":869,"mtime":1694019751853,"results":"33","hashOfConfig":"28"},{"size":442,"mtime":1693337385377,"results":"34","hashOfConfig":"31"},{"size":618,"mtime":1693507919628,"results":"35","hashOfConfig":"28"},{"size":633,"mtime":1696964718380,"results":"36","hashOfConfig":"28"},{"size":1180,"mtime":1697128424837,"results":"37","hashOfConfig":"28"},{"size":1618,"mtime":1697128476303,"results":"38","hashOfConfig":"28"},{"size":3525,"mtime":1693524366729,"results":"39","hashOfConfig":"28"},{"size":5124,"mtime":1696963787386,"results":"40","hashOfConfig":"28"},{"size":501,"mtime":1693495573096,"results":"41","hashOfConfig":"28"},{"size":6347,"mtime":1696439572712,"results":"42","hashOfConfig":"28"},{"size":2325,"mtime":1697228522987,"results":"43","hashOfConfig":"28"},{"size":6389,"mtime":1697227951508,"results":"44","hashOfConfig":"28"},{"size":2403,"mtime":1696962303319,"results":"45","hashOfConfig":"28"},{"size":1884,"mtime":1696962105211,"results":"46","hashOfConfig":"28"},{"size":1031,"mtime":1693524655484,"results":"47","hashOfConfig":"28"},{"size":1285,"mtime":1693524694298,"results":"48","hashOfConfig":"28"},{"size":6210,"mtime":1693957692518,"results":"49","hashOfConfig":"28"},{"size":944,"mtime":1696373905137,"results":"50","hashOfConfig":"28"},{"size":1223,"mtime":1694020975353,"results":"51","hashOfConfig":"28"},{"size":350,"mtime":1694804265103,"results":"52","hashOfConfig":"28"},{"size":3117,"mtime":1696624054033,"results":"53","hashOfConfig":"28"},{"size":1595,"mtime":1697227424049,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1hw3ie1",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bw99my",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"58"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yannellym/Desktop/iwantapet/frontend/src/index.js",[],[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/App.js",["141","142"],[],"import React, { useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport MainPage from './components/MainPage'; \nimport Home from './components/Home'; \nimport About from './components/About';\nimport Resources from './components/Resources'; \nimport FavoritesPage from './components/FavoritesPage';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport PetDetails from './components/PetDetails'; // Import the PetDetails component\nimport AllPetsPage from './components/AllPetsPage.js';\n\n\nconst App = () => {\n  const [isSignInVisible, setIsSignInVisible] = useState(true);\n  const [favoritePets, setFavoritePets] = useState([]);\n\n  // Functions for Managing Favorites\n  const addToFavorites = (pet) => {\n    // Check if the pet is already in favorites to avoid duplicates\n    if (!favoritePets.some((favoritePet) => favoritePet.id === pet.id)) {\n      setFavoritePets([...favoritePets, pet]);\n    }\n  };\n  \n  const removeFromFavorites = (petId) => {\n    const updatedFavorites = favoritePets.filter((pet) => pet.id !== petId);\n    setFavoritePets(updatedFavorites);\n  };\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home favoritePets={favoritePets} setFavoritePets={setFavoritePets} addToFavorites={addToFavorites} removeFromFavorites={removeFromFavorites} />} />\n        <Route path=\"/find-a-pet\" element={<MainPage favoritePets={favoritePets} setFavoritePets={setFavoritePets} addToFavorites={addToFavorites} removeFromFavorites={removeFromFavorites}/>} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/resources\" element={<Resources />} />\n        <Route path=\"/favorites\" element={<FavoritesPage favoritePets={favoritePets} removeFromFavorites={removeFromFavorites} />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/signin\" element={<SignIn />} />\n        <Route path=\"/pet-details/:petId\" element={<PetDetails />} />\n        <Route path=\"/all-pets/:category\" element={<AllPetsPage />} />\n      </Routes>\n  \n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/components/header.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/Header.js",["143"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Header.css';\n\nimport ShelterLinkLogo from '../images/ShelterLinkw.png';\n\nconst Header = () => {\n  const [user, setUser] = useState(null); // Replace with your user state logic\n\n  return (\n    <header className=\"header\">\n      {/* Logo */}\n      <div className=\"logo\">\n        <img src={ShelterLinkLogo} alt=\"ShelterLink Logo\" />\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"main-navigation\">\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/find-a-pet\">Find a pet</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n          <li><Link to=\"/resources\">Resources</Link></li>\n          <li><Link to=\"/favorites\">Favorites</Link></li>\n        </ul>\n      </nav>\n\n      {/* User profile */}\n      <div className=\"user-profile\">\n        {user ? (\n          <span>{user.name}</span>\n        ) : (\n          <div className=\"nav-item\">\n            <Link to=\"/SignIn\">\n              <button>Sign In</button>\n            </Link>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchFilters.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/DogList.js",[],[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SectionLink.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/NearbyPetCard.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/AdoptionInfoSection.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/Footer.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/UserPreferencesForm.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/MainPage.js",["144","145"],[],"import React, { useState, useEffect } from 'react';\nimport '../styles/MainPage.css';\nimport PetCard from './PetCard';\nimport Filter from './Filter';\n\nfunction MainPage({ favoritePets, addToFavorites, removeFromFavorites }) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const currentPageRef = useState(1);\n  const itemsPerPage = 20;\n  const minimumPets = 400;\n  const [cachedData, setCachedData] = useState([]);\n  const totalPages = Math.ceil(cachedData.length / itemsPerPage);\n\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  // Function to fetch all pets and store them in memory\n  const fetchAllPets = async () => {\n    try {\n      const endpoint = 'http://localhost:3002/api/petfinder?perPage=200'; // Fetch all pets in a single request\n      const response = await fetch(endpoint);\n      const data = await response.json();\n\n      console.log('API Response:', data); // Print the API response\n\n      if (data && data.animals) {\n        setCachedData(data.animals);\n        setSearchResults(data.animals);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllPets(); // Fetch all pets when the component mounts\n  }, []);\n\n  const handlePageChange = (page) => {\n    currentPageRef.current = page;\n    const startIndex = (page - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    setSearchResults(cachedData.slice(startIndex, endIndex));\n  };\n\n  // Function to handle filter changes\n  const handleFilterChange = (newFilters) => {\n    setSelectedFilters(newFilters);\n\n    // Apply filters to the cached data and update search results\n    const filteredResults = applyFilters(cachedData, newFilters);\n    setSearchResults(filteredResults);\n  };\n\n  const applyFilters = (data, filters) => {\n    return data.filter((pet) => {\n      // Flag to check if the pet matches all filters\n      let matchesAllFilters = true;\n  \n      for (const filterKey in filters) {\n        const filterValue = filters[filterKey]?.toLowerCase();\n        const petValue = pet[filterKey]?.toLowerCase();\n  \n        // If the filter value is \"any,\" skip this filter\n        if (filterValue === 'any') {\n          continue;\n        }\n  \n        // Special handling for the \"type\" filter to handle both \"Cat\" and \"Dog\"\n        if (filterKey === 'type') {\n          if (filterValue === 'cat' && petValue !== 'cat') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n          if (filterValue === 'dog' && petValue !== 'dog') {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else if (filterKey === 'breed') {\n          // Handle the \"breed\" filter\n          const primaryBreed = pet.breeds?.primary?.toLowerCase();\n          if (primaryBreed !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        } else {\n          // For other filters, compare values directly\n          if (petValue !== filterValue) {\n            matchesAllFilters = false;\n            break; // Exit the loop early if there's no match\n          }\n        }\n      }\n  \n      // If the pet matches all filters, include it in the results\n      return matchesAllFilters;\n    });\n  };\n  \n  const renderPetCards = () => {\n    if (!loading) {\n      // Apply filters to the cached data\n      const filteredResults = applyFilters(cachedData, selectedFilters);\n\n      if (filteredResults.length > 0) {\n        return filteredResults.map((pet) => (\n          <PetCard\n            key={pet.id}\n            pet={pet}\n            addToFavorites={addToFavorites}\n            removeFromFavorites={removeFromFavorites}\n            isFavorite={favoritePets.some((favoritePet) => favoritePet.id === pet.id)}\n          />\n        ));\n      } else {\n        return <p>No pets match your criteria.</p>;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n  };\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"sidebar\">\n        <div className=\"filters\">\n          {/* Pass the handleFilterChange function to the Filter component */}\n          <Filter onFilterChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"content\">\n        {/* Render pet cards based on filtered search results */}\n        <div className=\"pet-card-list\">{renderPetCards()}</div>\n        <div className=\"pagination-horizontal\">\n          {Array.from({ length: totalPages }, (_, index) => (\n            <button\n              key={index}\n              onClick={() => handlePageChange(index + 1)}\n              className={currentPageRef.current === index + 1 ? 'active' : ''}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js",[],[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/Filter.js",["146"],[],"import React, { useState, useEffect } from 'react';\nimport popularDogBreeds from './popularDogBreeds';\n\nfunction Filter({ onFilterChange }) {\n  const [selectedFilters, setSelectedFilters] = useState({\n    type: 'any',\n    breed: 'any',\n    age: 'any',\n    gender: 'any',\n    size: 'any',\n    coat: 'any',\n  });\n\n  const handleFilterSelect = (filterName, event) => {\n    const selectedValue = event.target.value;\n\n    // Check if the filterName is \"breed\" and if the selectedValue is not \"any\"\n    if (filterName === 'breed' && selectedValue !== 'any') {\n      setSelectedFilters((prevFilters) => ({\n        ...prevFilters,\n        breed: selectedValue, // Set the breed filter to the selected value\n      }));\n      // Call the parent component's function to update filters\n      onFilterChange({\n        ...selectedFilters,\n        breed: selectedValue,\n      });\n    } else {\n      setSelectedFilters((prevFilters) => ({\n        ...prevFilters,\n        [filterName]: selectedValue,\n      }));\n      // Call the parent component's function to update filters\n      onFilterChange({\n        ...selectedFilters,\n        [filterName]: selectedValue,\n      });\n    }\n  };\n\n\n  const renderFilters = () => {\n    if (selectedFilters.type === 'cat') {\n      return (\n        <>\n          <div className=\"filter-group\">\n            <label htmlFor=\"age\">Age:</label>\n            <select\n              id=\"age\"\n              value={selectedFilters.age}\n              onChange={(event) => handleFilterSelect('age', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"baby\">Baby</option>\n              <option value=\"young\">Young</option>\n              <option value=\"adult\">Adult</option>\n              <option value=\"senior\">Senior</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label htmlFor=\"size\">Size:</label>\n            <select\n              id=\"size\"\n              value={selectedFilters.size}\n              onChange={(event) => handleFilterSelect('size', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"large\">Large</option>\n              <option value=\"xlarge\">X-Large</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label htmlFor=\"gender\">Gender:</label>\n            <select\n              id=\"gender\"\n              value={selectedFilters.gender}\n              onChange={(event) => handleFilterSelect('gender', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"unknown\">Unknown</option>\n            </select>\n          </div>\n          {/* Add more cat-specific filters here */}\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"filter-group\">\n            <label htmlFor=\"breed\">Breed:</label>\n            <select\n              id=\"breed\"\n              value={selectedFilters.breed}\n              onChange={(event) => handleFilterSelect('breed', event)}\n            >\n              <option value=\"any\">Any</option>\n              {popularDogBreeds.map((breed, index) => (\n                <option key={index} value={breed}>\n                  {breed}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label htmlFor=\"age\">Age:</label>\n            <select\n              id=\"age\"\n              value={selectedFilters.age}\n              onChange={(event) => handleFilterSelect('age', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"baby\">Baby</option>\n              <option value=\"young\">Young</option>\n              <option value=\"adult\">Adult</option>\n              <option value=\"senior\">Senior</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label htmlFor=\"gender\">Gender:</label>\n            <select\n              id=\"gender\"\n              value={selectedFilters.gender}\n              onChange={(event) => handleFilterSelect('gender', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n              <option value=\"unknown\">Unknown</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label htmlFor=\"size\">Size:</label>\n            <select\n              id=\"size\"\n              value={selectedFilters.size}\n              onChange={(event) => handleFilterSelect('size', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"small\">Small</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"large\">Large</option>\n              <option value=\"xlarge\">X-Large</option>\n            </select>\n          </div>\n          <div className=\"filter-group\">\n            <label htmlFor=\"coat\">Coat:</label>\n            <select\n              id=\"coat\"\n              value={selectedFilters.coat}\n              onChange={(event) => handleFilterSelect('coat', event)}\n            >\n              <option value=\"any\">Any</option>\n              <option value=\"short\">Short</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"long\">Long</option>\n              <option value=\"wire\">Wire</option>\n              <option value=\"hairless\">Hairless</option>\n              <option value=\"curly\">Curly</option>\n            </select>\n          </div>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"filters\">\n      <h2>Filters</h2>\n      <div className=\"filter-group\">\n        <label htmlFor=\"type\">Type:</label>\n        <select\n          id=\"type\"\n          value={selectedFilters.type}\n          onChange={(event) => handleFilterSelect('type', event)}\n        >\n          <option value=\"any\">Any</option>\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n        </select>\n      </div>\n      {renderFilters()}\n    </div>\n  );\n}\n\nexport default Filter;","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetCard.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/Home.js",["147","148"],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/About.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/Resources.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SignIn.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SignUp.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SampleData.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/popularDogBreeds.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/FavoritesPage.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetDetail.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetDetails.js",["149","150"],[],"import React, { useState, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport '../styles/PetDetails.css';\n\nconst PetDetails = () => {\n  const location = useLocation();\n  const petData = location.state && location.state.petData;\n\n  if (!petData) {\n    return <p className=\"error-message\">Error: Pet not found</p>;\n  }\n\n  return (\n    <div className=\"pet-details\">\n      <div className=\"back-link-container\">\n        {/* Use Link for navigation */}\n        <Link to=\"/find-a-pet\" className=\"back-link\">\n          Go Back\n        </Link>\n      </div>\n      <div className=\"photos\">\n        <div className=\"name-id-container\">\n          <h2 className=\"pet-name\">{petData.name}</h2>\n          <h4>Animal ID: {petData.id}</h4>\n        </div>\n        <div className=\"photo-grid\">\n          {petData.photos && petData.photos.map((photo, index) => (\n            <img\n              key={index}\n              src={photo.medium}\n              alt={`Pet ${index + 1}`}\n              className={`pet-photo ${petData.photos.length === 1 ? 'single-photo' : ''}`}\n            />\n          ))}\n        </div>\n      </div>\n      <div className=\"petfinder-button\">\n        <a href={petData.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span> I want {petData.gender === \"Female\" ? \"her\" : \"him\"}! </span>\n        </a>\n      </div>\n      <div className=\"pet-info\">\n        <div className=\"pet-info-section\">\n          <p><strong>Age:</strong> {petData.age ? petData.age : \"Unknown\"}</p>\n          <p><strong>Gender:</strong> {petData.gender ? petData.gender : \"Unknown\"}</p>\n          <p><strong>Size:</strong> {petData.size ? petData.size : \"Unknown\"}</p>\n          <p><strong>Status:</strong> {petData.status ? petData.status : \"Unknown\"}</p>\n        </div>\n        <div className=\"pet-info-section\">\n          <p><strong>Primary Breed:</strong> {petData.breeds.primary ? petData.breeds.primary : \"Unknown\"}</p>\n          <p><strong>Secondary Breed:</strong> {petData.breeds.secondary ? petData.breeds.secondary : \"Unknown\"}</p>\n          <p><strong>Mixed:</strong> {petData.breeds.mixed ? 'Yes' : 'No'}</p>\n        </div>\n        <div className=\"pet-info-section\">\n          <p><strong>Spayed/Neutered:</strong> {petData.attributes.spayed_neutered ? 'Yes' : 'No'}</p>\n          <p><strong>House Trained:</strong> {petData.attributes.house_trained ? 'Yes' : 'No'}</p>\n          <p><strong>Special Needs:</strong> {petData.attributes.special_needs ? 'Yes' : 'No'}</p>\n          <p><strong>Shots Current:</strong> {petData.attributes.shots_current ? 'Yes' : 'No'}</p>\n        </div>\n      </div>\n      <div className=\"contact-info\">\n        <h3>Contact Information</h3>\n        <p><strong>Email:</strong> {petData.contact.email ? petData.contact.email : \"Unknown\"}</p>\n        <p><strong>Phone:</strong> {petData.contact.phone ? petData.contact.phone : \"Unknown\"}</p>\n        <p><strong>Location:</strong> \n          {petData.contact.address.address1} {petData.contact.address.city}, {petData.contact.address.state}\n        </p>\n      </div>\n    </div>\n  );\n};  \n\nexport default PetDetails;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/components/AllPetsPage.js",["151"],[],{"ruleId":"152","severity":1,"message":"153","line":17,"column":10,"nodeType":"154","messageId":"155","endLine":17,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":17,"column":27,"nodeType":"154","messageId":"155","endLine":17,"endColumn":45},{"ruleId":"152","severity":1,"message":"157","line":8,"column":16,"nodeType":"154","messageId":"155","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"158","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":23},{"ruleId":"152","severity":1,"message":"159","line":11,"column":9,"nodeType":"154","messageId":"155","endLine":11,"endColumn":20},{"ruleId":"152","severity":1,"message":"160","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"161","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"152","severity":1,"message":"162","line":27,"column":10,"nodeType":"154","messageId":"155","endLine":27,"endColumn":17},{"ruleId":"152","severity":1,"message":"163","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"160","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"164","line":9,"column":23,"nodeType":"154","messageId":"155","endLine":9,"endColumn":37},"no-unused-vars","'isSignInVisible' is assigned a value but never used.","Identifier","unusedVar","'setIsSignInVisible' is assigned a value but never used.","'setUser' is assigned a value but never used.","'searchResults' is assigned a value but never used.","'minimumPets' is assigned a value but never used.","'useEffect' is defined but never used.","'SearchFilters' is defined but never used.","'petData' is assigned a value but never used.","'useState' is defined but never used.","'setCurrentPage' is assigned a value but never used."]