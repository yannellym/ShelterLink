[{"/Users/yannellym/Desktop/iwantapet/frontend/src/index.js":"1","/Users/yannellym/Desktop/iwantapet/frontend/src/App.js":"2","/Users/yannellym/Desktop/iwantapet/frontend/src/components/UserPreferencesForm.js":"3","/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js":"4","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetCard.js":"5","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetDetails.js":"6","/Users/yannellym/Desktop/iwantapet/frontend/src/hooks/useAnimalsBasedOnPreferencesAPI.js":"7","/Users/yannellym/Desktop/iwantapet/frontend/src/hooks/usePetFinderAPI.js":"8","/Users/yannellym/Desktop/iwantapet/frontend/src/data/faqData.js":"9","/Users/yannellym/Desktop/iwantapet/frontend/src/data/popularDogBreeds.js":"10","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Footer.js":"11","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Header.js":"12","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Home.js":"13","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/About.js":"14","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/PetAdoption.js":"15","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/SignUp.js":"16","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/PetFoster.js":"17","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Faqs.js":"18","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/LocationSpecificPets.js":"19","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/SignIn.js":"20","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/ResourcesSection.js":"21","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Filter.js":"22","/Users/yannellym/Desktop/iwantapet/frontend/src/components/CategoryCard.js":"23","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/FindApet.js":"24","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Favorites.js":"25","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Resources.js":"26","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/AllPets.js":"27"},{"size":308,"mtime":1698883942656,"results":"28","hashOfConfig":"29"},{"size":3480,"mtime":1698951126577,"results":"30","hashOfConfig":"29"},{"size":7117,"mtime":1698771939155,"results":"31","hashOfConfig":"29"},{"size":5915,"mtime":1698771915799,"results":"32","hashOfConfig":"29"},{"size":3101,"mtime":1698951552925,"results":"33","hashOfConfig":"29"},{"size":4358,"mtime":1698771901446,"results":"34","hashOfConfig":"29"},{"size":3564,"mtime":1698154335624,"results":"35","hashOfConfig":"29"},{"size":781,"mtime":1697923275389,"results":"36","hashOfConfig":"29"},{"size":7275,"mtime":1698425977761,"results":"37","hashOfConfig":"29"},{"size":944,"mtime":1696373905137,"results":"38","hashOfConfig":"29"},{"size":1618,"mtime":1697128476303,"results":"39","hashOfConfig":"29"},{"size":1164,"mtime":1694018761360,"results":"40","hashOfConfig":"29"},{"size":6116,"mtime":1698883942659,"results":"41","hashOfConfig":"29"},{"size":2403,"mtime":1696962303319,"results":"42","hashOfConfig":"29"},{"size":2014,"mtime":1698883942660,"results":"43","hashOfConfig":"29"},{"size":1285,"mtime":1698881081380,"results":"44","hashOfConfig":"29"},{"size":1881,"mtime":1698427922330,"results":"45","hashOfConfig":"29"},{"size":889,"mtime":1698883942657,"results":"46","hashOfConfig":"29"},{"size":4224,"mtime":1698884865711,"results":"47","hashOfConfig":"29"},{"size":1031,"mtime":1693524655484,"results":"48","hashOfConfig":"29"},{"size":973,"mtime":1698883942660,"results":"49","hashOfConfig":"29"},{"size":6300,"mtime":1698883942658,"results":"50","hashOfConfig":"29"},{"size":657,"mtime":1698771838892,"results":"51","hashOfConfig":"29"},{"size":10187,"mtime":1698954052594,"results":"52","hashOfConfig":"29"},{"size":1227,"mtime":1698883942658,"results":"53","hashOfConfig":"29"},{"size":1883,"mtime":1698771721684,"results":"54","hashOfConfig":"29"},{"size":4367,"mtime":1698883942657,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hw3ie1",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yannellym/Desktop/iwantapet/frontend/src/index.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/App.js",["143","144"],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/UserPreferencesForm.js",["145"],[],"// form to match the user to a pet\nimport React, { useState } from 'react';\nimport '../styles/UserPreferencesForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst UserPreferencesForm = ({ onPreferencesSubmit }) => {\n  const ageCategories = {\n    1: 'Baby',\n    2: 'Young',\n    3: 'Adult',\n    4: 'Senior',\n  };\n\n  const [type, setType] = useState('dog');\n  const [size, setSize] = useState('Large');\n  const [age, setAge] = useState(1);\n  const [selectedAgeCategory, setSelectedAgeCategory] = useState(ageCategories[1]); \n  const [gender, setGender] = useState('Male');\n  const [temperament, setTemperament] = useState([]);\n  const [messageVisible, setMessageVisible] = useState(false); // State to control message visibility\n  // Additional state to manage the visibility of the spinner\n  const [isFindingMatch, setIsFindingMatch] = useState(false);\n\n\n  const handleAgeChange = (event) => {\n    const selectedAge = Number(event.target.value);\n    setAge(selectedAge);\n    setSelectedAgeCategory(ageCategories[selectedAge]);\n    setMessageVisible(selectedAge !== 0); // Check if both \"Type\" and \"Age\" are set\n  };\n\n  const handleTemperamentChange = (event) => {\n    const value = event.target.value;\n    const selectedTemperaments = [...temperament];\n\n    if (selectedTemperaments.includes(value)) {\n      // Remove the temperament if it's already selected\n      selectedTemperaments.splice(selectedTemperaments.indexOf(value), 1);\n    } else {\n      // Add the temperament if it's not selected\n      selectedTemperaments.push(value);\n    }\n\n    setTemperament(selectedTemperaments);\n   \n  };\n\n  const getSelectedPreferences = () => {\n    const preferences = {\n      pet: type,\n      size: size,\n      age: selectedAgeCategory,\n      gender: gender,\n      temperament: temperament.join(', '),\n    };\n\n    const formattedMessage = `You want a ${preferences.pet} of ${preferences.size} size, ${preferences.gender}, plus a ${preferences.age}. This pet will be: ${preferences.temperament}.`;\n\n    return formattedMessage;\n  };\n  const [buttonText, setButtonText] = useState('Find My Match'); // State to manage button text\n\n  \n  const handleSubmit =  async(event) => {\n    event.preventDefault();\n\n    const userPreferences = {\n      type,\n      size,\n      age: selectedAgeCategory,\n      gender,\n      temperament,\n    };\n    setIsFindingMatch(true); // Show the spinner when submitting\n    setButtonText('Finding Match...'); // Update button text to indicate \"Finding Match\"\n    // Simulate a call for 3 seconds\n    await new Promise((resolve) => setTimeout(resolve, 3000));\n    // find the match\n    onPreferencesSubmit(userPreferences);\n  };\n\n\n  return (\n    <div className=\"container\">\n      <h2>Find your perfect match:</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-options\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"type\"\n              value=\"Dog\"\n              checked={type === 'Dog'}\n              onChange={() => setType('Dog')}\n            />{' '}\n            Dog 🐶\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"type\"\n              value=\"Cat\"\n              checked={type === 'Cat'}\n              onChange={() => setType('Cat')}\n            />{' '}\n            Cat 🐱\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"type\"\n              value=\"other\"\n              checked={type === 'Barnyard'}\n              onChange={() => setType('Barnyard')}\n            />{' '}\n            Other 🐴🐓🐷\n          </label>\n        </div>\n        <div className=\"form-options\">\n          <div className=\"form-option\">\n            <label htmlFor=\"size\">Size:</label>\n            <select id=\"size\" value={size} onChange={(event) => setSize(event.target.value)}>\n              <option value=\"any\">Any</option>\n              <option value=\"Small\">Small</option>\n              <option value=\"Medium\">Medium</option>\n              <option value=\"Large\">Large</option>\n            </select>\n          </div>\n          <div className=\"form-option\">\n            <label htmlFor=\"gender\">Gender:</label>\n            <select id=\"gender\" value={gender} onChange={(event) => setGender(event.target.value)}>\n              <option value=\"any\">Any</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Male\">Male</option>\n            </select>\n          </div>\n        </div>\n\n        <label>Age Range:</label>\n        <input\n          type=\"range\"\n          id=\"age\"\n          value={age}\n          onChange={handleAgeChange}\n          min=\"1\"\n          max=\"4\" \n        />\n        <span>{ageCategories[age]}</span> {/* Display the age category */}\n\n        <label>Characteristics:</label>\n        <div className=\"temperament-options\">\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"temperament\"\n              value=\"Friendly\"\n              checked={temperament.includes('Friendly')}\n              onChange={handleTemperamentChange}\n            />{' '}\n            Friendly 🙂\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"temperament\"\n              value=\"Playful\"\n              checked={temperament.includes('Playful')}\n              onChange={handleTemperamentChange}\n            />{' '}\n            Playful 🎾\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"temperament\"\n              value=\"Smart\"\n              checked={temperament.includes('Smart')}\n              onChange={handleTemperamentChange}\n            />{' '}\n            Smart 😌\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"temperament\"\n              value=\"Gentle\"\n              checked={temperament.includes('Gentle')}\n              onChange={handleTemperamentChange}\n            />{' '}\n            Gentle 🥹\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"temperament\"\n              value=\"Funny\"\n              checked={temperament.includes('Funny')}\n              onChange={handleTemperamentChange}\n            />{' '}\n            Funny 🤪\n          </label>\n        </div>\n        <div className=\"selected-preferences\">\n          <h3>Selected Preferences:</h3>\n          <p>{getSelectedPreferences()}</p>\n        </div>\n        {messageVisible && (\n          <div className=\"message\">\n            <p>Great choices. Let's find your perfect match!</p>\n          </div>\n        )}\n        <button className= \"find-match-button\" type=\"submit\">  {isFindingMatch ? (\n          <FontAwesomeIcon icon={faSpinner} spin /> // Display spinner when isFindingMatch is true\n          ) : (\n            'Find My Match' // Display \"Find My Match\" text when isFindingMatch is false\n          )}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserPreferencesForm;\n",[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/SearchBar.js",["146","147","148","149"],[],"// search bar in the homepage\nimport React, { useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/SearchBar.css';\nimport PlacesAutocomplete, {\n  geocodeByAddress\n} from 'react-places-autocomplete';\nimport { Link } from 'react-router-dom';\n\nconst SearchBar = ({ onSearch }) => {\n  const [searchText, setSearchText] = useState('');\n  const [petType, setPetType] = useState('');\n  const [showLocationOptions, setShowLocationOptions] = useState(false);\n  const [showLocationMessage, setShowLocationMessage] = useState(false);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [locationButtonClicked, setLocationButtonClicked] = useState(false);\n  const [shareLocation, setShareLocation] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSearch = async () => {\n    if (searchText && petType) {\n      // Extract the ZIP code from the user's input\n      const zipCode = searchText.match(/\\b\\d{5}\\b/);\n      console.log(zipCode)\n      if (zipCode) {\n        const apiEndpoint = `http://localhost:3002/api/petfinder?perPage=200&location=${zipCode}&type=${petType}`;\n  \n        try {\n          const response = await fetch(apiEndpoint);\n          if (response.ok) {\n            const data = await response.json();\n            console.log(data, \"data\");\n            setDataLoaded(true);\n  \n            // Include the favorited information in the state\n            navigate('/location-specific-pets', {\n              state: {\n                petType,\n                searchText: zipCode[0] // Set searchText to the extracted ZIP code\n              },\n            });\n          } else {\n            console.error('API request failed:', response.statusText);\n          }\n        } catch (error) {\n          console.error('API request error:', error);\n        }\n      } else {\n        alert('Please enter a valid ZIP code to search.');\n      }\n    } else {\n      alert('Please enter both location and pet type to search.');\n    }\n  };\n  \n  \n\n  function isZipCode(text) {\n    return /^\\d{5}$/.test(text);\n  }\n\n  const handleSelect = async (address, placeId) => {\n    setSearchText('');\n    setShowLocationOptions(false);\n    setSearchText(address);\n  }\n\n  const searchOptions = {\n    types: isZipCode(searchText) ? ['(regions)'] : ['(cities)'],\n    componentRestrictions: { country: 'us' },\n  };\n\n  const handleShareLocation = async () => {\n    setShareLocation(true);\n  \n    if (\"geolocation\" in navigator) {\n      try {\n        const position = await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(resolve, reject);\n        });\n        const { coords } = position;\n        const { latitude, longitude } = coords;\n        const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`);\n        const data = await response.json();\n        const zipCode = data.address.postcode;\n  \n        if (zipCode) {\n          setSearchText(zipCode);\n        }\n      } catch (error) {\n        console.error(\"Error getting zip code:\", error);\n      }\n    } else {\n      alert(\"Geolocation is not supported in your browser\");\n    }\n  \n    // Reset the button text after sharing location\n    setShowLocationMessage(false);\n  };\n\n  useEffect(() => {\n    if (locationButtonClicked) {\n      setShowLocationMessage(false);\n    }\n  }, [locationButtonClicked]);\n\n  const handleInputClick = () => {\n    setShowLocationMessage(true);\n  };\n\n  const isSearchDisabled = !searchText || !petType;\n\n  return (\n    <div className=\"search-bar\">\n      <div className=\"search-container\">\n        <div className=\"search-input-container\">\n          <PlacesAutocomplete\n            value={searchText}\n            onChange={setSearchText}\n            onSelect={handleSelect}\n            searchOptions={searchOptions}\n          >\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div>\n                <input\n                  {...getInputProps({\n                    placeholder: 'Enter zipcode, city, or state',\n                    className: 'search-input',\n                    onClick: handleInputClick,\n                  })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map((suggestion) => (\n                    <div\n                      {...getSuggestionItemProps(suggestion)}\n                      className=\"suggestion-item\"\n                    >\n                      {suggestion.description}\n                    </div>\n                  ))}\n                </div>\n                {showLocationMessage && (\n                  <button\n                    className={`location-button ${locationButtonClicked ? 'blue-border' : ''}`}\n                    onClick={handleShareLocation}\n                  >\n                    {shareLocation? 'Sharing Location...' : 'Share Location 📍'}\n                  </button>\n                )}\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n        <select\n          value={petType}\n          onChange={(e) => setPetType(e.target.value)}\n          className=\"search-select\"\n        >\n          <option value=\"\">Select pet type</option>\n          <option value=\"dog\">Dog</option>\n          <option value=\"cat\">Cat</option>\n          <option value=\"horse\">Horse</option>\n          <option value=\"bird\">Bird</option>\n          <option value=\"barnyard\">Barnyard</option>\n        </select>\n        <Link to=\"/location-specific-pets\">\n          <button\n            className={`search-button ${isSearchDisabled ? 'search-button-disabled' : ''}`}\n            onClick={handleSearch}\n            disabled={isSearchDisabled}\n          >\n            Search\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetCard.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/PetDetails.js",["150"],[],"// card to display a detailed view of the pet's information\nimport React, { useState } from 'react';\nimport {useNavigate} from 'react-router-dom';\nimport '../styles/PetDetails.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport coming_soon from \"../images/coming_soon.png\";\n\nconst PetDetails = ({addToFavorites, removeFromFavorites, isFavorite }) => {\n  const [favorited, setFavorited] = useState(isFavorite);\n\n  // Extract the 'petData' from the query parameter in the URL\n  const searchParams = new URLSearchParams(window.location.search);\n  const petData = JSON.parse(decodeURIComponent(searchParams.get('petData')));\n  \n  // const navigate = useNavigate();\n  console.log(petData);\n\n  if (!petData) {\n    return <p className=\"error-message\">Error: Pet not found</p>;\n  }\n\n  const handleToggleFavorite = () => {\n    setFavorited(!favorited);\n    if (favorited) {\n      removeFromFavorites(petData.id);\n    } else {\n      addToFavorites(petData);\n    }\n  };\n\n  // const handleGoBack = () => {\n  //   console.log(\"clicking\")\n  //   navigate(-1); // Go back to the previous page\n  // };\n\n  return (\n    <div className=\"pet-details\">\n      {/* <div className=\"back-link-container\">\n        <button onClick={handleGoBack} className=\"back-link\">\n          Go Back\n        </button>\n      </div> */}\n      <button\n        className={`favorite-heart-${favorited ? 'favorited' : 'unfavorited'}`}\n        onClick={handleToggleFavorite}\n        tabIndex=\"0\"\n      >\n        <FontAwesomeIcon icon={faHeart} />\n      </button>\n      <div className=\"photos\">\n        <div className=\"name-id-container\">\n          <h2 className=\"pet-name\">{petData.name}</h2>\n          <h4>Animal ID: {petData.id}</h4>\n        </div>\n        <div className=\"photo-grid\">\n        {petData.photos && petData.photos.length > 0 ? (\n          petData.photos.map((photo, index) => (\n            <img\n              key={index}\n              src={photo.medium}\n              alt={`Pet ${index + 1}`}\n              className={`pet-photo ${petData.photos.length === 1 ? 'single-photo' : ''}`}\n            />\n          ))\n        ) : (\n          <img\n            src={coming_soon} \n            alt=\"Fallback\"\n            className=\"fallback-photo\"\n          />\n        )}\n        </div>\n      </div>\n      <p>{petData.description}</p>\n      <div className=\"petfinder-button\">\n        <a href={petData.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span> I want {petData.gender === \"Female\" ? \"her\" : \"him\"}! </span>\n        </a>\n      </div>\n      <div className=\"pet-info\">\n        <div className=\"pet-info-section\">\n          <p><strong>Age:</strong> {petData.age ? petData.age : \"Unknown\"}</p>\n          <p><strong>Gender:</strong> {petData.gender ? petData.gender : \"Unknown\"}</p>\n          <p><strong>Size:</strong> {petData.size ? petData.size : \"Unknown\"}</p>\n          <p><strong>Status:</strong> {petData.status ? petData.status : \"Unknown\"}</p>\n        </div>\n        <div className=\"pet-info-section\">\n          <p><strong>Primary Breed:</strong> {petData.breeds.primary ? petData.breeds.primary : \"Unknown\"}</p>\n          <p><strong>Secondary Breed:</strong> {petData.breeds.secondary ? petData.breeds.secondary : \"Unknown\"}</p>\n          <p><strong>Mixed:</strong> {petData.breeds.mixed ? 'Yes' : 'No'}</p>\n        </div>\n        <div className=\"pet-info-section\">\n          <p><strong>Spayed/Neutered:</strong> {petData.attributes.spayed_neutered ? 'Yes' : 'No'}</p>\n          <p><strong>House Trained:</strong> {petData.attributes.house_trained ? 'Yes' : 'No'}</p>\n          <p><strong>Special Needs:</strong> {petData.attributes.special_needs ? 'Yes' : 'No'}</p>\n          <p><strong>Shots Current:</strong> {petData.attributes.shots_current ? 'Yes' : 'No'}</p>\n        </div>\n      </div>\n      <div className=\"contact-info\">\n        <h3>Contact Information</h3>\n        <p><strong>Email:</strong> {petData.contact.email ? petData.contact.email : \"Unknown\"}</p>\n        <p><strong>Phone:</strong> {petData.contact.phone ? petData.contact.phone : \"Unknown\"}</p>\n        <p><strong>Location:</strong> \n          {petData.contact.address.address1} {petData.contact.address.city}, {petData.contact.address.state}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PetDetails;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/hooks/useAnimalsBasedOnPreferencesAPI.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/hooks/usePetFinderAPI.js",["151","152"],[],"// usePetfinderAPI.js\nimport { useState, useEffect } from 'react';\n\nfunction usePetfinderAPI(endpoint, dependencies) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(endpoint);\n        if (!response.ok) {\n          throw new Error(`Request failed with status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, dependencies);\n\n  return { data, loading, error };\n}\n\nexport default usePetfinderAPI;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/data/faqData.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/data/popularDogBreeds.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Footer.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Header.js",["153"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Header.css';\n\nimport ShelterLinkLogo from '../images/ShelterLinkw.png';\n\nconst Header = () => {\n  const [user, setUser] = useState(null); // Replace with your user state logic\n\n  return (\n    <header className=\"header\">\n      {/* Logo */}\n      <div className=\"logo\">\n        <img src={ShelterLinkLogo} alt=\"ShelterLink Logo\" />\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"main-navigation\">\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/find-a-pet\">Find a pet</Link></li>\n          <li><Link to=\"/about\">About</Link></li>\n          <li><Link to=\"/resources\">Resources</Link></li>\n          <li><Link to=\"/favorites\">Favorites</Link></li>\n        </ul>\n      </nav>\n\n      {/* User profile */}\n      <div className=\"user-profile\">\n        {user ? (\n          <span>{user.name}</span>\n        ) : (\n          <div className=\"nav-item\">\n            <Link to=\"/SignIn\">\n              <button>Sign In</button>\n            </Link>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Home.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/About.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/PetAdoption.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/SignUp.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/PetFoster.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Faqs.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/LocationSpecificPets.js",["154","155"],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/SignIn.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/ResourcesSection.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Filter.js",["156"],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/components/CategoryCard.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/FindApet.js",["157","158","159","160"],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Favorites.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/Resources.js",[],[],"/Users/yannellym/Desktop/iwantapet/frontend/src/pages/AllPets.js",["161","162"],[],{"ruleId":"163","severity":1,"message":"164","line":21,"column":10,"nodeType":"165","messageId":"166","endLine":21,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":21,"column":27,"nodeType":"165","messageId":"166","endLine":21,"endColumn":45},{"ruleId":"163","severity":1,"message":"168","line":62,"column":10,"nodeType":"165","messageId":"166","endLine":62,"endColumn":20},{"ruleId":"163","severity":1,"message":"169","line":6,"column":3,"nodeType":"165","messageId":"166","endLine":6,"endColumn":19},{"ruleId":"163","severity":1,"message":"170","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":29},{"ruleId":"163","severity":1,"message":"171","line":15,"column":10,"nodeType":"165","messageId":"166","endLine":15,"endColumn":20},{"ruleId":"163","severity":1,"message":"172","line":16,"column":33,"nodeType":"165","messageId":"166","endLine":16,"endColumn":57},{"ruleId":"163","severity":1,"message":"173","line":3,"column":9,"nodeType":"165","messageId":"166","endLine":3,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":26,"column":6,"nodeType":"165","endLine":26,"endColumn":18},{"ruleId":"174","severity":1,"message":"176","line":26,"column":6,"nodeType":"165","endLine":26,"endColumn":18,"suggestions":"177"},{"ruleId":"163","severity":1,"message":"178","line":8,"column":16,"nodeType":"165","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"163","severity":1,"message":"179","line":27,"column":38,"nodeType":"165","messageId":"166","endLine":27,"endColumn":43},{"ruleId":"174","severity":1,"message":"180","line":62,"column":6,"nodeType":"181","endLine":62,"endColumn":28,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"183","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"184","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"163","severity":1,"message":"185","line":17,"column":10,"nodeType":"165","messageId":"166","endLine":17,"endColumn":24},{"ruleId":"174","severity":1,"message":"186","line":63,"column":6,"nodeType":"181","endLine":63,"endColumn":8,"suggestions":"187"},{"ruleId":"163","severity":1,"message":"188","line":244,"column":9,"nodeType":"165","messageId":"166","endLine":244,"endColumn":30},{"ruleId":"174","severity":1,"message":"189","line":91,"column":6,"nodeType":"181","endLine":91,"endColumn":29,"suggestions":"190"},{"ruleId":"163","severity":1,"message":"191","line":101,"column":9,"nodeType":"165","messageId":"166","endLine":101,"endColumn":16},"no-unused-vars","'isSignInVisible' is assigned a value but never used.","Identifier","unusedVar","'setIsSignInVisible' is assigned a value but never used.","'buttonText' is assigned a value but never used.","'geocodeByAddress' is defined but never used.","'showLocationOptions' is assigned a value but never used.","'dataLoaded' is assigned a value but never used.","'setLocationButtonClicked' is assigned a value but never used.","'useNavigate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'endpoint'. Either include it or remove the dependency array.",["192"],"'setUser' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateMaxPage'. Either include it or remove the dependency array.","ArrayExpression",["193"],"'useEffect' is defined but never used.","'searchResults' is assigned a value but never used.","'minPetsPerPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'fetchPetsForPage', and 'selectedFilters'. Either include them or remove the dependency array.",["194"],"'applyFiltersToResults' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPetsForCurrentPage'. Either include it or remove the dependency array.",["195"],"'endPage' is assigned a value but never used.",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [endpoint]",{"range":"204","text":"205"},"Update the dependencies array to be: [currentPage, maxPage, updateMaxPage]",{"range":"206","text":"207"},"Update the dependencies array to be: [currentPage, fetchPetsForPage, selectedFilters]",{"range":"208","text":"209"},"Update the dependencies array to be: [category, currentPage, fetchPetsForCurrentPage]",{"range":"210","text":"211"},[695,707],"[endpoint]",[1990,2012],"[currentPage, maxPage, updateMaxPage]",[2180,2182],"[currentPage, fetchPetsForPage, selectedFilters]",[3003,3026],"[category, currentPage, fetchPetsForCurrentPage]"]